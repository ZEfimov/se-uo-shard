use uo;
use os;

const GREEN_COLOR  := 0xff1;
const YELLOW_COLOR := 0xffff2a;

program PopUpMenu( who, what )
   var entries;
   if (what.isA(POLCLASS_ITEM))
      entries := MenuPlayerToItem(who, what);
   elseif (what.isa(POLCLASS_MOBILE) && what.npctemplate)
      return;
   elseif (who.cmdlevel >= 1 && what.isa(POLCLASS_MOBILE))
      entries := MenuGmToPlayer(who, what);
      var menuplayer := MenuPlayerToPlayer(who, what);
      foreach menu in (menuplayer.Keys())
         entries[menu] := menuplayer[menu];
      endforeach
   elseif (what.isa(POLCLASS_MOBILE) && who != what && !who.warmode)
      entries := MenuPlayerToPlayer(who, what);
   elseif (what == who)
      entries := MenuSelf(who);
   else
      return;
   endif

   if (entries.Keys() < 1)
      return;
   endif

   var menu := array{};
   var i := 1;
   foreach entry in (entries.Keys())
      menu[i] := entries[entry];
      i+=1;
      sleepms(1);
   endforeach
   
   var input := SendPopUpMenu( who, what, menu );
   if (!input)
      return;
   endif

   input := entries.Keys()[input];
   if (input == "info")
      return;
   elseif (input == "ficharp")
      Start_Script(":fls_core:commands/player/ficharp", array{ who, what });
      return;
   elseif (input == "profile")
      start_script(":charprofile:parseCharProfile", array{ who, "0", what });
      return;
   elseif (input == "arrastar")
      Start_Script(":tn:commands/player/arrastar", array{ who, what });
   elseif (input == "unmask")
      return;
   elseif (input == "soltar")
      Start_Script(":fls_core:commands/player/soltar", who);
      return;
   elseif (input == "revistar")
      Start_Script(":commands:/player/revistar", array{ who, what });
      return;
   elseif (input == "flip")
      Start_Script(":commands:/player/flip", array{ who, what });
      return;
   elseif (input == "fix")
      Start_Script(":tn:commands/player/fix", array{ who, what });
      return;
   elseif (input == "erguer")
      return;
   elseif (input == "change_spell")
      Start_Script(":magery:wands/changeSpell", array{who, what});
   elseif (input == "ficharp_rate")
      Start_Script(":fls_core:ficharp_rating", array{ who, what });
   endif

   return 1;
endprogram

function MenuSelf(who)
   var entries := struct{ "ficharp" := 3002023 };
   if (GetObjProperty(who, "corda"))
      entries.+soltar := struct{ "cliloc" := 3002026, color := YELLOW_COLOR };
   endif

   if (who.isClass("Clérigo"))
      entries.+blessings := 3002030;
   endif

   return entries;
endfunction

function MenuPlayerToPlayer(who, what)
   var entries := struct{
      "profile"   := struct{ cliloc := 3002021 }
   };

   if (Distance(who, what) <= 2)
      entries.+revistar := 3002028;
   endif

   var disguisable := GetObjProperty(who, "#can_unmask");
   if (disguisable == what.serial && GetObjProperty(what, "disfarce"))
      entries.+unmask := struct{ cliloc := 1078276, color := YELLOW_COLOR };
   endif

   if (GetObjProperty(what, "corda") && !GetObjProperty(what, "algemado"))
      "arrastar"  := struct{ cliloc := 3002013, color := YELLOW_COLOR };
   endif

   var last_rates := GetObjProperty(who, "ficharp_rates");
   if (last_rates && what.serial in last_rates && last_rates[what.serial] <= ReadGameClock())
      entries.+ficharp_rate := 3002029;
   endif

   return entries;
endfunction

function MenuGmToPlayer(who, what)
   return struct{
      "info"     := 3002022, 
      "ficharp"  := 3002023,
      "rolldice" := 3002025
   };
endfunction

function MenuPlayerToItem(who, what)
   var entries := struct{};

   if (!what.container) //hack to check if not in bag or held
      if (Distance(who, what) <= 2 && GetObjProperty(what, "canfix"))
         entries.+fix := 3002011;
      endif

      if (what.movable != 0)
         entries.+flip := 3002012;
      endif
   endif

   var spell_list := GetObjProperty(what, "spell_list");
   if (what.isMagicWeapon() && GetObjProperty(what, "serialid") == who.serial && spell_list.size() >= 1)
      entries.+change_spell := 3002015;
   endif

   if (what.isA(POLCLASS_CORPSE) && CoordinateDistance(what.x, what.y, who.x, who.y) <= 2)
      entries.+arrastar := struct{ cliloc := 3002013};
   endif

   return entries;
endfunction