-- POL100 --
10-22-2018 Turley:
  Fixed:   Undefined behaviour after ~20 days due to overflow in time measurment. This fixes both internal time measurments e.g. for repeating tasks, swing,.. and for the EScript function ReadMilliSecondClock() see below.
  Changed: ReadMillisecondClock() returns now a double instead of an integer to allow higher uptimes.
10-13-2018 Turley:
  Added:   syshook.cfg SystemMethod for defining object class method scripts.
           Like itemdesc method scripts overriding builtin methods is possible, the builtin method can be called when prefixing with _.
           For UObject classes like shown in the objref docs the inheritance is respected
           so methods defined for items will be usable in weapons and methods defined in equipment override uobject methods.
           Valid cfg keys are:
           uobject, item, equipment, lockable, map, multi, armor, weapon, door, container, boat,
           house, spellbook, corpse, npc, character, client, account, party, guild
           Itemdesc/Npctemplate specific method scripts will still be first checked.
  Note:    uoclient.cfg MethodScript entry is deprecated
10-12-2018 DevGIB:
  Changed: Added -1 as acceptable return from ConsumeAmmunition hook which will make the core continue with the normal ammunition checks.
10-07-2018 Turley:
  Added:   array.sorted_insert(obj, sub_index:=0, reverse:=0)
           assumes an already sorted array and inserts given obj. sub_index and reverse parameter have to match the sorting criteria of the array.
10-06-2018 DevGIB:
  Added:   ConsumeAmmunition syshook to hook the cores check for ammunition consumption during combat. Hook should return 1 if combat is to go ahead and 0 if the weapon should not fire.
09-07-2018 DevGIB:
  Changed: FindObjtypeInContainer(container, objtype, flags :=0 ) to recurse all containers from base container.
  Added:   Constants FINDOBJTYPE_RECURSIVE, FINDOBJTYPE_IGNORE_LOCKED and FINDOBJTYPE_ROOT_ONLY to UO.EM
  Added:   Flags to FindObjtypeInContainer() for only accessing root container, and bypassing locked container checks.
  Note:    THESE CHANGES TO FindObjtypeInContainer() WILL EFFECTIVELY CHANGE THE DEFAULT FUNCTIONALITY OF THE FUNCTION AS DEFAULT IS NOW TO RECURSE SUB CONTAINERS.
  Added:   Additional documentation to the Racalac escript guide to include additional information supplied by Yukiko.
07-27-2018 DevGIB:
  Added:   ListStaticsNearLocationOfType( x, y, z, range, objtype, flags := 0, realm := _DEFAULT_REALM ) to get a struct of statics near a location which match an objtype.
  Added:   ListStaticsNearLocationWithFlag( x, y, z, range, flags, realm := _DEFAULT_REALM ) to get a struct of statics near a location which have matching flags in the tiledata.
07-29-2018 Turley:
  Added:   ecompile.cfg NumberOfThreads
           forces N number of threads to be used for compilation, default is 0 which like before autodetects the number.
           cmd param -T can now be optionally extended with a number to override the cfg setting
07-19-2018 DevGIB:
  Added:   EncodeBase64(String) and DecodeBase64(String) to basic.em to enable people to encode and decode strings using base64 without requiring an escript function.
  
04-02-2018 Bodom:
  Removed: polcore().compiledate and polcore().compiletime
  Added:   polcore().compiledatetime

03-19-2018 Nando:
  Fixed:   Crash at shutdown when POL hasn't been correctly started.

02-26-2018 Nando:
  Added:   uoconvert now supports UOP files and will use them by default. If there is no
           map[N]LegacyMUL.uop in the UODataFileRoot, uoconvert will fall back to the
           old map[N].mul files. You can force uoconvert to convert from the old MULs by using
           readuop=0.

02-10-2018 Nando:
  Changed: POL099 is officially released after almost 10 years. Starting the work on POL100. 

-- POL099.1 --
02-11-2018 Nando:  
  Added:   range parameter to Accessible(chr, item, range := ACCESSIBLE_DEFAULT). 
           Valid values: range >= 0, range == ACCESSIBLE_DEFAULT or range == ACCESSIBLE_IGNOREDISTANCE.
		   The default range will be defined as the servspecopt entry "DefaultAccessibleRange". If that 
		   entry doesn't exist, the "DefaultDoubleclickRange" will be used instead (which defaults to 2).
  Fixed:   Accessible(chr, item) now checks for the distance to the item. Differently from the distance 
           of 2 tiles the docs stated, the allowed distance before was about 18 tiles. To recover the old behavior,
		   use ACCESSIBLE_IGNOREDISTANCE as range.

-- POL099 --
02-06-2018 Turley:
  Fixed:   fileaccess.cfg: Not specifying Directory entry behaves like before and gives access to all directories. (broken since 01-05-2018)
02-05-2018 Turley:
  Added:   Operator @
           used to receive a function object, which can later be used to call the underlying function with the same parameters/return value via the method ".call(..)"
  Note:    This object can only executed in the same script instance where it was created and cannot be saved/loaded from datafiles/cprops.
  Note:    Use cases:
           function genericItemLoop(func)
             for item in ...
               // complicated checks
               func.call(item);
             endfor
           endfunction
           function changecolor(item)
             item.color:=6;
           endfunction
           ...
           genericItemLoop(@changecolor);
           genericItemLoop(@changeY);

           // (fast) function table, instead of "if" cascade
           var look=dictionary;
           look["blubb"]:=@doSomething
           look["blah"]:=@doSomethingElse
           ...
           look[mykey].call();
          
  Changed: Version number of ecl files, recompilation needed.
           
01-07-2018 Kevin:
  Added:   basic::UnpackJSON(string)
           Given a string in JSON format, returns an eScript object representing that JSON value.
  Added:   basic::PackJSON(expr)
           Given an eScript expression (Int, Dbl, String, Array, Struct, Dict), returns a serialization of the object in JSON format.
01-05-2018 Turley:
  Added:   fileaccess.cfg Directory entry
           Can be definied multiple times in package syntax.
           ::config means config rootfolder, :mypkg:test means subfolder test of mypkg. Has only a meaning if AllowRemote is given. Limits the access to given folder and its subfolders.
  Added:   New type Boolean
           == != ! operators are implemented
           use new basic.em function Boolean(1/0) to create such type.
           see testsuite/escript/boolean in the sources for detailed scripts of what is possible.
01-04-2018 Kevin:
  Added:   os::HTTPRequest(url, method := "GET", options := struct{})
           Creates an HTTP request, and returns the returned data as a string.
12-23-2017 Turley:
  Added:   os:PerformanceMeasure(delta_seconds, max_scripts)
           Monitors for given number of seconds the instructions of all scripts. Returns:
           struct with the following members: 
           total_number_observed - number of scripts alive in the timespan
           total_instructions - sum of all instructions of the observed scripts
           scripts - array of structs (max number is given max_scripts param) sorted by instructions amount
           each scripts entry has the following members:
           name - script name, if attached with name/npctemplate
           instructions - number of executed instructions
           pid - PID of the script
           percent - percent of the total instruction amount

12-20-2017 Turley:
  Changed: Doubled the speed of custom method resolution.
10-20-2017 DevGIB:
  Changed: Added assume_string flag to OS::OpenConnection() to allow you to force the connection script to run as AUXSVC_ASSUME_STRING script option before the script loads in case of fast responding connections.
10-11-2017 DevGIB:
  Changed: Added params to OS::OpenConnection() to allow you to pass parameters to the script that is run for the connection.
09-23-2017 Turley:
  Added:   array.sort(int sub_index:=0) the optional parameter specifies the index used for sorting in the case of an array of arrays
09-10-2017 Turley:
  Added:   poltool uncompressgump
           unpacks and prints content of a compressed gump
           only parameter is a filename, which needs to contain a single 0xDD packetlog
  Added:   item member no_drop 1/0 r/w (itemdesc NoDrop)
           if set no drop of this item is allowed
           container/npc member no_drop_exception 1/0 r/w
           (itemdesc/npctemplate NoDropException)
           if set this container/npc is a valid target even if no_drop is set for the item
08-03-2017 Nando:
  Fixed:   Shutdown crash when using character method scripts.
07-31-2017 Nando:
  Fixed:   Interactive commands could cause a crash when used inside a run-to-completion script
           (e.g., syshooks, scripts ran via OS::run_script_to_completion() and method scripts). The 
           interactive commands	will now return an error if the script can't be blocked. 
		   (Note: this does not apply to critical scripts, which *can* block).
		   
		   Affected commands: 
		   UO::Target(), UO::TargetCoordinates(), UO::TargetMultiPlacement(), UO::SelectMenuItem(),
		   UO::SendDialogGump(), UO::SendGumpMenu(), UO::SendTextEntryGump(), UO::SendInstaResDialog(),
		   UO::SelectColor(), UO::SendPopupMenu(), UO::RequestInput(), Unicode::RequestInputUC()		   

07-23-2017 DevGIB:
  Added:   _DEFAULT_TEXT_REQUIREDCMD := 0 to uo.em which allows to set a minimum cmd level that broadcasts will be sent to.

  Changed: Broadcast( text, font := _DEFAULT_TEXT_FONT, color := _DEFAULT_TEXT_COLOR, requiredcmdlevel := _DEFAULT_TEXT_REQUIREDCMD )
           adding requiredcmdlevel argument which allows you to set a minimum cmd level that the broadcast will be sent to.
  Changed: No longer require a PID for GetProcess( pid  := "" ), not selecting a PID will use the PID of the parent script.
07-17-2017 Kevin:
  Fixed:   PrintTextAbove*CL() now behaves similarly to PrintTextAbove*() functions, displaying the
           object's description instead of "System".
05-28-2017 Turley:
  Removed: pol.cfg entry to disable assertions. A crash will anyway happen, thus it makes no sense and only hides the real reason.
05-28-2017 Nando:
  Fixed:   Crash when using SplitWords() in a script that was compiled with outdated .em files.
05-01-2017 Turley:
  Fixed:   Item.house property gets now reset on component remove
11-29-2016 Boberski:
  Added:   Support for TOL (Time of Legends) expantion.
10-23-2016 Nando:
  Added:   Member character.carrying_capacity (read only)
           Returns the current carrying capacity of a character, defined as:
              (40 + 3.5*STR + chr.carrying_capacity_mod)*ssopt.carrying_capacity_mod
   Note:   Characters can go above their carrying_capacity, but they will spend
           much more stamina to move according to movecost.cfg. Don't treat this
           as max_weight.
08-28-2016 Turley:
  Fixed:   Calculation of NPC AOS resistance/damage values
  Added:   Member object.specific_name
           returns 1 if a custom name is set. if its still the original (eg itemdesc) returns 0
03-27-2016 Nando:
  Added:   Option "ThreadStacktracesWhenStuck" to pol.cfg. Useful to debug the core when
           no clock movement occurs for more than 30 seconds. Defaults to false.
03-25-2016 Nando:
  Fixed:   Crashes when receiving very big packets.
03-24-2016 Nando:
  Fixed:   Crashes after deleting a component (hold, tillerman, plank) of a boat
03-23-2016 Nando:
  Fixed:   Possible crashes when a script teminates while executing a SQL command.
03-21-2016 Nando:
  Fixed:   Possible crashes when handling a client's response to menus
           created with CreateMenu()
03-02-2016 Nando:
  Changed: POL will default to use multithreading (Multithread = 1 in pol.cfg).
     Note: Multithread=0 is deprecated and likely buggy. It's possible that it doesn't
           even work at the moment. Because every OS should support threading by now,
           we see no reason to maintain two separate systems. Singlethread support will
           be removed in the next version.
03-02-2016 Nando & Turley:
  Fixed:   Possible crashes when sending events to npcs whose event queues were full.
02-29-2016 Nando & Turley:
  Fixed:   Data races when dealing with clients. Some other not-reproducible crashes
           should also go away now.
02-15-2016 Nando:
  Changed: UO::SendQuestArrow(x := -1, y := -1, target := "")
           This function will now work for HSA clients (version > 7.0.9), which
           require a larger packet. Target is ignored for older clients, but is
           required (and must be a valid Item or Character reference) for HSA 
           clients.           
  Added:   UO::SingleClick(who, what)
           This function will emulate a single-click from the client, sending
           the character name, guild and tags or the item description. Note
           that the client may display the item description wherever it had
           clicked before. "what" can be either a serial, item or character.
01-31-2016 Bodom:
  Added:   CProp profiler: helps detecting unused CProps.
           It can be enabled by using the new pol.cfg option "ProfileCProps".
           For better results, should be enabled before startup.
           Impacts on performance very slightly, but consumes an average of
           300 bytes of extra RAM for every CProp used.
           New polsys.em function LogCPropProfile() can be called to dump
           the profiling information into cpprofile.log.
01-30-2016 Bodom & Nando:
  Fixed:   Spoofing prevention on packet 0xD7 (custom housing)
01-22-2016 Bodom:
  Fixed:   Minor bug in ecompile allowing Double literals in the form "2d4".
           These were incorrectly interpreted as "2e4", meaning 20000 and
           leading to confusion with dice rolls. The compiler now issues
           an error instead.
01-20-2016 Bodom:
  Added:   New Item.house property, returns a reference to the house if the
           item is a component of it (listed in House.components()).
           This is the intended replacement for the previously removed CProp
           "house_serial": use item.house.serial instead of
           GetObjProperty(item, "house_serial").
12-27-2015 Bodom & Nando:
  Fixed:   Linux crash on shutdown
12-26-2015 Bodom:
  Fixed:   Bug in String.format()
           String tags were not correctly processed.
           "{name} you hit level {level}".format(struct{name:="Jane Doe", level:=4})
           now correctly formats as "Jane Doe you hit level 4" instead of
           "Jane Doe you hit level <invalid index: #2>"
12-18-2015 Bodom:
  Added:   New eScript escape sequence in strings "\xAA". Allows to specify a
           single character by its binary value (\x01 to \xFF). The value must
           always be 2 digits long, in hex, case insensitive (eg. \xA is not
           valid).
12-05-2015 Bodom:
  Added:   Buff Bar support
           New Character's addBuff(), delBuff() and clearBuffs() methods,
           please see docs for details and explanation.
           0xDF packets are automatically sent when needed (eg. at relogin).
           Buff Bar status is not saved, maybe it will be in future.
11-28-2015 Bodom:
  Added:   New Client object properties last_packet_at and last_activity_at
11-01-2015 Bodom:
  Added:   mysql_query() now supports a third "parameters" (array) argument.
           It can be used to safely replace "?" placeholders inside the query
           with corresponding array entries.
10-27-2015 Bodom:
  Added:   New pol.cfg option AllowMultiClientsPerAccount (default: false)
           When true, allows multiple characters from the same account to be
           logged in at the same time
  Fixed:   Items' CProps were loaded again from itemdesc.cfg at startup when deleted
10-18-2015 Bodom:
  Fixed:   MoveItemToContainer could stack non-stackable items in some circumstances
10-07-2015 Bodom:
  Removed: "house_serial" CProp is no longer set by core for house components
  Fixed:   Exception when editing a custom house with components outside of the
           house
10-06-2015 Bodom:
  Fixed:   Fixed crash condition (stack overflow) when unequipping last armor
           piece weared by an NPC and then receiving an hit.
  Changed: Intrinsic armor now takes precedence over equipped armor (is was the
           opposite before). Anyway, using both of them could lead to unexpected
           behavior so it is not a good pratice.
10-02-2015 Bodom:
  Added:   Intrinsic Shield support, works just like intrinsic weapons
           New extobj.cfg entry "Shield" (defaults to 0x1F022)
           New item must be defined in itemdesc.cfg
           // Intrinsic Shield template - special pseudo Shield for NPCs
           Armor 0x1F022
           {
               Name            intrinsicshield
               Graphic         1
               MaxHP           1
               SaveOnExit      0
           }
09-30-2015 Bodom:
  Added:   MoveItemToContainer parameter add_to_existing_stack can now be 2 for "auto" behavior
           The function will try to add the item to an existing stack and just try move the
           item inside the container if no stack is found
09-29-2015 Bodom:
  Fixed:   When a robe is already equipped before resurrect, no longer destroy it to
           equip the death robe
  Fixed:   When HonorUnequipScriptOnDeath is on, item's unequip and unequiptest scripts
           were called twice on death and in the wrong order
09-27-2015 Bodom:
  Fixed:   Armor were not calculated correctly for NPCs wearing equip
  Fixed:   Allow changing graphic of equipped items again if the new graphic has the same layer
09-25-2015 Bodom:
  Added:   New uo.em function SendPopUpMenu( to, above, menu ).
  Added:   On pop-up menu request (single click) "misc/popupmenu.ecl" is called.
  Fixed:   When using MapDiff, tiles could disappear in some circumstances
09-24-2015 Bodom:
  Added:   New keyword AttackCProp on npcdesc.cfg allows defining CProps for
           intrinsic weapons.
  Fixed:   Hp/MaxHp updates to nearby clients were still using the real value
           instead of the 1000-based ratio when sending the 0xa1 packet.
  Fixed:   Hp/MaxHp updates were sent twice to the originating character.
09-12-2015 Bodom:
  Fixed:   Bug in loading POL098 and older data files: boats were rotated leaving
           dynamic elements like plank and tillerman on the old position.
09-08-2015 Bodom:
  Fixed:   Bug in LAN IP address identification (some IPs in 172.16.0.0/12 were skipped)
09-06-2015 Nando:
  Added:   Data integrity check will test if the item serial is valid (serial >= 0x40000000) when loading items.
  Fixed:   Items could be created with character serials if the wrong values were saved in data/pol.txt.
  Note:	   Character serials must be in the range 1 to 0x3FFFFFF (inclusive), while item serials must
		   be between 0x40000000 and 0x7FFFFFFF (inclusive).
09-06-2015 Bodom:
  Added:   New Item.process property
           Returns reference to the controlscript, if any running
  Changed: Script.attached_to now returns a reference to the Item when called on a ControlScript
  Added:   New servspecopt.cfg option DefaultCharacterHeight (1-32)
           This will be the default (and never changed so far) height of Characters
           and NPCs. Default value is 15. Back in the POL095 days is was 9, so consider
           9-15 as your "safe" play range. Anything outside that range could cause weird
           movement behavior. Even small changes will have a great impact on LOS
           calculations and, more in general, on the combat system.
           It is also used to calculate wether a Character can fit under a low
           passage (e.g. dungeon stairs).
           Keep in mind a Titan and a Slime will have the same height.
09-05-2015 Bodom:
  Changed: Process ids (pid) no longer start from 1 but from 0x01000000.
           This should have no practical effect.
  Added:   Allow specifying an arbitrary Gump id in SendDialogGump()
           Custom gump ids must be in the range 1-0xFFFFFF. If no gumpid is given,
           the old behavior of using the pid will still be used (so that this
           does not break backward compatibility).
           It is now possible to organize the gumpids in a constants file and have
           the same gump to always be sent with the same id. This way the client
           will recognize it and, if the player moved it last time, it will
           reposition it where the player liked it: this should be a nice
           interface improvement.
           It is now possible to implement the Virtues gump, since it needs a
           pre-defined gumpid of 0x01CD to work.
  Changed: CloseGump() now accepts a gumpid instead of a pid. For scripts not
           using custom gump ids, its behavior is the same as before.
09-03-2015 Bodom:
  Added:   Item insurance support, new Item.insured property (0/1)
           An insured item behaves on death like a newbie item, except that the insured flag gets reset back
           to 0 after every death. If the item for some reason (e.g. when backpack is full) will get dropped
           instead, the insured flag will be reset anyway. Insured items are not stackable with normal items
           but they can still be sold to vendors.
           Hint: this feature can also be used in conjunction with CanDie sys hook to determine via script which
           items a player will drop on death; since the CanDie hook is called exactly one moment before death you
           can use it to insure the items that you don't want to fall on the corpse.
  Added:   RepSys NameColor and HighLightColor hooks can now return -1 to let the core run the builtin code.
08-27-2015 Bodom:
  Added:   New eScript keyword: unused
           This keyword can now be added before a variable name in function or program block declarations.
           It has no effect on the resulting compiled code, but instructs the compiler not to issue a warning if
           the following variable will not be used. The compiler will instead fire a warning if the interested
           variable will then be used later in the code. Examples:
           program onremovescript( character, container, unused item, unused item_amount, movetype )
               // Here the variables item and item_amount are needed in the program declaration but will not be used,
               // the unused keyword prevents warnings to be triggered
           endprogram
           function myfunc( parameter1, unused parameter_for_future_use )
               // Same as above: parameter_for_future_use is not used and unused prevents the warning message
           endfunction
07-27-2015 Turley:
  Added:   array.cycle([count])
           will move array backwards or forwards in-place as it were a conveyor belt.
		   {1, 2, 3}.cycle()
		   Will make it:
           {3, 1, 2}
		   Accepts a negative value as a shift to move different direction
  Changed: string.format()
           Now actually faster than string concatenation in eScript
           Fixes a bug where {:d} formating could cause an arbitrary number shown instead of a real value
           tag errors are slightly more intuitive and compact.
  Note:    Patches submitted by andenixa

02-08-2015 Turley:
  Added:   PolCore().memory_usage member, returns current process usage in KB
  Changed: 0xF1 Freeshard list pkt is now allowed during login state,
           thus its possible to create eg a UOGateway pkthook for this pkt
  
01-31-2015 Turley:
  Added:   uo::ListMobilesInBox( x1,y1,z1, x2,y2,z2, realm := _DEFAULT_REALM )
           like ListObjectsInBox but returns only mobiles.
  Changed: uo::List*InBox functions accept as z parameters LIST_IGNORE_Z
           Thx @ andenixa
  Added:   uo::GetMidpointCircleCoords( xcenter, ycenter, radius )
           based on given center coordinates and radius returns array of x,y structs which represent a circle
           Thx @ andenixa 
           The array of coordinates is sorted, which means that its easily possible to only use every second point

09-12-2014 Nando:
  Fixed:    Client crash with clients older than 7.0.9.0 but newer than 7.0.0.0, because of wrong size in
              boat movement packets.
  
07-12-2014 Nando:
  Fixed:    Items were not disappearing from the character's backpack after being moved to the corpse.
  Fixed:    Items were disappearing from the corpse when an equippable item was moved/inserted into it.
  
11-13-2014 Nando:
  Added:    EnforceMountObjtype property in pol.cfg. Will enforce that only items with the mount
            objtype (as defined in extobj.cfg, default 0x1F021) can be mounted.
  Fixed:    Inconsistency when handling mount objects that would trigger an assertion for equipping
            items with the mount objtype but a bad graphic.
   Note:    To be equipped as a mount, the item must be in the mount tiles list of uoconvert.cfg. 
            This ensures that the item has layer 25 and the equippable flag, otherwise it won't
            be considered equippable.
            
11-05-2014 Nando:
  Added:    polsys::Realms() will now report how many offline mobiles and multis there are.
  Added:    "ShowRealmInfo" option in pol.cfg (default to false). Will report every once in a while 
            the number of items, mobiles and multis per realm. 
  Added:    uo::ListOfflineMobilesInRealm(realm) method to return the list of offline mobiles in a 
            specific realm. Useful for moving the offline mobiles out of a shadow realm before 
            deleting it.
  Fixed:    Crash bug when deleting shadow realms while an offline mobile or a multi were still in it.
  Fixed:    Top-level items were not properly counted when moved between realms.
 
10-29-2014 Nando:
  Fixed:    Crash bug when deleting item directly from a corpse.
  
10-19-2014 Turley:
  Added:    AnimXlate.cfg for newer clients
  Added:    example animxlate.cfg:
            defines which graphics support mount translation
            and per graphic type how to translate animation from older clients to newer (7.0.9.0)
            see cfg for description of possible entries.

09-23-2014 Nando:
  Changed:  Corpses will no longer send the full list of contents before being open. Only the equipped
            items will be shown. This should decrease slowdowns in areas with many corpses.

09-21-2014 Nando:
  Fixed:    Corpses will now equip items that are placed on them, even if they don't have an OnInsert script.
  Fixed:    Possible crash when items having layers larger than 25 were placed/removed from corpses.

06-07-2014 Tomi:
  Fixed:    using DestroyItem or SubtractAmount on an item 'gotten' it will now first release the item and then destroy it
  Fixed:    NPCs looks for players for enter/leftarea events when, these were only looking for npcs 
            - moved with MoveObjectToLocation function
            - on every move
            - unhide
            - npc creation
  Fixed:    Destroying an equipped item now calls unequip scripts
  Fixed:    Changing cmdlevel with chr.cmdlevel := or chr.SetCmdLevel() sends updates correctly to see concealed characters
  Old Commits:
     Changed: pol.cfg MinCmdLevel checked already during the first accountlogin, so now it doesnt let those connections go all the way to char creation anymore.
     Fixed: Crash during character creation where equipment realm was not updated and pol crashed when unequipping/equipping.
     Fixed: Setting Enter/Left area event listening for npcs on range 32 did never send the left area on distance 33

05-26-2014 Turley:
  Added:   character.last_textcolor readonly member returns last textcolor of the character. Values are between 2 and 1001. Returns 0 if not yet spoken.
           (will not be saved inside of the datafile)

05-06-2014 Tomi:
  Added:   Realm entry to startlocs.cfg, The earlier MapID still needed for the client to show the map correctly, but realm is needed for the server to put the character during creation in the correct realm, default value "britannia"

04-05-2014 Turley:
  Fixed:   multi.items returns now all toplevel items inside of the multi
  
03-15-2014 Turley:
  Changed: sql functions connect, select and query perform the communication part in background while script itself
           is stopped (like eg Target()). Which means that these time consuming functions do not block the complete shard.
		   Removed sql module from runecl, since it no more compatible.

03-01-2014 Nando:
    Added: Character.temporally_criminal is true when a criminal timer is running on the character. 
     Note: The old property chr.criminal stays the same: it is true when the character is temporally
           criminal or a murderer.

02-27-2014 Tomi:
    Fixed:    changing cmdlevel now updates correctly which concealed characters you see
    Fixed:    crashes when parent script is killed before child script returns
    Fixed:    crashes when reporting error in an armordesc entry defined in config\itemdesc.cfg

02-25-2014 Tomi:
    Added:    Boat Smooth move for clients which support it ( HSA+ )
    Added:    boat.em flags ( These flags are ignored for boat movements sent to old than HSA clients )
          const BOAT_SPEED_ONE_TILE 	:= 1;
          const BOAT_SPEED_SLOW		:= 2;
              const BOAT_SPEED_MEDIUM 		:= 3;
              const BOAT_SPEED_FAST 		:= 4;
    Changed:  boat.em functions
              MoveBoat( boat, facing ) to MoveBoat( boat, facing, speed := BOAT_SPEED_ONE_TILE ) 
              MoveBoatRelative( boat, direction ) to MoveBoatRelative( boat, direction, speed := BOAT_SPEED_ONE_TILE )
    Note:     The same functions are used to move boats for older and never clients, older clients ignore the speed parameter, but the speed paramter is required for smooth move.
              The clientversions are checked in core to determine what type of boat movement will be sent

02-01-2014 Tomi:
    Fixed: Customhousing exterior stairs delete is now working, commiting does not readd them anymore
    Fixed: Customhousing changing floor is now sending a full msg instead of short msg, so no more synch needed after changing floors until you can start working on it

01-20-2014 Nando:
	Added:  DisableNagle option in pol.cfg to disable Nagle's algorithm, default to 0. In theory, latency should improve if DisableNagle=1.

01-20-2014 Turley:
	Fixed:   Made the sql module atleast a bit script friendly. Removed the mysql_free_result function since the result objects automatically get destroyed on scope exit.
	         Passing the sql objects as function parameters is now also possible. mysql_close is now also senseless, but kept it for anyone who wants to directly close the connection.
			 Boolean check for the connection object performs now a ping and returns false if the connection is lost (eg. timeout)

12-31-2013 Turley:
    Added:   Print small backtrace on crash/passert failure, should help a bit without the need of the dump.
	         Works only under Windows 64bit
	Changed: optimized world object storage and usage. Should improve eg pkt sends and scales better.

11-03-2013 Tomi:
    Fixed:   Container Max Weight works now like it did earlier before _mod changes, all values <= 0 sets it as 0xFFFF max weight

10-25-2013 Turley:
    Fixed:   newbie flagged backpack caused endless loop on death

10-21-2013 Tomi:
    Added:   polsys::FormatItemDescription( desc, amount := 1, suffix := "" )
             This formats the desc using Pols built in Singular/Plular formatter

10-04-2013 Turley:
	Fixed:   \= operation
	
10-01-2013 Tomi:
    Fixed:   Container.locked works again

09-25-2013 Tomi:
    Added:   character.DisableSkillsFor( duration ) method to disable skills that are started with start_skill_script or by scritps defined in attributes.cfg for duration ( seconds )
             This method overrides the default Delay setting in attributes.cfg if used ( for example if on failing a skill you want no delay just set it to 0 )
             This can also be used to disable skills for example during an event or pvp
    Added:   item.name_suffix for adding crafter marks or such
             item.desc returns the formatted name and suffix added to it without formatting if it exists
             item.name does not include this suffix, so that can be used to get the item name without formatting and without suffix

09-21-2013 Tomi:
    Changed: Pol doesnt send "I am frozen" messages anymore when paralyzed, now it sends in all those cases "I am paralyzed" messages

09-20-2013 Tomi:
    Fixed:   Invul changes now sends the healthbar color correctly for UOKR and later clients
    Fixed:   All repsys changes now send the update correctly to yourself and all client around you
    Removed: support for murderer healthbars for UOKR clients.

09-18-2013 Tomi:
    Added:   cfgfile::GetConfigIntArray, works the same way as GetConfigStringArray but returns an array of ints instead of strings
    Changed: Item.name now returns itemdesc.Desc without singluar/plural formatting if no name is set and name from tiledata if no itemdesc entry found

09-17-2013 Tomi:
    Fixed: Item.SplitStackInto and Item.SplitStackAt methods for non stackable items ( now also works splitting non stackable items 1 by 1 from a stack force created )
    Fixed: Mountpieces will not be copied into corpses during character death anymore even if they are non movable

09-03-2013 Tomi:
    Changed: Equipment members .maxhp_mod .hp .maxhp and .quality moved to Item
           only Weapons and Armors need to have the MaxHP defined in itemdesc because core combat is using it, for all other items there is a default value 1
    Added: Weapon RW member .speed_mod ( -32,768 to 32,767 ) as an optional way to delay if you want to use the default speed math and just add to that
    Fixed: upper limits using the container members .max_items_mod .max_weight_mod and .max_slots_mod
           if max_items >= 3200 it will be set to 3200
           if max_weight >= 65535 it will be set to 65535
           if max_slots >= 255 it will be set to 255
    Note:  None of these members can go below zero

09-02-2013 Tomi:
    Added: Container RW members .max_items_mod( −32,768 to 32,767 ) .max_weight_mod( −32,768 to 32,767 ) and .max_slots_mod( −128 to 127 ) ( default values 0 )

08-31-2013 Turley
	Fixed: EScript memoryleak (eg myvar[blubb]:=othervar) 

08-28-2013 Tomi ( based on andenixas patch )
    Added: ssopt.MobilesBlockNpcMovement ( default true ) to determine if mobiles block the movement of npcs
    Note:  Tamed npcs with same master ( npc.master ) still blocks each others movement even with the flag false to not allow them run on top of each others when following the master

08-27-2013 Nando (patch by andenixa, text adapted from forum post):
    Added:    string.format( args ) - formats a string using the data from args
			  Accepts the following format:
				{:x} for hex representation
				{:o} for octal
				{:b} for binary
	
	          Add a # to get notation prefix:
	          E.g. "{:x}".format(10) -> "a"
			       "{:#x}".format(10) -> "0xa"
				   
			  Parameters can be simple:   
			  
				"You have {} gold coins".format(120) -> "You have 120 gold coins"
			
			  and are unpacked implicitly by their order:

				"{} hits {} for {} of damage".format("John", "Bob", 120) -> "John hits Bob for 120 of damage"
			
			  However you can specify parameters explicitly (first argument is at 1):
			    
				"You hit {2} for {1} damage".format(120, "John Doe") -> "You hit John Doe for 120 damage"
				
			  Format allows accessing object members:

     			"Spell {1.spell_name} requires reagents: {1.reagents}".format(struct{spell_name:="Fire Wrath", "Ba, Bm, Ga"}) 
				       -> "Spell Fire Wrath requires reagents: Ba, Bm, Ga"

			  Implicit members also work:

			    "{name} you hit level {level}".format(struct{name:="Jane Doe", level:=4}) 
						-> "Jane Doe you hit level 4"

			  Character or item members are accessed the same way:

			    "{1.name}, your shield {2.desc} has {2.hp} hp".format(who, who.shield)" 
						-> "Admin, your shield Buckler of Death has 150 hp"
07-27-2013 Tomi:
  Changed:    UO::TargetMultiPlacement( character, objtype, flags := 0, xoffset := 0, yoffset := 0, hue := 0 );
              New optional hue parameter to show hued multis which are supprted by clients >= 7.0.9 ( HSA )
              Older clients ignores this option

06-17-2013 Kevin:
  Fixed:      adding missing mysql_close() entry to sql.em
  Fixed:      OpenSellWindow() "Buyable" container wasn't actually restricting what entries showed. 
              Pass flag VENDOR_BUYABLE_CONTAINER_FILTER to enable this filter. 

05-25-2013 Kevin:
  Fixed:      bug in mysql_select_db() returning error on successful calls
  Fixed:      adding missing mysql_free_result() entry to sql.em

02-26-2013 Kevin:
  Fixed:      item.SplitStackInto(container,amount,add_to_existing_stack := 1) no longer requires three parameters and will default
              the add_to_existing_stack to 1/true if not present
  Fixed:	  item.SplitStackInto() with add_to_existing_stack == 1 will re-add the removed-portion of stack back to original item
              if it cannot add to the existing stack (ie, container's caninsert script returns false)
  Changed:    item.SplitStackInto() with add_to_existing_stack == 1 will first attempt to add to an existing stack if found, and otherwise 
              will create a new stack if no existing stack found. This is similar to how the existing CreateItemInContainer() works

02-20-2013 Tomi:
  Fixed:      When changing graphic of a lightsource item, it now changes correctly the facing too.
  Fixed:      Status bar now shows for weapon mindamage ( id.mindamage + dmg_mod ) and for maxdamage ( id.maxdamage + dmg_mod )

02-17-2013 Tomi:
  Fixed:      Changing invul status now updates it for the character itself too, not just all mobiles around

02-15-2013 Tomi:
  Fixed:      item.SplitStackInto method

01-04-2013 Tomi:
  Added:      Syshook CanTrade
	      parameters ( character, drop_on_chr, item )
  Note:       This syshook runs when dropping an item on a character or when trying to add an item to a tradewindow

12-15-2012 Tomi:
  Fixed:      Items now get their facing from tiledata flag if no itemdesc entry is found
              This fixes wrong lightsources for items such as lampposts

12-08-2012 Tomi:
  Fixed:      Typo in uo.em with new LISTEX flags
  Added:      const REALM_BRITANNIA_ALT to uo.em

12-05-2012 Tomi:
  Added:      Pol now send on invul/murderer status changed for >= KR Clients packet 0x17 to get Yellow or Red color health bars
  Changed:    UO:ListMobilesNearLocationEx added 2 new flags LISTEX_FLAG_PLAYERS_ONLY and LISTEX_FLAG_NPC_ONLY
  Changed:    combat.cfg option "SendAttackmsg" to "SendAttackMsg" to match cases of other options
  Fixed:      UO:MoveItemToContainer doesnt crash anymore when using add_to_exisitng stack parameter
  Fixed:      item methods .SplitStackAt and .SplitStackInto doesnt crash Pol anymore when using add_to_existing_stack parameter

11-16-2012 Turley:
  Added:      string methods:
			  str.length() : returns like len(str) the length of the string
			  str.upper() : returns like upper(str) the uppercase version and also modifies the str
			  str.lower() : returns like lower(str) the lowercase version and also modifies the str
			  str.find(Search,[Start]) : returns like Find(string, search, start) the index of the first occurance of 'search' after 'start' within str
			  but unlike the basic.em function the Start parameter is optional if not given it searches the whole string
			  str.join(array) : returns a string which is the concatenation of the array elements, seperated by str

11-14-2012 Turley:
  Changed:    SplitWords( str, delimiter := " ", max_split := -1 )
              it has now an additional parameter max_split, if given it limits the number of times that a string will be split
			  default: -1 no limit
			  (Patch submitted by andenixa)
  Added:      ecompile its now possible to override through the cmdline
			  GenerateDependencyInfo entry with "-D-"
              GenerateDebugInfo entry with "-x-"
			  
11-10-2012 Turley:
  Added:      uoclient.cfg Listener property "KeepClients" 1/0 default 0
			  if set to 1 clients keep this listener port even after different gameserver select
  Note:       actually 1 is the old behaviour and 0 the old behaviour of pol.cfg ListenPort
  Added:      pol.cfg "UseSingleThreadLogin" 1/0 default 0
              if set all prelogin clients are handled inside the listener thread and not inside an extra thread
			  this will reduce the amount of thread creates and destroys
			  
10-14-2012 Tomi:
  Added:      SystemHook "WarmodeChange" called when a character changes warmode status either by member .warmode or by clicking the warmode button on the paperdoll
              Params CharRef and new_warmode_status
              Return value is ignored

10-09-2012 Tomi:
  Fixed:      packet 0x17 ( poison health bar packet ) was sending 2 bytes with wrong endian when sending to nearby clients

10-08-2012 Turley:
  Fixed:      secured Shadowrealm delete, it will now iterate through all StorageArea Items and check if old shadowrealm property exists
  
10-06-2012 Tomi:
  Changed:    setting an equipped item on NPC to movable 0 will make it visible on the corpse but invisible in the corpse, same as hair and beard have worked until now.

10-05-2012 Turley:
  Added:      ecompile parameter -wP
  Added:      ecompile.cfg entry ParanoiaWarnings
  Note:       since "{}" is valid syntax, only complain about it if ParanoiaWarnings is enabled

09-29-2012 Turley:
  Added:      ecompile parameter -T
  Added:      ecompile.cfg entry ThreadedCompilation
  Note:       if set will use openmp for parallel compilation
  
09-25-2012 Kevin:
  Fixed:      Guild and alliance messages no longer send as regular speech messages. They are sent to all guild or alliance members online.
  Added:      servspecopt.cfg CoreGuildMessages=0/1 default 1 to determine if core should handle guild and alliance messages.

08-29-2012 Turley:
  Fixed:      Crash if a attached script kills the attached npc

08-27-2012 Tomi:
  Changed:    MoveItemToContainer( item, container, x := -1, y := -1 ); to MoveItemToContainer( item, container, x := -1, y := -1, add_to_existing_stack := 0 );
  Changed:    item.SplitStackInto( container, amount ) to item.SplitStackInto( container, amount, add_to_existing_stack := 0 )
  Note:       The optional add_to_existing_stack parameter defines if the items moved to the container will look for an existing stack and add to it or just add as a new item ( old behaviour )
              If add_to_existing_stack == 1 and there is no stack in the container, it will return Error "There is no existing stack", so its up to scripts to check this.
  Added:      item.HasExistingStack( container ) to allow scripts to check if there is an existing stack in a container or not, returns the ItemRef of the stack if it exists.           

08-26-2012 Nando:
  Removed:    Support for ListenPort in pol.cfg when Multithread is activated. Everyone should
              be using uoclients.cfg by now! 

08-01-2012 Kevin:
    Added:    R/W member carrying_capacity_mod for mobiles to modify carrying capacity on a 
              mobile-per-mobile basis. Is taken into account prior to global ssopt modifier.

08-01-2012 Kevin:
    Added:    osmod::Debugger() to put current script in debug state to be attached by external
              debugging application
    Added:    stacktrace debug command to print stacktrace. Displays:
 				<size of stack>
 				foreach stack element:
 					<program counter>
 					<file number>
 					<line number>
 					<number of local variables>
 					foreach local variable:
 						<variable name> <packed value>
 					
07-12-2012 Tomi:
    Added:    combat.cfg entry "SendAttackMsg" values 0/1 defaults to 1
              setting this to 0 stops the core repsys system sending "is attacking you" messages.

06-03-2012 Tomi:
    Added:     Readonly members .active_skill and .casting_spell for characters
              return values 0/1 if character has an active attached skill or spell script

05-01-2012 Tomi:
     Fixed:    On equipped items .resist_*_mod members did not update character status window when changed
              Patch submitted by Agata

04-15-2012 Tomi:
     Added:    R/W member editable 0/1 for maps

04-14-2012 Tomi:
     Added:    Support for new map message packet 0xF5 for clients 7.0.13+
              This packet supports the new facetXX.mul files and now can use every different realm for cartography maps and sea charts.
     Added:    r/w member .facetid for Maps
              This has actually nothing to do with realms, the value is the same as in FacetXX.mul file
04-06-2012 Tomi:
     Fixed:   Roof problem at 4th floor on a custom house. 
              Patch submitted by Agata
     Added:   Packet 0xD6 to be ignored for activity ( fixes inactivity logout for ML+ )
              Patch submitted by OWHorus
04-05-2012 Kevin:
     Added:   ecompile.cfg directive "ErrorOnWarning" and ecompile switch -y to treat warnings 
              on errors during ecompile. Default is 'false'
     Fixed:   various locations were showing warnings even without the -w switch provided.

03-26-2012 Tomi:
     Added:   character readonly member .lastcoord returns struct{.lastx, .lasty, .lastz}

03-09-2012 Tomi:
     Fixed:   uo::SendInstaResDialog() was sending wrong packet 

03-07-2012 Tomi:
     Added:   scripts/misc/dblclickitem.ecl to run a script on every double click on items.
              params are (mobile, item)
              usefull for removing meditation stuff and such in 1 place instead of every script.
     Note:    this script will not be attached to the mobile and will run before any usescript.

02-08-2012 Tomi:
     Added:   character readonly member .tradewindow
              return ContainerRef if the char has an active trade and error if no active trade

02-06-2012 MuadDib:
     Fixed:   Added orphan checks in Character::get_from_ground for both passed serial and items it itr through. Proper logging, returns, and 
	              continue used to keep from attempting movement of orphaned items after log report.

02-05-2012 Tomi:
     Changed: AR not required in ArmorDescs for Pol to start anymore, so now if Physical Resist used only no need to define AR 0 in the ArmorDesc.
     Changed: AR in ArmorDescs defaults to 0.

02-02-2012 Tomi:
     Added: Readonly member .multiid for boats and houses
     Fixed: Old boats didnt read the components correctly on server restart

01-21-2012 Tomi:
     Removed: Graphic from multis, no graphic entry needed for multis in itemdescs anymore, uoconvert doesnt add a graphic value to multis anymore.
     Added:   MultiID entry to boats.cfg instead of the ObjType.
     Changed: Multi itemdescs now require MultiID to be defined for each multi.
     Note:    Multi objtypes still need to be > MaxTileID from pol.cfg
     Example of a multi entry in itemdesc
              Boat 0x10000
              {
	          Name      SmallBoatN
	          MultiID   0x0
              }
     Added:   boats.cfg is now shipped with the core too with boats up to date with HSA so just remove what you dont use.
     Note:    Reconvert of multis.cfg with UOConvert needed
              Make sure you have a itemdesc entry for every boat direction

01-21-2012 Turley:
     Fixed: RequestInputUC() for eg russian chars

01-16-2012 Turley:
	Changed: SpeedUp for uoconvert

01-14-2012 Turley:
    Changed: UnicodespeechEvent additional Member "tokens" if speech has (speech.mul) Tokens, gives array of spoken TokenIDs
	  Added: servspecopt.cfg SeperateSpeechTokens=1/0 default 0 when set RegisterForSpeechEvents() and EnableEvents/DisableEvents behave different
	  Added: uo:RegisterForSpeechEvents Flags LISTENPT_HEAR_TOKENS,LISTENPT_NO_SPEECH
	  Added: SYSEVENT_TOKEN_SPEECH:=0x4000 and SYSEVENT_TOKEN_GHOST_SPEECH:=0x8000 for uo:EnableEvents/DisableEvents
	   Note: if SeperateSpeechTokens is set you can control which events you get,
	         for NPCs you only get speech with tokens if you set SYSEVENT_TOKEN_SPEECH/SYSEVENT_TOKEN_GHOST_SPEECH
			 and non Token speech with SYSEVENT_SPEECH,SYSEVENT_GHOST_SPEECH
			 for RegisterForSpeechEvents() you get speech with and without Tokens when setting LISTENPT_HEAR_TOKENS and no speech without Tokens
			 setting LISTENPT_NO_SPEECH
	   Note: Token and nonToken Eventtype is still the same (SYSEVENT_SPEECH)

01-03-2012 Turley:
    Changed: major rewrite of primitive operators +,-,*,/,...
             major speedup of +=,-=,...
      Added: finally support for +=,-=,*=,/=,%= with objectmembers, like who.resist_fire_mod+=1
       Note: if member would return UnInit or Error it does nothing
             so its like (only faster and atomic):
             var temp:=who.resist_fire_mod;
             if (!(TypeOfInt(temp) in {OT_UNINIT,OT_ERROR}))
                temp+=1;
                who.resist_fire_mod:=temp;
             endif

01-02-2012 Turley:
	  Added: XMLFile/XMLNode.removexmlnode(int value)
             removes node of given index
			 XMLFile/XMLNode.removexmlnode(XmlNode node)
			 removes given node
			 XmlNode.clonenode()
			 since all NodeObjects get destroyed when the corresponding XmlFileObject is destroyed, use this method to store a node for later use.

12-18-2011 Nando:
    Changed: internal handling of intrinsic weapons' unload.
    Removed: INTRINSIC property from Weapon template in itemdesc.cfg. An error occurs
             if it's set. Some shards might have forgot to set it, which would cause
             damage to intrinsic wrestling weapon. This is now handled automatically.
                                  
12-17-2011 Nando:
    Changed: boats.cfg entries are now "Name Graphic X Y <Z>", where Z is optional and
             defaults to zero.

12-17-2011 Tomi:
    Added:   Support for hued boats, use the normal .color r/w member to change the hue
             Patch Submitted by Agata

12-14-2011 Tomi:
    Changed: objtype vectors changed to maps to only reserve as much memory as there are
             itemdesc entries, not reserving memory for up to 4 billions of objtypes.
    Changed: boats.cfg entries changed from "Name Graphic X Y" to "Name Graphic X Y Z"
             because some of the new boat components requires different Z levels than the boat
			 itself.

12-13-2011 Austin:
    Added: Support for destroy scripts on multis.

12-13-2011 Tomi:
    Added: Support for HSA boats ( no smooth move yet, but now all boats are usable )
    Changed: boat.cfg to support new entries "Rope", "Wheel", "Hull", "Tiller", "Rudder", "Sails", "Storage", "Weaponslot"
             there can be more than 1 of each entry 
             the old entries "Tillerman", "Hold", "PortGangplankExtended", "PortGangplankRetracted", "StarboarGangplankExtended", "StarboardGangplankRetracted" support just 1 entry each or the boat members get broken
    Added: ReadOnly members for boats
           .components returns an array of ItemRefs of all the components on the boat
           .hull returns an array of ItemRefs of all the hull components on the boat, or empty array if none.
           .rope returns an array of ItemRefs of all the rope components on the boat, or empty array if none.
           .wheel returns an array of ItemRefs of all the wheel components on the boat, or empty array if none.
           .rudder returns an array of ItemRefs of all the rudder components on the boat, or empty array if none.
           .tiller returns an array of ItemRefs of all the tiller components on the boat, or empty array if none.
           .sails returns an array of ItemRefs of all the sails components on the boat, or empty array if none.
           .storage returns an array of ItemRefs of all the storage components on the boat, or empty array if none.
           .weaponslot returns an array of ItemRefs of all the weaponslot components on the boat, or empty array if none.
    Changed extobj.cfg to support new entries for all the new boat component types and changed the default value of all entries.
            extobj.cfg entries with default values:
                   Tillerman=0x1F010
                   Port_Plank=0x1F011
                   Starboard_Plank=0x1F012
                   Hold=0x1F013
                   Rope=0x1F014
                   Wheel=0x1F015
                   Hull=0x1F016
                   Tiller=0x1F017
                   Rudder=0x1F018
                   Sails=0x1F019
                   Storage=0x1F01A
                   Weaponslot=0x1F01B

                   Wrestling=0x1F020
                   Mount=0x1F021

                   Secure_Trade_Container=0x1FF01
                   Wornitems_Container=0x1FF02
    Note:   extobj entries just let you define the objtypes, all of these still have to be defined in itemdescs for boats to work correctly.
            extobj.cfg is now shipped with the core.

12-05-2011 Tomi:
    Fixed:  Door methods .open() and .close() were working opposite what they should.

12-04-2011 Tomi:
    Fixed:  EA broke the prof.txt with the latest clients adding "Evaluating Intelligence" and "Spirit Speak" with spaces that resulted into skillnumber 0xFF and skillvalue 0
    Added:  UO::UpdateItem( item );
            updates the item to every client in range, good to use for example after returning 1 in some packethook and the item get invisible.

12-01-2011 Nando:
    Fixed: Client hanging after having his connection refused on login. I recommend testing
           different ways of having a client disconnected, like acct.disable(), .ban() and others.

12-01-2011 MuadDib:
  Changed: UoClientGeneral.maxskills changed to unsigned short. Few places in loops with it changed to use same for the loop counter.

11-30-2011 Tomi:
    Fixed: Old style spellbooks.

11-29-2011 MuadDib:
    Fixed: Fixed a script breaker caused by inserting new TypeOfInt() constants in the middle of the Enum. Moved SQL Types to end of list.
    Added: Added SQL entries to the Basic.EM since were missing.

11-29-2011 Tomi:
  Added:   Opengraphic itemdesc entry for Doors ( optional parameter, no need to define if you dont want to use the built in methods )
  Changed: how built in .open() .close() and .toggle() methods works. The now read the graphic what to open to from itemdesc instead of just checking with & 0x1.
           this makes those methods works for new doors too and not only T2A era doors.
  Changed: basic::CChrz( intarray ) to basic::CChrz( intarray, break_at_first_null := 0 );
           if the break_at_first_null parameter is 0 it uses the old behaviour to just skip the nulls and still convert everything
           if the break_at_first_null parameter is set to 1 it stops the conversion to string at the first null it finds.
  Changed: All Write(ctBeu16( calls for graphics and colors to use WriteFlipped, this seems to have fixed the assertion errors that occured with removal of the color_ext and graphic_ext

11-28-2011 MuadDib:
  Removed: UObject->Color_Ext : Removed, and when used is replaced with ctBEu16() calls. This includes read/write of /data files.
  Removed: Last of any UOX references for imports. Most was all commented, a few empty refences was also left. All now removed completely.

11-27-2011 MuadDib:
  Removed: UObject->Graphic_Ext : Removed, and when used is replaced with ctBEu16() calls. This includes read/write of /data files.
     Note: UObject->Serial_Ext will not be removed as previously considered, due to the orphan system making primary use of this.

11-27-2011 Nando:
    Fixed: corrected memory leak in cfgfile::GetConfigStringDictionary(...)

11-26-2011 Tomi:
    Changed: CascZ( str ) to CascZ( str, nullterm := 0 )
         if nullterm 1 it adds the terminating 0 in the end of array.
    Note:	 Recompile of scripts needed.

11-24-2011 Tomi:
    Added:  Support for Mysticism and BardMasteries spell books
        Mysticism Spell ID's 678 -> 693 and BardMasteries spell ID's 701+

11-23-2011 Tomi:
    Added:  can_insert and on_insert scripts for Tradewindows

11-22-2011 Kevin:
    Added:	pol/sqlscrobj.cpp pol/sqlscrobj.h
  Changed:	pol/module/sqlmod.cpp pol/module/sqlmod.h
            Add preliminary MySQL database support.
            New eScript objects: BSQLConnection, BSQLResultSet, BSQLRow 
            Added several new sql module functions:
                mysql_connect(host,username,password);
                mysql_query(connection,query);
                mysql_fetch_row(result);
                mysql_affected_rows(result);
                mysql_num_fields(result);
                mysql_num_rows(result);
                mysql_select_db(connection,database);
                mysql_field_name(result,column_index);
                mysql_free_result(result);
                mysql_close(connection);
            In order to build with MySQL support, define the HAVE_MYSQL preprocessor directive in your build configuration.
            You must have the MySQL headers and libraries installed. 
            Only really tested with dynamically linking mysql libraries on Linux.
            
    Added:	pol/network/auxclient.h
  Changed:	pol/network/auxclient.cpp pol/module/osmod.cpp pol/module/osmod.h clib/socketsvc.cpp clib/socketsvc.h
            Moved AuxClient-related classes to its own header file (shared between auxclient.cpp and osmod.cpp)
            Implemented os::OpenConnection() to create outgoing TCP/IP connections. 
            
  Changed:	runecl/runecl.cpp
            Added the sql module to runecl to allow quick testing

  Changed:	pol/uoscrobj.cpp pol/mobile/charactr.cpp pol/mobile/character.h bscript/parser.cpp bscript/objmembers.h
            Added read/write property "mountedsteps" for mobiles. Represents number of steps taken while character was mounted.

  Changed:	bscript/parser.cpp
            Declaring an array only using "{}" will show a compiler warning; please explicitly state 'array', 'struct', or 'dictionary' 
  Changed:	pol/pol.cpp
            If using Linux, remove pol.pid on shutdown of pol.

  Changed:	pol/uoexec.h pol/scrsched.cpp
            Added script option "AUXSVC_ASSUME_STRING" which will allow aux service connections to send and receive non-packed strings.

  Changed:	ecompile/ecompile.cpp
            If using Linux, a slash ("/") cannot be used to define ecompile options to allow support for absolute filenames.

  Changed:	bscript/object.cpp bscript/bobject.h
            Implemented array operation MultiSubscript. Will return a splice of an array, eg:
                array{"a","b","c","d","e"}[2,4] will return array{"b","c","d"}
                 

11-12-2011 Tomi:
    Added:	 Pol/config/extobj.cfg
                 Values it accept now and default values are

                 Tillerman=0xF010
                 Port_Plank=0xF011
                 Starboard_Plank=0xF012
                 Hold=0xF013
                 Wrestling=0xF020
                 Mount=0xF021
                 Secure_Trade_Container=0xFF01
                 Wornitems_Container=0xFF02
    Note:	 These values HAVE TO BE > pol.cfg max_tile_id and the same as objtype for them in itemdescs
    Added:	 UOExpansion HSA server sends now 0x387DF

11-11-2011 Tomi:
    Changed:     Objtypes are now from 2 up to max_objtype from pol.cfg
    Note:	 if objtypes <= pol.cfg max_tile_id and no graphic defined in itemdesc Pol uses objtype as graphic.
                 Multis and custom items should all be moved to > pol.cfg max_tile_id
    Added:       support for new 0xA9 packet for clients >= 7.0.13.0
    Changed:     startlocs.cfg default values for MapID ( 0 ) and Cliloc ( 1075072 which is the Yew town information )
    Example:
                 StartingLocation Yew
                 {
                        City		Yew
                        Description	Town Center
                        Coordinate	535,992,0
                        MapID		0
                        Cliloc		1075072
                 }
    Note: 	 MapID is the same number as in mapX.mul files
                 Cliloc values are the description of the start locations
                 Newest clients has max stats during char creation 90 

11-06-2011 Tomi:
    Added:  pol.cfg setting MaxObjtype <default 0x20000>
    Note:   can be any value between 0x20000 and 0xFFFFFFFF

10-26-2011 Tomi:
    Added:	support for clients >= 7.0.16.0 ( 2D ) char create packet 0xF8
            Enchanced clients still use packet 0x8D

10-15-2011 Austin:
    Added: .doubleclickrange for items (read only).

09-03-2011 Turley:
     Added: DestroyMulti(house) returns error "House currently being customized."
     Added: house.cancelediting(chr, drop_changes) will stop editing mode.
            drop_changes 1/0 if true drops all non committed changes
            Errors: "House is not custom","House is currently not been edited","Character is not editing this house"
     Added: Syshook CloseCustomHouse(mobile, house)
            called after client quits editing, or when house.cancelediting() is called
            return value is ignored
     Added: servspecopt.cfg
            "SpeedHack_MountRunDelay"  default 80 ms
            "SpeedHack_MountWalkDelay" default 180 ms
            "SpeedHack_FootRunDelay"   default 180 ms
            "SpeedHack_FootWalkDelay"  default 380 ms
            Change them on your own risk

08-08-2011 Austin:
     Added: servspecopt.cfg flag "ScriptedMerchantHandlers" default is 0 which results in no change in behavior. 
           If enabled, the below change will come into effect:
     Changed: When a player buys something from a merchant the core will not longer handle taking gold from the player, and moving items to the players pack.
              When the event for EVID_MERCHANT_SOLD and EVID_MERCHANT_BOUGHT is sent it will be a struct containing the following struct:
              struct.type = EVID_MERCHANT_SOLD or EVID_MERCHANT_BOUGHT
              struct.source = player buying 
              struct.shoppinglist = array( struct.item, struct.amount )
              
              The shopping list items will still be items in the merchant's container.
              It is up to the script to split the items from the stacks there and move them to the player's pack.
              It is also up to the script to handle gold checks and consumption.
     
    Added: item.SplitStackInto(container, amount) 
              Will split the item into 2 stacks. Returns a reference to the new stack made from item. Places new stack into the container.
     Added: item.SplitStackAt(x, y, z, realm, amount)
              Will split the item into 2 stacks. Returns a reference to the new stack made from item. Places new stack at the coordinates.
     
05-19-2011 Turley:
     Added: CustomHousing Support (beta)
            officially added uo::SendHousingTool( who, house );
     Added: script call of "scripts/misc/customhousecommit.ecl" on commit (noncritical)
            params: ( who, house, houseelemarray )
            houseelem = struct{graphic,xoffset,yoffset,z}
            to get the real coords from an elem add house.x/y
            called after client presses the commit button
            to accept the changes call new method house.acceptcommit(chr,1) or house.acceptcommit(chr,0) to drop the commit 
            main purpose should be calculation of cost (with delta support for later changes),
            link establishing of houseteleporters (0x181D - 0x1828)
            and adding a signhanger/sign if you didnt added it during multifoundation buildup
            Doors and Teleporters are added to house components as normal items without any special treatment
            so dont forget to add scripts/itemdesc entries
     Added: member multi.house_parts
            returns array of structs{graphic,xoffset,yoffset,z} or error if not a custom house, or currently been edited
            to get the real coords from an elem add house.x/y
     Added: method multi.addhousepart(graphic,xoffset,yoffset,z) returns true or error
     Added: method multi.erasehousepart(graphic,xoffset,yoffset,z) returns true or error
     Added: members multi.house_editing / who.house_editing returns true if house is currently been edited / who is currently editing
      Note: house.setcustom(1) is needed before SendHousingTool() works
      Note: during editing chr is only allowed to walk inside the house
            all components which are not invisible get removed from component list during edit and added to design
            (not invisible to give the chance to eg protect a house sign from been removed from the editing char)
            any item inside the house will be invisible for the chr
            any other mobiles get moved outside the house
      Note: param houseelemarray in script call is the current list of houseparts, 
            multi.house_parts gives you the last stored list
      Note: until no house.acceptcommit() is called and start of commitscript no new SendHousingTool() for this house is allowed

05-04-2011 Turley:
     Fixed: Questarrow packet

04-30-2011 Turley:
     Fixed: enter/leave-events for NPCs (OWHorus)
     Fixed: diagonal moves in npc::CanMove() and uo::FindPath() (OWHorus)

04-03-2011 Turley:
     Added: uotool param checkmultis
            prints infos about used center item

03-12-2011 Turley:
     Fixed: npc:SayUC() sends SpeechEvent for do_event==SAY_DOEVENT_ENABLE
   Changed: removed warning "No handler for skill.." and changed sysmsg to "That skill cannot be used directly."
            since most of the time the behaviour is wanted
     Added: basic::TypeOfInt( expr ) + basic.em constants
            returns like TypeOf() the type of given parameter, but returns instead of a string an integer (see basic.em constants)
            since integer comparison are way faster then string comparison this function should always be used for comparisons

03-10-2011 Turley:
     Added: pol.cfg AccountDataSave (default -1)
            Values:
            -1 : old behaviour, saves accounts.txt immediately after an account change
             0 : saves only during worldsave (if needed)
            >0 : saves every X seconds and during worldsave (if needed)

02-15-2011 Turley:
   Changed: "in" keyword now returns the arrayindex or 0 if no match was found

02-05-2011 Turley:
     Fixed: no exception will be thrown if region enter/leavescript doesnt exist
     Fixed: windows trayicon

10-22-2010 Turley:
     Fixed: UOHSA packet changes
     Added: mobile.clienttype / client.clienttype HSA flag 0x200

09-06-2010 Turley:
     Added: TinyXML based xml reading/writing
     Added: file::OpenXMLFile(filename)
             opens given filename and returns XMLFile object
             fileaccess.cfg is checked
            file::CreateXMLFile()
             creates an empty XMLFile object
            XMLFile.setxmldeclaration(string version, string encoding, string standalone)
             sets xmldeclaration eg <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
            XMLFile.appendxmlnode(string value, struct{attributes})
             appends Node with name value and given attributes (key=name, value=value)
            XMLFile.appendxmlcomment(string value)
             appends Comment
            XMLFile.removexmlnode(string value)
             removes first node of given value
            XMLFile.savexml(string filename)
             saves to filename
             fileaccess.cfg is checked
            XMLFile.xmltostring([string indent])
             returns the xml file as String with given indent string {default "\t"}
            XMLFile[string] returns first node of given name
            XMLFile[integer] returns node of given index (1-based)
     Added: XMLNode object
            XMLNode.attributes
             returns XMLAttributes object
            XMLNode.type
             returns type string 
             (XMLComment, XMLDeclaration, XMLDocument, XMLElement, XMLText, XMLTypeCount, XMLUnknown)
            XMLNode.firstxmlchild([string value])
             returns first child or first child of given name
            XMLNode.nextxmlsibling([string value])
             returns next sibling, or next sibling of given name
            XMLNode.appendxmlnode(string value, struct{attributes})
             appends Node with name value and given attributes (key=name, value=value)
            XMLNode.appendxmlcomment(string value)
             appends Comment
            XMLNode.setxmlattribute(struct{attributes})
             sets attributes for node
            XMLNode.removexmlattribute(string key)
             removes attribute of given key
            XMLNode.removexmlnode(string value)
             removes first node of given value
            XMLNode.appendxmltext(string text)
             appends text to node
            XMLNode[string] returns first node of given name
            XMLNode[integer] returns node of given index (1-based)
     Added: XMLAttributes object
            XMLAttributes.propnames()
             returns Array of all attribute names
            XMLAttributes[string] returns value of given attribute name
     Added: foreach loop support:
            XMLFile, XMLNode: iterates over all child Nodes
            iterator is XMLNode object, "_iterator_iter" is integer index
            XMlAttributes: iterates over all attributes
            iterator is a struct with key=attributename, value=attributevalue
            "_iterator_iter" is integer index
      Note: small examples:
            one way to read an xml file:
            <?xml version="1.0" ?>
            <root>
             <Hello>World</Hello>
             <!--Comment-->
             <nodetwo i="1" />
            </root>
            var file:=OpenXMLFile("helloworld.xml");
            parsenode(file,"");
            function parsenode(node,i)
             foreach blubb in node
              syslog(i+cstr(blubb)+" ["+blubb.type+"] ("+cstr(_blubb_iter)+")");
              parseattrib(blubb,i+"-");
              parsenode(blubb,i+" ");
             endforeach
            endfunction

            function parseattrib(node,i)
             foreach ele in (node.attributes)
              syslog(i+cstr(ele)+" ("+_ele_iter+")");
             endforeach
            endfunction
            
            one way how to create such an file:
            var file:=CreateXMLFile();
            file.setxmldeclaration("1.0","","");
            file.appendxmlnode("root");
            file["root"].appendxmlnode("Hello");
            file["root"]["Hello"].appendxmltext("World");
            file["root"].appendxmlcomment("Comment");
            file["root"].appendxmlnode("nodetwo",struct{i:=1});
            file.savexml("helloworld.xml");
            
08-20-2010 Turley:
     Fixed: util:StrFormatTime() checks if format string is correct and if not returns "Invalid Format String." error
            instead of server crash

08-09-2010 Turley:
     Fixed: exported function calls a different exported function stops execution (eg repsys functions in same script)

06-22-2010 Turley:
     Fixed: uo::RestartScript() wakes up old script so it stops immediately

06-19-2010 Turley:
     Fixed: uo::SendDialogGump SENDDIALOGMENU_FORCE_OLD for 2d 7.x clients (UOKR & UOSA clients ignore the flag)

03-27-2010 Turley:
     Added: os::Start_Skill_Script( chr, attr_name, script_name := "", param := 0 )
            starts for given chr and attr_name definied script (overrideable with param script_name)
            param is any UObject given to skill script as second param (first is chr)
            performs the same checks like normal skillusage (death,frozen,skilldelay,...)
            (Tomi)
     
03-26-2010 Turley:
   Changed: uo::DisconnectClient() now accepts client or character object (Tomi)

03-24-2010 Turley:
     Added: ClientRef object
            pkt.sendpacket() & SendPacket() now accepts client or character
            r/o members:
            ip, acctname, clientversion, clientinfo, clienttype, clientver_detail, uo_expansion_client
            methods:
            compareversion()
            used as prelogin param for packethooks instead of old struct (so you can send packets)
     Added: character.client
            returns ClientRef object or error
     Note:  This or next release duplicate members/methods get deleted from chr (except acctname)
            
03-17-2010 Turley:
     Fixed: Trim: left&right doesnt return empty string if complete string has to be trimmed

03-12-2010 Turley:
     Fixed: uoconvert - default value of MaxTileID (0x3FFF)
     Added: uoconvert param {maxtileid=0x3FFF/0x7FFF} (if uodata= param is given pol.cfg never gets read)

02-20-2010 Turley:
   Changed: ListStaticsInBox,ListObjectsInBox,ListMultisInBox now swap x,y,z values if in wrong order
     Added: uo::DistanceEuclidean(obj1, obj2) & uo::CoordinateDistanceEuclidean(x1, y1, x2, y2)
            returns the Euclidean distance as double ( sqrt(pow(x1-x2,2)+pow(y1-y2,2)) )

02-18-2010 Turley:
     Added: (Tomi) Syshook UnHide(mobile)
            return values 0 stops the char from unhiding and 1 let the core process it.
     Added: (Tomi) "DisableCoreChecks" 0/1 (default 0) to each attribute entry in attribute.cfg
            if true the core will not check during skill_use ( from skillwindow ) for active skills, 
            active spells, frozen, paralyzed or delay
            if false core will check everything as it does now.
   Changed: Increased Maximum UO SkillID to 57 (default value of uoclient::MaxSkillID)

02-17-2010 Turley:
     Fixed: direct usage of struct/dictionary initializer in array/dictionary/struct definition
            eg: var dict:=dictionary; dict["blubb"]:=struct{a:=1};

02-16-2010 Turley:
     Fixed: StrReplace,SubStrReplace return "Invalid parameter type" instead of crashing if non string object
            is given as to_replace, replace_with
     Fixed: Several small memoryleaks

02-04-2010 Turley:
     Added: polcfg:DiscardOldEvents 1/0 {default 0}
            if set instead of discarding new event if queue is full it discards oldest event and adds the new event
   Changed: "Event queue is full.." only prints if polcfg.LogLevel >= 11

02-03-2010 Turley:
     Added: MethodScript support for mobiles
            NPC: npcdesc.cfg MethodScript entry
            Character: uoclient.cfg section "General" MethodScript entry

02-01-2010 Turley:
     Added: multi create additionally checks for valid realm coord of the corners
   Changed: uotool staticdefrag [britannia] (removed "realm=")
     Added: uotool formatdesc [desc] little helper prints singular & plural form of given desc
     
01-22-2010 Turley:
     Added: Speedhack Prevention System
     Added: ssopt::SpeedhackPrevention 0/1 (default 0)
     Added: chr priv "speedhack" disables Speedhack Prevention for chr

01-15-2010 Turley:
     Added: (Tomi) chr priv "runwhilestealth" you can run while you are in stealth for as many stealthsteps you have
     Added: (Tomi) new npcdesc entry "SaveOnExit" 0/1 ( defaults to 1 )
      Note: this also means that SaveOnExit can be definied in the override_properties struct
   Changed: vitals::ApplyDamage( mobile, damage, userepsys := DAMAGE_USE_REPSYS, send_damage := DAMAGE_USE_DEFAULT )
            vitals::ApplyRawDamage( character, hits, userepsys := DAMAGE_USE_REPSYS, send_damage := DAMAGE_USE_DEFAULT )
            const DAMAGE_NO_SHOW := 0;
            const DAMAGE_SHOW := 1;
            const DAMAGE_USE_DEFAULT := 2;
            DAMAGE_USE_DEFAULT uses the SendDamagePacket setting from combat.cfg (Tomi)
     Added: uo::SendOverallSeason( season_id, playsound := 1 )
            Used to send the Season packet 0xBC to all clients logged on.
            This function doesnt resend the lightlevel or weather after it sends season, that has to be done by scripts.
            chr.setseason( season_id, playsound )
            Used to send the Season packet 0xBC to a single character.
            This method doesnt resend the lightlevel or weather after it sends season, that has to be done by scripts.
            (Tomi)
   Changed: (Tomi) uo::SpeakPowerWords( who, spellid, font := _DEFAULT_TEXT_FONT, color := _DEFAULT_TEXT_COLOR) 
            font, color like every speech function

01-14-2010 Turley:
     Fixed: (Arkham) ip byteorder for gameserverlist if hostname is given
   Changed: (Tomi) gargoyle char create equips 0x1F03 robe
     Added: (Tomi) ssopt.NewbieStartingEquipment 1/0 (default 1) to determine if equipped items 
            created during the character creation should be newbied or not.
   Changed: misc/oncreate.src added third param profession 
            some clients doesnt send skillvalues if profession is given now core doesnt stop char creation, 
            based on third param you can set the skillvalues in oncreate
     Added: more errorchecks to char create, it now checks if hair/beard/face can be equipped (fixes crash with latest OSI
            tiledata where facial horn has the same layer as "normal" horn)
     Added: Combatcfg:AttackWhileFrozen 1/0 (default 1) if set to false attack checks if chr is frozen or paralyzed
     
01-12-2010 Turley:
     Added: on Profile opening and update request "scripts/misc/charprofile.ecl" is called
            params are character, of_who, mode,uctext
            if mode==0 (request) uctext is 0
            if mode==1 (update) uctext is new unicode array
            both modes ignore the return value
            - Tomi
     Added: uo::SendCharProfile( character, of_who, title, uneditable_text := CHARPROFILE_NO_UNEDITABLE_TEXT, editable_text := CHARPROFILE_NO_EDITABLE_TEXT )
            will send the serverside charprofile packet back to client and display it for the player.
            uneditable_text & editable_text are unicode arrays
            constants are:
            const CHARPROFILE_NO_UNEDITABLE_TEXT := array;
            const CHARPROFILE_NO_EDITABLE_TEXT := array;
            - Tomi
      Note: Only a script interface for making a fully working CharProfile without packethooks.
            Not a fully working charprofile system controlled by the core, ALL text strings still have to be 
            stored somewhere by scripts.
            
01-01-2010 Nando:
     Added: (Tomi) New itemdesc property "StackLimit", defines the maximum stack
            of that item (lower than 60k). If not defined, will default to 60000.
      Note: Happy new year. :) 

12-21-2009 Turley:
     Fixed: call of built-in method with ._methodname if overridden
     Added: Multis now support method script

12-18-2009 Turley:
     Added: file::CreateDirectory( dirname )
            returns 1 on success else error 
            ("Error in dirname descriptor","No parent path traversal please.",
            "Directory already exists.","Could not create directory.")
     Added: file::ListDirectory( dirname, extension := LISTDIR_ALL_FILES, listdirs := LISTDIR_DONT_LIST_DIRS )
            extension param can be extension without "." or file.em constant
            file.em constants:
            const LISTDIR_LIST_DIRS      := 0x1;
            const LISTDIR_DONT_LIST_DIRS := 0x0;
            const LISTDIR_NO_FILES       := "";
            const LISTDIR_ALL_FILES      := "*";
            returns array of strings or error
            ("Error in dirname descriptor","No parent path traversal please.","Directory not found.")
      Note: Both functions doesnt check file access rights

12-17-2009 Turley:
     Added: uo::CloseWindow( character, type, object ) - Tomi
            possible values for type
            const CLOSE_PAPERDOLL := 1;
            const CLOSE_STATUS    := 2;
            const CLOSE_PROFILE   := 8;
            const CLOSE_CONTAINER := 12;
      Note: if ( type == CLOSE_CONTAINER ) object has to be a ContainerRef, to close the open container gump.
            else object has to be a MobRef to close paperdoll, status or profile of the chosen mob.

12-16-2009 Turley:
     Added: Encrypted Client support - Tomi
   Changed: uoclient.cfg Listener::Encryption and pol.cfg ClientEncryptionVersion now support
            ignition = uorice = none, 2.0.0x and due to autocalculation major.minor.build (no patch)
            e.g. 7.0.4 for latest client 7.0.4.1
            default for both is "none"
      Note: Till OSI changes the encryption type pol now supports every encrypted client without 
            updating the core (last change was 2.0.4)

12-04-2009 Turley:
   Removed: deprecated pol.cfg entries "MasterKey1","MasterKey2","ClientVersion","KeyFile" - Tomi
     Added: Gargoyles count as mounted while flying

12-03-2009 Turley:
     Added: basic gargoyle flying support (new movemode "F")
     Fixed: poison status for newer clients
      Note: gargoyles can "fly" on tiles with tiledata flag HOVEROVER (MAPDATA_FLAG_OVERFLIGHT)
            rebuilding of all realms is required
            currently flymode can only be activated clientside (0xBF:0x32) and if race=RACE_GARGOYLE
            renamed uo:TILEDATA_FLAG_NODIAGONAL to uo:TILEDATA_FLAG_HOVEROVER

12-02-2009 Turley:
     Added: 0xF3 packet is send instead of 0x1A for clients >= 7 or UO:SA clients - Tomi
     Added: polcfg MaxTileID 0x3FFF / 0x7FFF (default 0x3FFF)
            since client 7.0.0.0 item graphic can be definied up to 0x7FFF - Tomi
     Added: "SA" for expansion type. This includes sending 0x187DF with packet 0xB9. - Tomi
     Added: support of new map TerMur - Tomi
      Note: uoconvert param: 
            realm=termur mapid=5 width=1280 height=4096
            uoconvert.cfg new stairs since SA:
            0x1de0 0x1de1 0x1de2 0x1de3 0x1de4 0x1de5 0x1de6 0x1de7 0x1de8 0x1de9 0x1dea 0x1deb
     Added: Gargoyle support (race = uo:RACE_GARGOYLE)
      Note: graphics are: 
            UOBJ_GARGOYLE_MALE         0x029A
            UOBJ_GARGOYLE_FEMALE       0x029B
            UOBJ_GARGOYLE_MALE_GHOST   0x02B6
            UOBJ_GARGOYLE_FEMALE_GHOST 0x02B7
     Added: support of UO:KR/SA char create packet 0x8D
     Added: new gargoyle hair & beard 0x4258-0x425F & 0x42AD-0x42B0
     Added: UO:KR/SA face support
     Added: ssopt.SupportFaces 0/1/2 (default 0)
            set it to 1 to support basic faces
            set it to 2 to support roleplay faces (sets 0x2000 flag in 0xB9 packet)
      Note: Faces are normal items (like hair/beard) with layer 15, objtype 0x3B44-0x3B57
            roleplay faces 0x3B4E-0x3B57

11-30-2009 Turley:
     Added: polsys::MD5Encrypt(str) returns MD5 hash string.
     Fixed: RecalcVitals function for vital changes doesnt check if maximum value changed

11-26-2009 Turley:
     Added: Syshook CanDie(mobile)
            Called when the mobile is about to die, return 0 to stop death.

11-24-2009 Turley:
     Fixed: missing realm check for ListenPoints

11-23-2009 Turley:
     Added: uotool param staticdefrag [realm=britannia] to defrag/remove duplicate statics (like fiddler does)

11-20-2009 Turley:
   Changed: RecalcVitals( character, calc_attribute := RECALC_INTRINSIC_MOD, calc_vital := RECALC_VITALS )
            const RECALC_INTRINSIC_MOD    := 1;
            const RECALC_NO_INTRINSIC_MOD := 0;
            const RECALC_VITALS           := 1;
            const RECALC_NO_VITALS        := 0;
            possible values for calc_attribute:
            RECALC_INTRINSIC_MOD - calls for every attribute the GetIntrinsicModFunction (old behaviour)
            RECALC_NO_INTRINSIC_MOD - skips the GetIntrinsicModFunction calls
            attribute name string - only calls the GetIntrinsicModFunction for given attribute
            possible values for calc_vital:
            RECALC_VITALS - calls for every vital the RegenRateFunction & MaximumFunction (old behaviour)
            RECALC_NO_VITALS - skips the RegenRateFunction & MaximumFunction calls
            vital name string - only calls the RegenRateFunction & MaximumFunction for given vital
            - based on Tomi
            
11-19-2009 Turley:
   Changed: chr.setlightlevel() now supports endless duration (-1) return is the new gameclock value - Tomi
     Added: [paralyzed] & [deafened] @ singleclick packet - Tomi
     Added: ServSpecOpt CoreSendsSeason 1/0 (default 1)
            Determines if the core should send season packet on char creation/logon/reconnect and realm 
            change based on the season entry in realm.cfg. - Tomi
   Removed: "You cannot insert that item into the container." sysmsg after container CanInsert script 
            returns 0 - Tomi
   Changed: uo::UpdateMobile(who, flags:=UPDATEMOBILE_UPDATE)
            const UPDATEMOBILE_RECREATE := 1;
            const UPDATEMOBILE_UPDATE   := 0;
            if flags is UPDATEMOBILE_UPDATE old behaviour it sends update Mobile packet 0x77, 
            if set to UPDATEMOBILE_RECREATE it sends recreate packet 0x78 - Tomi
     Added: ServSpecOpt CoreHandledTags (default 0xffff)
            bitfield to determine which tags are displayed on singleclick, current used bits are:
            0x1  [title_guild]
            0x2  [frozen]
            0x4  [paralyzed]
            0x8  [squelched]
            0x10 [deafened]

11-17-2009 Turley:
     Fixed: possible hang in party system
            remove object packet send when container is on a character
            several movement code bugs

11-16-2009 Turley:
     Added: NPCs receive EnteredArea event on char resurrect

11-11-2009 Turley:
   Changed: intern container MaxItems too highest possible value (packet size) its now 3200
   Changed: container "can add"-functions to only check weight recursive

10-22-2009 Turley:
     Added: Syshook Ouch(mobile,lastx,lasty,lastz)
            Called if mobile falls atleast 22 down (fixed Clientside value)
     Added: uo::CanWalk(movemode, x1, y1, z1, x2_or_dir, y2 := CANWALK_DIR, realm := _DEFAULT_REALM)
            const CANWALK_DIR := -1;
            movemode is mobile.movemode string
            if y2 is CANWALK_DIR x2 is considered as direction (0-7)
            if x2 and y2 is given it calculates the needed direction
            returns new z value or error
            
10-17-2009 Turley:
     Added: PrivUpdater for "invul","seeghosts","seehidden" and "seeinvisitems" updates/sends/removes objects
            in visual range on enable/disable - Tomi
   Changed: .startlog/.stoplog checks now if priv "plogany" is enabled instead of only given - Tomi
     Fixed: priv "all" now works as expected if enabled every other priv is also enabled

10-14-2009 MuadDib:
   Changed: Methods Char.Squelch() and Char.Deaf() return the gameclock value they are in effect until.
   
10-14-2009 Turley:
     Added: char privilege "canbeheardasghost"
            With this privilege everybody can hear you even as a ghost (no 'oO' replacement) - Tomi
     Added: pol.cfg TimestampEveryLine 1/0 (default 0) if set every line in pol.log gets timestamp
     Added: char.deaf(duration) - duration in seconds.  -1=forever, 0=off
     Added: char.deafened r/o

10-12-2009 Turley:
   Changed: Method/Syshook definitions now supports :pkg: format - Tomi
     Added: ServSpecOpt SpeechRange default 12
            ServSpecOpt WhisperRange default 2
            ServSpecOpt YellRange default 25
            - Tomi

10-10-2009 Turley:
     Added: new Spellbook methods
            book.removespell(id) removes given spellid returns 1/0
            book.addspell(id) adds given spellid returns 1/0

10-09-2009 Turley:
     Added: new Spellbook methods
            book.spells() returns Array of SpellIDs
            book.hasspell(id) checks if SpellID is inside the spellbook returns 1/0

10-07-2009 Turley:
     Fixed: DestroyItem call inside CanInsert scripts

10-03-2009 MuadDib:
     Added: SysHook::CanDecay(item). Return 0, core decay will ignore item and continue on the cycler. If it
            returns 1, core decay will handle the item as normal. - Patch submitted by Tomi
     Fixed: Useage of plural forms for more than 1 word in the itemdesc desc entry. - Patch by Tomi
            
09-22-2009 Turley:
     Added: Combatcfg:SendDamagePacket 1/0 default 0 if set sends packet 0xB (0xBF sub 0x22 for clients<4.0.7a)
            to attacker(ScriptController) and defender on ApplyDamage and ApplyRawDamage
     Added: new param to ApplyDamage & ApplyDamage they are now:
            ApplyDamage( mobile, damage, userepsys := DAMAGE_USE_REPSYS );
            ApplyRawDamage( character, hits, userepsys := DAMAGE_USE_REPSYS );
            const DAMAGE_USE_REPSYS := 1;
            const DAMAGE_NO_REPSYS := 0;
            If userepsys is set to DAMAGE_NO_REPSYS repsys system isnt called (on_attack & on_damage)
 
09-22-2009 MuadDib:
   Changed: NPC/Char ar/ar_mod internal handling rewrote.
     Fixed: NPC Elemental Resist/Damage storage issues.
     Fixed: Lightlevel resetting in client during Login.
     
09-20-2009 MuadDib:
   Changed: Spell casting no longer unhides. Be sure to update your scripts to unhide.
   Changed: SpeakPowerWords() will now check if mob is hidden. If so, it uses Private Say Above.
            
09-18-2009 MuadDib:
     Added: Multi Walk On Script support. Works for player and npc. Just add Walkon itemdesc entry to the house.
      Note: This is in early stages. While it is working, not all cases may register and deregister where a mob
            gets put onto or removed from a house. If you find cases that do, report to bugtracker.
   Removed: Storing scrolls inside spellbooks. Destroyed after insert is complete.
   Changed: Pre-AOS Clients still get the same packet they always did when opening a spellbook, built entirely
            off the bitflag system for newer spellbooks. So no more keeping scrolls inside of books. :D
      Note: As spellbooks are loaded for the first time with newer cores and as added to books, scrolls are
            marked SaveOnExit 0. Newly inserted scrolls from then on, are destroyed during insertion after spell
            contents are updated on the book.
            
09-16-2009 Turley:
   Removed: char.isUOKR
   Added:   char.ClientType r/o bitfield
   Note:    current Flags are:
            CLIENTTYPE_4000  = 0x1,  // 4.0.0a   (new spellbookcontent packet 0xbf:0x1b)
            CLIENTTYPE_4070  = 0x2,  // 4.0.7a   (new damage packet 0x0b instead of 0xbf:0x22)
            CLIENTTYPE_5000  = 0x4,  // 5.0.0a   (compressed gumps)
            CLIENTTYPE_5020  = 0x8,  // 5.0.2a   (Buff/Debuff 0xdf)
            CLIENTTYPE_6017  = 0x10, // 6.0.1.7  (Grid locs)
            CLIENTTYPE_60142 = 0x20, // 6.0.14.2 (feature enable 0xb9 size change)
            CLIENTTYPE_UOKR  = 0x40,
            CLIENTTYPE_7000  = 0x80, // 7.0.0.0  (Gargoyle race)
            CLIENTTYPE_UOSA  = 0x100
   Note:    Pol will be now compiled with flag /LARGEADDRESSAWARE (win only flag) pol should now be able to consume more memory

09-14-2009 MuadDib:
   Removed: All import abilities built in to core for UOX data files. O_O
      Note: The file "import.txt" will be loaded each time POL loads, when found in the world data directory. This file's
            format is the same as, for example, the ITEMS.TXT file POL saves. You can use this for example, to store all your
            doors, decorations, etc, to ensure they are reloaded after a wipe, or loaded every time POL starts. These items
            are added to the real world, and saved to items.txt. However, if on load the same objtype is found at the same
            x y z as the item in IMPORT.TXT, it destroys that item, and loads the import one.
            
09-10-2009 Turley:
    Added:  CompressedGump support packet 0xdd
    Added:  flag param to SendDialogGump() SENDDIALOGMENU_FORCE_OLD/0 default 0
    Note:   SendDialogGump sends compressed gump if (client.isUOKR || (!SENDDIALOGMENU_FORCE_OLD && clientversion >=5.0.0a)) else old uncompressed
    Note:   Patch submitted by Grin

09-09-2009 Turley:
    Added:  ServSpecOpt CarryingCapacityMod (double default 1.0) as * modifier for mobile max_weight
    Note:   Formula is (40 + strength * 7 / 2) * ssopt.CarryingCapacityMod
    Note:   Since ML max weight is send for statusgump
    Note:   Patch submitted by Tomi
    
09-05-2009 MuadDib:
    Added:  POL Linux builds will now create a PID file when loading. Patch submitted by Crazyman

09-05-2009 Turley: 
    Added:  struct .? and .- as shortcut for .exists() and .erase()

09-03-2009 MuadDib:
   Changed: CoreHitSounds, ScriptedAttackChecks, ResetSwingOnTurn, SendSwingPacket all moved from SSOPT to Combat CFG.
   
08-19-2009 Turley:
    Added:  r/o member character.uo_expansion_client client sends this flag at packet 0x5D charselect and 0x00 createchar
    Note:   values are:
            FLAG_T2A         = 0x00,
            FLAG_RENAISSANCE = 0x01,
            FLAG_THIRD_DAWN  = 0x02,
            FLAG_LBR         = 0x04,
            FLAG_AOS         = 0x08,
            FLAG_SE          = 0x10,
            FLAG_SA          = 0x20,
            FLAG_UO3D        = 0x40,  // ?
            FLAG_RESERVED    = 0x80,
            FLAG_3DCLIENT    = 0x100  // 3d Client
            
08-14-2009 Turley:
    Changed: Stopped spam of unknown packet for 0xBF.5 & 0xBF.C

08-09-2009 MuadDib:
      Fixed: Better handling of sending poison updated to UO:KR Clients.
    Changed: UpdateCharacterWeight() now sends correct packets instead of calling on RefreshAR() to
             notify client of new weight. Reduces overhead.
             
08-07-2009 MuadDib:
      Fixed: New system in core for handling layers on items and corpses. On mobile death, only items equipped
             will be given the Layer prop in the corpse.
    Changed: New system for corpses also is affected by insert/remove of items to the corpse by script and
             drop into by player. Dropping new items into a corpse will cause it to set the layer accordingly
             long as nothing else is already using that layer on the corpse.
    Changed: Very small optimization to equip item code for handling the setting of layer.
    
08-06-2009 MuadDib:
    Changed: PasswordOnlyHash removed from core. Now only ClearText and Hashed Passwords will be used.
             Default is now PasswordHash instead of ClearText.
       Note: Using ClearText is not recommended as it leaves all your account's passwords wide open if
             the accounts.txt file is comprimised. You have been warned.
    Removed: Account.PasswordHash - This was for the PasswordOnlyHash.
      Added: Item.getgottenby Member. Returns CharRef of Player holding item, Error if not being held.
      
08-06-2009 Turley:
  Added:     new Methods
             Character.setAggressorTo(chr)
             Character.setLawfullydamagedTo(chr)
             sets aggressor/lawfullydamaged for repsys.cfg:AggressorFlagTimeout seconds for given chr
             Character.clearAggressorTo(chr)
             Character.clearLawfullydamagedTo(chr)
             clears aggressor/lawfullydamaged entry for given chr
             
08-04-2009 MuadDib:
  Changed:   RecalcVitals() and other internal parts of core that share recalc_vital_stuff() will now check to see if
             each vital has changed, before resending it to client. Reduces overhead.
             
08-03-2009 MuadDib:
  Removed:   uopacket.cfg::is6017 has been removed.
    Added:   uopacket.cfg::Version (1 or 2) Default 1
             uopacket.cfg::Client (client version string) Default 1.25.25.0
             Read packethooks.txt for details.
             
07-31-2009 Turley:
    Added:   ServSpecOpts::ResetSwingOnTurn=true/false default false
             Should SwingTimer be reset with projectile weapon on facing change
    Added:   ServSpecOpts::SendSwingPacket=true/false default true
             Should packet 0x2F be send on swing.
             Client sends automatically move packet to face the opponent

07-25-2009 MuadDib:
    Fixed:   Bug blocking equipping when intrinsic weapon was marked as two handed.
    
07-17-2009 Turley:
    Added:   "ShadowRealms"
             polsys::AddRealm(realm_name,base_realm);
             returns 1 or error ("BaseRealm not found.","BaseRealm is a ShadowRealm.","Realmname already defined.")
             Creates a new Realm based on an other realm, uses same map and regions
             polsys::DeleteRealm(realm);
             returns 1 or error ("Realm not found.","Realm is not a ShadowRealm.","Mobiles in Realm.","Items in Realm.")
             Deletes a ShadowRealm, only if the realm is "clean"
    Note:    ShadowRealms get saved/loaded in pol.txt
    Note:    if ServerSpecOpt is set AddRealm/startup creates a Decaythread
    Changed: On realm change client gets RemovePacket for all objects inrange

07-16-2009 MuadDib:
    Added:   Removal of Grid Index to items when Container::remove is called within the core.
    Added:   ItemDesc::Container::MaxSlots = 1-255, default ServSpecOpts::MaxSlots
    Added:   ServSpecOpts::UseContainerSlots=true/false, default false.
    Added:   UseContainerSlots check to can add bulk code to ensure not going over max slot capacity of 255 and a container's max slot capacity.
  Changed:   DropItem packets now redone for Slot support. Better handling internally, and core will move an item to next available slot
             if one sent is not available. Before code is used, it checks if UseContainerSlots is true.
    Note*:   UseContainerSlots is not yet fully implemented. Will cause core to ignore all grid setting for core moved items.
             The purpose of this, is since Legacy 2D clients ignore this setting anyway, you can use this to ignore Max Slots
             and allow core to move items into a container regardless of MaxSlots settings (which is kinda like a secondary Max Items).
             With this enabled, it will enfore MaxSlots when core and player moves items to containers. If Max Items is not reached,
             it will check MaxSlots. If MaxSlots is not reached, allows moving the item into container.
             This is being added to allow to turn grid support on and off based on the client versions (and types) that you will be
             supporting on your shard.
    
07-04-2009 Turley:
    Added:   new Object Class BinaryFile
             File::OpenBinaryFile( filename, mode := OPENMODE_IN, endian := LITTLE_ENDIAN );
             like the other file functions it checks file access rights (fileaccess.cfg) (Read and/or Write)
             mode constants:
             const OPENMODE_IN    := 0x01; // (input) Allow input operations on the stream
             const OPENMODE_OUT   := 0x02; // (output) Allow output operations on the stream
             const OPENMODE_ATE   := 0x04; // (at end) Set the stream's position indicator to the end of the stream on opening
             const OPENMODE_APP   := 0x08; // (append) Set the stream's position indicator to the end of the stream before each output operation
             const OPENMODE_TRUNC := 0x10; // (truncate) Any current content is discarded, assuming a length of zero on opening
             endian constants:
             const LITTLE_ENDIAN := 0x00;
             const BIG_ENDIAN    := 0x01;
             returns BinaryFile Object or error
    Note:    implemented BinaryFile comparisons are
             true/false (!) checks if filestream is open
             == checks if filename is the same
    Added:   BinaryFile methods:
             .close() closes the underlying stream returns 1
             .size() returns the filesize or error
             .seek(int offset, int seekdir) sets position returns 1/0 or error
             seekdir constants:
             const SEEKDIR_BEG := 0x00; // beginning of sequence
             const SEEKDIR_CUR := 0x01; // current position within sequence
             const SEEKDIR_END := 0x02; // end of sequence
             .tell() gets current position returns int
             .peek() Reads and returns the next byte without extracting it (-1 if eof is reached)
             .flush() writes all unwritten chars from buffer to file
             .getInt32() gets unsigned 32-bit (4 byte) 1 or error
             .getInt16() gets unsigned 16-bit (2 byte) 1 or error
             .getInt8() gets unsigned 8-bit (1 byte) 1 or error
             .getSInt32() gets signed 32-bit (4 byte) 1 or error
             .getSInt16() gets signed 16-bit (2 byte) 1 or error
             .getSInt8() gets signed 8-bit (1 byte) 1 or error
             .getString(length) gets a string (1-byte characters) string or error
             .setInt32() sets unsigned 32-bit (4 byte) 1 or error
             .setInt16() sets unsigned 16-bit (2 byte) 1 or error
             .setInt8() sets unsigned 8-bit (1 byte) 1 or error
             .setSInt32() sets signed 32-bit (4 byte) 1 or error
             .setSInt16() sets signed 16-bit (2 byte) 1 or error
             .setSInt8() sets signed 8-bit (1 byte) 1 or error
             .setString(string string, int nullterminate) sets a string 
             set nullterminate to 1 to append a 0 terminator 1 or error
             
07-01-2009 Turley:
    Changed: UoConvert now also saves the color of static tiles
    Added:   ListStatics* return struct member "hue"
    Note:    Rebuild of all realms is required

06-29-2009 MuadDib:
    Added:   Additional check in internal grid checks on containers, to speed up handling for full containers.
    Added:   ServSpecOpt.cfg::MaxContainerSlots=unsigned integer.
                 This will allow setting the internal overall allowed item count for containers. This is introduced for future KR support.
                 KR client is only 125, but we are making this here so custom clients later can support more slots.
                 If you have containers with max item count over 125 and use ONLY 2D, and not KR, set this to your highest amount used!
                 
06-27-2009 Turley:
    Fixed:   Item creation with ItemDescriptor can now override .Desc

06-25-2009 Turley:
    Added:   new r/o Members (Array{Struct{"serial","ref","seconds"}})
             Mobile.aggressorto
             Mobile.lawfullydamaged
             as interface for core repsyssystem

06-20-2009 Turley:
    Added:   new r/w Members (Double) default 1.0
             Mobile.movecost_walk_mod 
             Mobile.movecost_run_mod
             Mobile.movecost_walk_mounted_mod
             Mobile.movecost_run_mounted_mod
             used as multiplier see movecost.cfg doc for exact calculation

06-17-2009 Turley:
    Added:   Method Array.randomentry() shortcut for var entry:=array[RandomInt(array.size())+1];
    Added:   uo::GetRegionLightLevelAtLocation(x,y,realm) returns the current region lightlevel

05-02-2009 Turley:
    Added:   new TargetCoordinates return member "multi" with multiref if coords are inside a multi

04-17-2009 Turley:
    Changed: SpeechMul SysHook has now an additional parameter with the complete message as string
    Added:   party hooks:
             OnLeaveParty(who,fromwho)
             OnAddToParty(who)
             OnPartyCreate(party)
             OnDecline(who)
             OnLootPermChange(who)
    Note:    OnLeaveParty fromwho==who if who removes himself
    Added:   party General options:
             RemoveMemberOnLogoff 1/0 (default 0)
             RejoinPartyOnLogon 1/0 (default 0)
    Note:    RejoinPartyOnLogon is only used if RemoveMemberOnLogoff is true, if partyleader logoffs 
             the next member becomes the leader
