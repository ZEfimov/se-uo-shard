
use uo;

include ":keys:key";
include ":gumps:requestgump";
include "include/string";
include "include/say";

include ":attributes:attributes";

program UseKey(who, key)
	SendSysMessageEx(who, "Onde você deseja usar a chave?", SSM_REQUEST);
	var targ := Target(who);
	
	if ( !targ.IsA(POLCLASS_ITEM) )
		SendSysMessageEx(who, "Cancelado.", SSM_FAIL);
		return 0;
	elseif ( targ == key )
		RenameKey(who, key);
		return 1;
	elseif ( targ.IsKey() )
		CopyKey(who, key, targ);
		return 1;
	elseif ( !KP_IsLockable(targ) )
		SendSysMessageEx(who, "Isto não pode ser trancado.", SSM_FAIL);
		return 0;
	elseif ( Distance(who, targ) > 1 )
		SendSysMessageEx(who, "Você esta muito longe do alvo!", SSM_FAIL);
		return;
	endif
	
	if ( key.KeyMatchesLock(targ) )
		KP_ToggleLock(targ, who);
	else
		SendSysMessageEX(who, "Essa chave não combina com a fechadura.", SSM_FAIL);
	endif
	
	return 1;
endprogram

function RenameKey(who, key)
	var new_name := RequestGump(who, "Escreva o nome para a chave", "Tamanho maximo sao 30 caracteres.", key.desc, CANCEL_BTN_ON);
	var name_len := Len(new_name);
	
	if ( !new_name )
		SendSysMessageEX(who, "Cancelado.", SSM_FAIL);
		return 0;
	elseif ( name_len > 20 )
		SendSysMessageEX(who, "O nome esta muito longo.",SSM_FAIL);
		return 0;
	elseif ( name_len < 1 )
		SendSysMessageEx(who, "O nome esta muito curto.", SSM_FAIL);
		return 0;
	elseif ( new_name )
		SetName(key, new_name);
		return 1;
	endif
endfunction

function CopyKey(who, key, targ)
	if ( !(targ in EnumerateItemsInContainer(who.backpack)) )
		SendSysMessageEx(who, "A chave destino deve estar na sua mochila.", SSM_FAIL);
		return 0;
	endif
	
	var key_id := key.GetLockId();
	if ( !key_id )
		SendSysMessageEx(who, "Você não pode cópiar essa chave.", SSM_FAIL);
		return 0;
	elseif ( targ.GetLockId() )
		SendSysMessageEx(who, "A chave destino não pode ser cópiada.", SSM_FAIL);
		return 0;
	elseif ( Cint(GetObjProperty(key, "uncopy")) == 1)
		SendSysMessageEx(who, "Esta chave não pode ser cópiada.", SSM_FAIL);
		return 0;
	endif
	
	var test := RandomInt(100);
	if (test > 60)
		targ.SetLockId(key_id);
		SendSysMessageEx(who, "Você copiou a chave.", SSM_INFO);
      PrintText(who, "*copia uma chave*");
	else
		SendSysMessageEx(who, "Você quebrou a chave.", SSM_FAIL);
		DestroyItem(targ);
	endif
	
	return 1;
endfunction
