use uo;
use os;
use util;
use cfgfile;

include ":attributes:attributes";
include ":combat:weaponInfo";
include ":training:training";
include "include/client";
include "include/damage";
include "include/utils";

program ArcheryButte(who, butte)
	if ( butte.container )
		return 0;
	elseif ( !ReserveItem(butte) )
		SendSysMessage(who, "O alvo esta sendo usado.");
		return 0;
	endif

	var weapon := who.weapon;
	var weapon_attrib := CS_GetWeaponInfo(weapon, "Attribute");
	var weapon_skill := CS_GetWeaponInfo(weapon, "Pericia");
	var weapon_anim := CInt(CS_GetWeaponInfo(weapon, "Anim"));
	var miss_sound := CInt(CS_GetWeaponInfo(weapon, "MissSound"));
	var hit_sound := CInt(CS_GetWeaponInfo(weapon, "Hitsound"));
	var projectile_anim := CInt(CS_GetWeaponInfo(weapon, "ProjectileAnim"));
	var projectile_type := CInt(CS_GetWeaponInfo(weapon, "ProjectileType"));
	
	if ( Distance(who, butte) == 1 )
		RecoverAmmo(who, butte);
		return 0;
	elseif ( !weapon.isBow() )
		SendSysMessage(who, "Você precisa de uma arma de ataque a distancia.");
		return 0;
	elseif ( !TP_CheckRange(who, weapon, butte) )
		return 0;
	endif

	if ( !ConsumeSubstance(GetEquipmentByLayer(who, LAYER_CAPE), projectile_type, 1) )
		SendSysMessage(who, "Você não tem municao para esta arma.");
		return 0;
	endif

	PerformAction(who, weapon_anim);

	Sleep(1);

	var closest := butte;
	foreach point in ( GetCoordsInLine(who.x, who.y, butte.x, butte.y) )
		var z_pos := who.z;
		if ( z_pos < GetWorldHeight(point.x, point.y) )
			z_pos := GetWorldHeight(point.x, point.y);
		endif

		foreach mobile in ( ListMobilesNearLocationEX(point.x, point.y, z_pos, 0, LISTEX_FLAG_NORMAL+LISTEX_FLAG_HIDDEN) )
			if ( mobile != who )
				closest := mobile;
				break;
				SleepMS(2);
			endif
		endforeach
		SleepMS(2);
	endforeach

	PlayMovingEffect(who, closest, projectile_anim, 10, 0, 0);

	var test := RandomInt(20) + who.GetLevel();
	if ( test >= 10 )
		PlaySoundEffect(who, hit_sound);
		
		if ( closest.IsA(POLCLASS_MOBILE) )
			PerformAction(closest, ANIM_HIT);
			var projectile_damage := CS_GetWeaponInfo(weapon, "Damage");
			ApplyDamageEX(closest, RandomDiceRoll(projectile_damage), DMG_PHYSICAL);
		else
         var hited := DetermineIfHit(who, test);
			PrintTextAbove(butte, hited);
         if (!hited["Errou"])
            Set_Critical(1);
            var ammo := CInt(GetObjProperty(butte, "Ammo-"+projectile_type));
            ammo := ammo + 1;
            SetObjProperty(butte, "Ammo-"+projectile_type, ammo);
            Set_Critical(0);
         else
            var point := RandomPlace(butte, 1);
            CreateItemAtLocation(point.x, point.y, point.z, projectile_type, 1, butte.realm);
         endif
		endif
	else
		PlaySoundEffect(who, miss_sound);
	endif

	Sleep(3);
endprogram

function DetermineIfHit(who, test)
	if ( test > 18 )
		return "*Na mosca*";
	elseif ( test > 16 )
		return "*Acertou o anel interno vermelho*";
	elseif ( test > 14 )
		return "*Acertou o anel interno branco*";
	elseif ( test  >= 10 )
		return "*Acertou o anel externo vermelho*";
	else
		return "*Errou o alvo*";
	endif
endfunction

function RecoverAmmo(who, butte)
	var prop_list := GetObjPropertyNames(butte);

	if ( prop_list.Size() > 0 )
		foreach c_prop in ( prop_list )
			if ( c_prop["Ammo-"] )
				var ammo := c_prop;
				ammo["Ammo-"] := "";

				CreateItemInBackPack(who, CInt(ammo), CInt(GetObjProperty(butte, c_prop)));
				SendSysMessage(who, "Você recuperou municao.");

				EraseObjProperty(butte, c_prop);
			endif
			SleepMS(2);
		endforeach

		return 1;
	else
		SendSysMessage(who, "Não tem municao aqui.");

		return 0;
	endif
endfunction
