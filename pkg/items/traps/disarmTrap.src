
use uo;
use os;
use util;
include ":itemutils:canAccess";
include ":attributes:attributes";
include ":traps:traps";
include ":quest:quest";
include "include/say";
include "include/utils";

program skillremoveTrap(who, item)
   _resolveParams(who, item);
	EraseObjProperty(who, "IsMeditating");
	EraseObjProperty(who, "HealTimer");

	if (!maolivre(who, 2))
		return 0;
	endif

	if(!item)
		SendSysMessageEx(who, "Cancelado.", SSM_FAIL);
		return;
   elseif (!HaveFeatSecondary(who, 48) && !who.cmdlevel ) // Feat: Desarmar Armadilha
		SendSysMessageEx(who, "Você precisa ter a habilidade 'Aptitude Mecânica'", SSM_FAIL);
		return;
	elseif ( !Accessible(who,item)  )
		SendSysMessageEx(who, "Você não alcanca o alvo!", SSM_FAIL);
		return;
	elseif ( Distance(who, item) > 2)
		SendSysMessageEx(who, "Você está muito distante.", SSM_FAIL);
		return;
   elseif (GetObjProperty(item,"broken"))
      return;
	endif

   var stam_c := 4;

   if ( !AP_ConsumeVital(who, STAMINA, stam_c) )
		SendSysMessageEx(who, "Você está muito cansado para fazer isso.", SSM_FAIL);
		return;
   endif

	if( GetObjProperty(item, "TrapList") != error )
		if (!GetObjProperty(item, "trapSpoted"))
			SendSysMessageEx(who, "Não tem armadilhas aqui.", SSM_INFO);
			return;
		endif

		var traps := GetObjProperty(item, "TrapList");
		foreach trap in traps
			if (trap.Name == "Magic")
				SendSysMessageEx(who, "Você não sabe desarmar essa armadilha.", SSM_FAIL);
				return 1;
			endif
         sleepms(2);
		endforeach

		PrintText(who, "*desarmando armadilha*");
		if (!Wait(who, 5))
			SendSysMessageEx(who, "Você interrompeu o processo.", SSM_FAIL);
			return;
		endif

		SendSysMessageEx( who, "Você desarmou a armadilha com sucesso.", SSM_INFO);
      PlaySoundEffect(item, cint(0x140));
		RemoveTrap(item, 1);
		item.usescript := "";
		SetName(item, item.name);
		ExpGain(who, "minor");
      who.SetAchievement("trap", 1);
      SendQuestEvent(who, "Desarmar Armadilha", struct{ item_serial := item.serial });
	elseif ( item.isTrap() )
		if (GetObjProperty(item, "trap_inativa"))
			SendSysMessageEx(who, "A armadilha ja esta desativada", SSM_INFO);
			return;
		endif

		PrintText(who, "*desarmando armadilha*");
		if (!Wait(who, 3))
			SendSysMessageEx(who, "Você interrompeu o processo.", SSM_FAIL);
			return;
		endif

      ExpGain(who, "minor");
      SendSysMessageEx( who, "Desativou a armadilha com sucesso.", SSM_INFO);
      PlaySoundEffect(item, cint(0x140));
      SetObjProperty(item, "trap_inativa", 1);
      who.SetAchievement("trap", 1);
      SendQuestEvent(who, "Desarmar Armadilha", struct{ item_serial := item.serial });
	else
		SendSysMessageEx(who, "Não tem armadilhas aqui.", SSM_INFO);
	endif
endprogram
