/* $Id: stealing.src 1053 2007-04-27 22:00:25Z tekproxy $
 *
 *
 * http://uo.stratics.com/content/skills/stealing.shtml
 *
 */

use uo;
use os;

include ":attributes:attributes";
include "include/facings";
include "include/say";
include ":ghaia:ghaia";

program skill_Stealing(mobile)
	if ( GetProcess(CInt(GetObjProperty(mobile, "#PickPid"))) )
		SendSysMessageEx(mobile, "Voce ja esta roubando alguem.", SSM_FAIL);
		return;
	elseif ( CInt(GetObjProperty(mobile, "#StealWait")) > ReadGameClock() )
		SendSysMessageEx(mobile, "Voce deve aguardar um pouco para usar essa pericia novamente.", SSM_INFO);
		return 0;
	elseif (!maolivre(mobile, 1))
		return 0;
	endif

	SetObjProperty(mobile, "#PickPid", GetPid());
	SetObjProperty(mobile, "#StealWait", ReadGameClock()+15);
	
	SendSysMessageEx(mobile, "Selecione que pessoa ou item voce deseja roubar.", SSM_REQUEST);
	var targ := Target(mobile);
	
	var npc_category := lower(getnpccategory( targ.my_template() ));
	if (targ == mobile)
		SendSysMessageEx(mobile, "Espertao voce hein..?", SSM_FAIL);
		return 0;
	elseif ( targ.connected == 0 )
		SendSysMessageEx(mobile, "Voce nao pode roubar jogadores desconectados.", SSM_FAIL);
		return 0;
	elseif (!targ.IsA(POLCLASS_MOBILE) && !targ.IsA(POLCLASS_CONTAINER))
		SendSysMessageEx(mobile, "Voce so pode roubar jogadores.", SSM_FAIL);
		return 0;
	elseif (targ.npctemplate["merchants"])
		SendSysMessageEx(mobile, "Voce nao pode roubar este tipo de NPC.", SSM_FAIL);
		return 0;
	elseif (npc_category in array{"animal", "dinossaur"})
		SendSysMessageEx(mobile, "Voce nao pode roubar este tipo de NPC.", SSM_FAIL);
		return 0;
	elseif ( Distance(mobile, targ) > 2 )
		SendSysMessageEx(mobile, "O alvo esta muito longe.", SSM_FAIL);
		return 0;
	elseif ( !IsBehind(targ, mobile.x, mobile.y) )
		SendSysMessageEx(mobile, "Voce precisa estar atras do alvo que deseja roubar.", SSM_FAIL);
		return 0;
	endif

	VAR advantage := (getglobalproperty("dia") == "noite")*-1;
	var diff := rollAttrDice(targ, WISDOM, advantage) + GetProficiencyBonus(targ, PERCEPCAO);

	// foreach people in ListMobilesNearLocationEx( mobile.x, mobile.y, mobile.z, 5, LISTEX_FLAG_HIDDEN, mobile.realm )
	// 	if (!people.npctemplate && TemHabilidade(people, "Vigilante"))
	// 		diff += 5;
	// 	endif
	// 	if (!people.npctemplate && TemHabilidade(people, "Mestre da Vigília"))
	// 		diff += 5;
	// 	endif
	// endforeach
	var user_skill := AP_GetStat(mobile, DEXTERITY, RETURN_BONUS) + GetProficiencyBonus(mobile, PRESTIDIGITACAO);
	var check := rollAttrDice(mobile, DEXTERITY) + GetProficiencyBonus(mobile, PRESTIDIGITACAO);
	if ( check <= diff )
		SendSystemReport(mobile, "O alvo parece ter percebido algo.", SSM_FAIL);
		SendSystemReport(targ, "Você sentiu algo na sua bolsa.", SSM_INFO, targ);
		if (check - diff >= 3) // Falha Crítica
			CriticalFailure(mobile, targ);
		endif
		return;
	endif

	SendSystemReport(mobile, "*Success*", mobile, SSM_INFO);
	//SendSysMessageEx(mobile, "Voce conseguiu abrir a mochila de "+targ.name+".", SSM_INFO);
	SendOpenSpecialContainer(mobile, targ.backpack);
	SendSysMessageEx(mobile, "Se desejar parar de roubar, pressione Esc no momento da escolha do item.", SSM_INFO);

	while (1)
		SendSysMessageEx(mobile, "Escolha um item para roubar.", SSM_REQUEST);
		var steal := Target(mobile);//, TGTOPT_NOCHECK_LOS);
		if (!steal)
			SendSysMessageEx(mobile, "Voce parou de roubar.", SSM_INFO);
			break;
		elseif ( Distance(mobile, targ) > 2 )
			SendSysMessageEx(mobile, "O alvo se afastou demais.", SSM_FAIL);
			break;
		elseif ( !IsBehind(targ, mobile.x, mobile.y) )
			SendSysMessageEx(mobile, "O alvo nao esta mais de costas para voce.", SSM_FAIL);
			break;
		elseif (steal == targ)
			SendSysMessageEx(mobile, "Alvo invalido.", SSM_FAIL);
			continue;
		elseif ( GetObjProperty(steal, "stealed") )
			SendSysMessageEx(mobile, "Este objeto ja foi roubado!", SSM_FAIL);
			continue;
		endif

		var aux := steal;
		while (aux.container)
			aux := aux.container;
		endwhile

		if (aux != targ)
			SendSysMessageEx(mobile, "Voce so pode roubar da bolsa que abriu.", SSM_FAIL);
			continue;
		elseif (steal.IsA(POLCLASS_CONTAINER) && steal.objtype != 0x1011 && steal.objtype != 0x6100)
			if (steal.locked)
				SendSysMessageEx(mobile, steal.desc+" esta trancado.", SSM_FAIL);
			else
				SendViewContainer(mobile, steal);
				SendSysMessageEx(mobile, "Voce abriu "+steal.desc+".", SSM_INFO);
			endif
			continue;
		endif

		if (steal.objtype IN {0xba63, 0xba64, 0xba65}) // moeda
			diff := 10 + CInt(steal.amount * 0.3);
			// if (temHabilidade(mobile, "Ladrao de Bolsas"))
			// 	diff := cint(diff * 0.5);
			// endif
		elseif (steal.objtype IN {0x1085, 0x1086, 0x1087, 0x1088, 0x1089, 0x108a, 0x2b6e, 0x2b6f, 0x2b70}) // joias
			diff := CInt(steal.weight*2);
			// if (temHabilidade(mobile, "Ladrao de Bolsas"))
			// 	diff := cint(diff * 0.5);
			// endif
		elseif (steal.objtype IN {0x1011, 0x100E, 0x100F, 0x1010, 0x1012, 0x1013}) // chaves
			diff := 23;
		elseif (steal.objtype == 0x6100) // grimório
			diff := 25;
		else
			diff := 10 + CInt(steal.weight/2);
		endif
		
		if (diff > (20 + user_skill))
			SendSysMessageEx(mobile, "Voce nao tentara roubar isso, pois tem certeza que falhara.", SSM_INFO);
			continue;
		endif

		var dice_roll := rollAttrDice(mobile, DEXTERITY, advantage, struct{ "get_critical" := 1, "failure" := 3});
		check := dice_roll.dice + GetProficiencyBonus(mobile, PRESTIDIGITACAO);
		if ( check >= diff )
			var copyitem := CreateItemCopyAtLocation(0, 0, 0, steal, mobile.realm);
			MoveItemToContainer(copyitem, mobile.backpack);
			
			if (steal.isBook())
				var bookinfo := steal.extractInfo();
				copyitem.setAuthor(bookinfo.Author );
				copyitem.setTitle(bookinfo.Title);
				copyitem.SetContents(bookinfo.Contents);
				if (steal.readonly == 1)
					copyitem.ReadOnly(1);
				else
					copyitem.ReadOnly(0);
				endif
			endif
			
			
			steal.usescript := ":pickpocketing:stealed";
			steal.equipscript := ":pickpocketing:stealed";
			SetObjProperty(steal, "stealed", mobile.serial);
			
			SendSysMessageEx(mobile, "Voce roubou "+steal.desc+".", SSM_INFO);
			ExpGain(mobile, diff, check);
		else
			SendSysMessageEx(mobile, "Voce nao conseguiu roubar "+steal.desc+".", SSM_FAIL);
			if ( dice_roll.critical == -1 )
				CriticalFailure(mobile, targ);
			endif
			break;
		endif
	endwhile
	mobile.facing := mobile.facing; // Pra fechar o container! ;D
endprogram

function CriticalFailure(mobile, targ)
	if (mobile.hidden)
		mobile.hidden := 0;
	endif
	SendSysMessageEx(mobile, "Voce chamou muita atencao!", SSM_FAIL);

	var range := 22 - AP_getSkill(mobile, PRESTIDIGITACAO);

	foreach player in ( ListMobilesInLineOfSight(targ, range) )
		if ( player.npctemplate );
		elseif ( player == mobile );
		elseif ( player == targ );
		elseif ( !IsBehind(player, targ.x, targ.y) )
			SendSystemReport(player, "Nota "+mobile.name+" tentando roubar "+targ.name+".", SSM_INFO);
		endif
		SleepMS(2);
	endforeach

	return 1;
endfunction
