

use uo;

include ":timedscripts:timedScripts";
include ":gumps:gumps";
include ":gumps:yesno";
include ":gumps:requestgump";
include ":tn:tngumps";
include ":magery:tnmagery";
include "include/say";
include ":containers:containers";

include ":attributes:attributes";
include ":crafting:fls_crafting";

var recipe_cfg := ReadConfigFile(":alchemy:recipes");
var item_desc := ReadConfigFile(":*:itemdesc");

program book(who, book)
	//Edmond - 15/02/2012
	var serialid := GetObjProperty(book, "serialid");
	if (serialid != error)
		if (serialid != who.serial && who.cmdlevel < 3)
			SendSysMessageEx(who, "Você não entende esse livro.", SSM_FAIL);
			return 1;
		endif
	endif

	var book_gump := CreaterecipebookGump(book, who);
	var result := GFSendGump(who, book_gump);

	var potion := result[0] - 100;
	
	var potions := GetObjProperty(book, "recipes");
	
	if (potions[potion])
			MakePotion( potions[potion],  who);
	endif

endprogram

const SOUND_EFFECT_GRIND   := 0x243;
const UOBJECT_EMPTY_BOTTLE := 0x0f0e;
const SOUND_EFFECT_POUR    := 0x241;

function MakePotion (pot, who)
	var recipes    := ReadConfigFile(":alchemy:config/recipes");
	var difficulty := recipes[pot].difficulty;
	var magic      := cint(recipes[pot].magic);
	var strength   := cint(recipes[pot].strength);
	var is_poison   := cint(recipes[pot].poison);

	//sendsysmessage(who, "magic  " + magic + " skill " + difficulty) ;

	var mortar := 0;
	foreach item in (EnumerateItemsInContainer( who.backpack))
		if (item.graphic == 3739)
			if (ReserveItem(item))
				mortar := 1;
				break;
			endif
		endif
		sleepms(5);
	endforeach

	if (!mortar)
		SendsysMessageEx(who, "Você precisa de um almofariz.", SSM_FAIL);
		return;
	endif

	var reagent_costs := GetConfigStringDictionary( recipes[pot], "Reg" );
//	sendsysmessage(who, " " + reagent_costs);
	var amount;
	foreach reag in (reagent_costs.keys())
		var objtype := cint(reag);
		amount := CInt( reagent_costs[reag] );
		if (!amount)
			amount := 1;
		endif
		var dictToAmount := dictionary; //variavel pra ser usada na funcao abaixo
		dictToAmount["objtype"] := objtype;
		var amountinpack := AmountInContainer(who.backpack, dictToAmount);
		//sendsysmessage(who, "reag " + reag + " objtype " + objtype + " pack " + amountinpack);
		if (amountinpack < amount )
			SendSysMessageEx(who, "Você não possui todos os materiais.", SSM_FAIL);
			return 0;
		endif
		sleepms(2);
	endforeach

	foreach reag in (reagent_costs.keys())
		amount := CInt( reagent_costs[reag] );
		if (!amount)
			amount := 1;
		endif
		ConsumeSubstance(who.backpack, reag, amount);
      if (hex(reag) == hex(0x1F91))
         for i := 1 to amount
            CreateItemInBackpack(who, 0x1f81);
         endfor
      endif
		sleepms(2);
	endforeach


	var loop := 0;

	while(loop < 3)
		PlaySoundEffect(who, SOUND_EFFECT_GRIND);
		PrintText(who, "*preparando um extrato*");
		sleep(1);
		loop := loop + 1;
	endwhile
   
	var proficiency;
	if (is_poison)
		proficiency := GetSkillBonus(who, VENEFICIO);
		if (!proficiency)
			proficiency := GetSkillBonus(who, ALQUIMIA);
		endif
	else
		proficiency := GetSkillBonus(who, ALQUIMIA);
	endif

	var dice_roll := rollAttrDice(who, WISDOM, 0, struct{ "get_critical" := 2}) + proficiency;
   if (dice_roll.critical == -1)
		PlaySoundEffect(who, SOUND_EFFECT_POUR);
      if (ConsumeFlask(who))
		   SendSysMessageEx(who, "Você quebrou o frasco ao tentar fazer o extrato e perdeu os ingredientes..", SSM_FAIL);
      endif
		return;
   endif

	if(dice_roll.dice >= difficulty)
      if (!ConsumeFlask(who))
         return;
      endif
		var thing;
		if (!magic)//se não tiver o flag magic como as tintas, cria o item
			thing := CreateItemInBackpack(who, pot, 1);
		else //se não cria so o extrato
			thing := CreateItemInBackpack(who, 0xcfff, 1);
			SetObjProperty(thing, "extrato", pot);
			SetObjProperty(thing, "critical", dice_roll.critical);
			if (strength)
				SetObjProperty(thing, "strength", strength);
			endif
			// if (GetObjProperty(who, "extratoinstantaneo"))
			// 	SendSysMessageEx(who, "Você fez um extrato instantaneo.", SSM_INFO);
			// 	var pocao := GetObjProperty(thing, "pocao");
			// 	var pot := CreateItemInBackpack(who, pocao, 1);
			// 	SetObjProperty(pot, "strength", cint(GetObjProperty(thing, "strength")));
			// 	DestroyItem(thing);
			// 	EraseObjProperty(who, "extratoinstantaneo");
			// endif
		endif
		SetObjProperty(thing, "crafterskill", AP_GetSkill(who, ALQUIMIA) );
		PlaySoundEffect(who, SOUND_EFFECT_POUR);
		SendSysMessageEx(who, "Você fez a poção e a guardou na sua mochila.", SSM_INFO);
		who.SetAchievement("potion", 1);
		ExpGain(who, difficulty, dice_roll.dice);
		return 1;
	else
		PlaySoundEffect(who, SOUND_EFFECT_POUR);
		SendSysMessageEx(who, "Você não conseguiu fazer nada com isso.", SSM_FAIL);
		return 0;
	endif
endfunction


function CreaterecipebookGump(book, can_read := 0)
	var recipe_list := GetObjProperty(book, "recipes");
	if( TypeOf(recipe_list) != "Array" )
		recipe_list := array{};
		SetObjProperty(book, "recipes", recipe_list);
	endif

	var book_gump := GFCreateGump();
	GFSetId(book_gump, GUMPID_ALCHEMYBOOk);
// Begin Page 0 Setup
	GFGumpPic(book_gump, 70, 5, 11055);
	GFGumpPic(book_gump, 125, 50, 57);
	GFGumpPic(book_gump, 145, 50, 58);
	GFGumpPic(book_gump, 160, 50, 58);
	GFGumpPic(book_gump, 175, 50, 58);
	GFGumpPic(book_gump, 190, 50, 58);
	GFGumpPic(book_gump, 205, 50, 58);
	GFGumpPic(book_gump, 220, 50, 58);
	GFGumpPic(book_gump, 230, 50, 59);
	GFGumpPic(book_gump, 290, 50, 57);
	GFGumpPic(book_gump, 310, 50, 58);
	GFGumpPic(book_gump, 325, 50, 58);
	GFGumpPic(book_gump, 340, 50, 58);
	GFGumpPic(book_gump, 355, 50, 58);
	GFGumpPic(book_gump, 370, 50, 58);
	GFGumpPic(book_gump, 385, 50, 58);
	GFGumpPic(book_gump, 395, 50, 59);

// Begin Page 1 Setup
	GFPage(book_gump, 1);
	//GFAddButton(book_gump, 125, 15, 2472, 2473, GF_CLOSE_BTN, 50);
	GFHTMLArea(book_gump, 139, 28, 130, 18, "<i>Solve Et Coagula</i>");
	GFAddButton(book_gump, 393, 14, 2206, 2206, GF_PAGE_BTN, 2);

	var pOX       := 130;
	var pOY       := 65;
	foreach recipe in recipe_list
		GFAddButton(book_gump, pOX, pOY, 2103, 2104, GF_CLOSE_BTN, 100+_recipe_iter);
		// GFTooltipText(book_gump, "<BASEFONT color=#ADD8E6>Inscrever");
		pOY+=15;
		if (pOY >180)
			pOY := 65;
			pOX := 290;
		endif
	endforeach
// End Page 1 Setup

	pOX      := 145;
	pOY      := 60;

   var i;
	for (i := 1; i <= 16; i += 1)
      var side := 1;
      if (i % 2 == 0)
         side := 2;
      endif

      if (side == 2)
         if(i != 9)
            GFAddButton(book_gump, 393, 14, 2206, 2206, GF_PAGE_BTN, book_gump.cur_page+1);
         endif
      else
         GFPage(book_gump, book_gump.cur_page+1);
         GFAddButton(book_gump, 120, 14, 2205, 2205, GF_PAGE_BTN, book_gump.cur_page-1);
      endif
      
		GenerateSide(book_gump, recipe_list, book_gump.cur_page, side, pOX, pOY, i);

		SleepMS(2);
	endfor

	return book_gump;
endfunction

function ConsumeFlask(who)
   set_critical(1);
   foreach item in EnumerateItemsInContainer(who.backpack)
      if((item.objtype == UOBJECT_EMPTY_BOTTLE) && (item.container.objtype != 0x1940))
         if(SubtractAmount(item, 1))
            return 1;
         endif
      endif
   endforeach
   set_critical(0);

   SendSysMessageEx(who, "Você não tem frascos.", SSM_FAIL);
   return 0;
endfunction


//----------------------------
// Generate every page of the book. And the button for the First page.
// Inside generate empty page too
//-----------------
function GenerateSide(byref book_gump, recipe_list, i, side, byref pOX, byref pOY, recipe_pos)
	var sOX := 158;
	if (side == 2)
		sOX := 302;
	endif
	
	var elem := FindConfigElem(recipe_cfg, recipe_list[recipe_pos]);
	var recipe_entry := struct{
		name := elem.name,
		desc := elem.desc,
		reg := getConfigStringArray(elem, "Reg")
	};
	recipe_entry.desc := "<BASEFONT COLOR=#000066>{}<br><br> <BASEFONT COLOR=#330000> Reagentes <br>".format(cstr(recipe_entry.desc));

	foreach r in (recipe_entry.reg)
		r := SplitWords(r);
		var obj := item_desc[hex(r[1])];
      if (!obj) obj := item_desc[cint(r[1])]; endif

      var item_name := obj.desc;
      if (!item_name) item_name := obj.name; endif
		recipe_entry.desc := "{}{} - {}<br>".format(recipe_entry.desc, r[2], item_name);
	endforeach

	if( TypeOf(recipe_entry) == "Struct" )
		if( recipe_entry.name )
			// This puts the recipe in page 1's list.
			GFPage(book_gump, 1);
			GFTextCrop(book_gump, pOX,  pOY, 115, 17, 995, recipe_entry.name);
			
			GFPage(book_gump, i);
			GFTextCrop(book_gump, sOX,  25, 100, 18, 995, recipe_entry.name);
			// GFTextCrop(book_gump, sOX+20, 35, 100, 18, 995, "Inscrever");
			// GFAddButton(book_gump, sOX, 38, 2103, 2104,  GF_CLOSE_BTN, 100+recipe_pos);

			//Fix description position by side
			if (side == 1)
				GFHTMLArea(book_gump, sOX-20, 60, 120,  140, cstr(recipe_entry.desc), 0, 1);
			else
				GFHTMLArea(book_gump, sOX, 60, 120,  140, cstr(recipe_entry.desc), 0, 1);
			endif

		endif
	else
		GenerateEmptySide(book_gump, side, pOX, pOY, i);
	endif

	pOY := pOY + 15;
	if( pOY > 165 )
		pOY := 60;
		pOX := 305;
	endif
endfunction

function GenerateEmptySide(byref book_gump, side, pOX, pOY, page_num)
	if( side == 1)
		// This puts the recipe in page 1's list.
		GFPage(book_gump, 1);
		GFTextCrop(book_gump, pOX,  pOY, 115, 17, 10, "");
		GFPage(book_gump, page_num);
		GFTextCrop(book_gump, 145, 60, 115, 17, 10, "");
	else
		// This puts the recipe in page 1's list.
		GFPage(book_gump, 1);
		GFTextCrop(book_gump, pOX,  pOY, 115, 17, 10, "");
		GFPage(book_gump, page_num);
		GFTextCrop(book_gump, 305, 60, 115, 17, 10, "");
	endif
endfunction
