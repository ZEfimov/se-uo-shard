/* $Id: fishing.src 917 2005-11-05 23:51:11Z austin $
 *
 */

use uo;
use os;
use math;
use util;
use cfgfile;
use datafile;

include "include/client";
include "include/say";
include "include/utils";
include ":survival:fishingFunctions";
include ":itemutils:canAccess";
include ":attributes:include/attributeConstants";
include ":attributes:include/attributes";
include ":itemUtils:toolWear";
include "include/objtype";
include ":loot:lootParser";
include "include/sysEvent";

program use_FishingPole(who, fishingpole)
	if( !can_access(who, fishingpole) )
		return 0;
	elseif( fishingpole.movable == 0 )
		SendSysMessageEx(who, "Você não pode usar isto.");
		return 0;
	elseif( !ReserveItem(fishingpole) )
		return 0;
	elseif( !IsFishingPoleEquipped(who, fishingpole) )
		SendSysMessageEx(who, "Você tem que equipar a vara de pescar.");
		return 0;
	endif

	//Molinete?
	var molinete := 0;
	if (fishingpole.desc["Molinete"])
	   molinete := 1;
	endif

   var isca := fishingpole.GetBait();
   if (!isca || !ConsumeSubstance(who.backpack, isca, 1))
      isca := SelectBait(who, fishingpole);
      if (!isca)
         return;
      endif
   endif

	//Escolha da isca
	var pretfish := GetFishByBait(who, isca);

	SendSysMessageEx(who, "Escolha o local aonde quer pescar?", SSM_REQUEST);
	var targetsquare := TargetCoordinates(who);
	if( !targetsquare )
      CreateItemInBackpack(who, hex(isca), 1);
		return 0;
	endif

	var locinfo:= GetMapInfo( targetsquare.x, targetsquare.y, who.realm );
	if(IsValidFishingSpot(who, targetsquare, locinfo))
		PrintText(who, "*arremessando a isca*");
		var px := who.x;
      var py := who.y;
		PerformAction(who, 0x9);
		PlaySoundEffect(who, 0x240);

      for i := 1 to 4
		   var newsplash := CreateItemAtLocation(targetsquare.x, targetsquare.y, targetsquare.z,  0x352d, 1, who.realm);
		   newsplash.movable := 0;

         sleepms(400);
         set_critical(1);
         DestroyItem(newsplash);
         set_critical(0);
      endfor
		sleep(2);

		if( (px != who.x) or (py != who.y) )
			SendSysMessageEx(who,"Você parou de pescar.");
			return 0;
		endif

		//Verificando se existe o peixe no local determinado
	  	var thepeixe := GetFishRegion(who, targetsquare.x, targetsquare.y, pretfish);
		if (!thepeixe)
			CreateItemInBackpack(who, hex(isca), 1);
			SendSysMessageEx(who,"Nenhum peixe nessa região parece gostar da sua isca",60);
			return 0;
		endif

      var difficulty;
      if( targetsquare.objtype )
         difficulty := GetHarvestDifficulty("fish", targetsquare.x, targetsquare.y, targetsquare.objtype, who.realm);
      else
         difficulty := GetHarvestDifficulty("fish", targetsquare.x, targetsquare.y, locinfo.landtile, who.realm);
      endif

      if( difficulty == error )
         SendSysMessageEx(who, "Eles não parecem estar mordendo a isca hoje.");
         CreateItemInBackpack(who, hex(isca), 1);
         return 0;
      endif
      
      var itemdesc := ReadConfigFile(":*:itemdesc");
      var peixename := itemdesc[thepeixe].desc;

      var dice_roll := rollAttrDice(who, DEXTERITY) + GetSkillBonus(who, PESCARIA);
      if( dice_roll > difficulty+2)

         //Acontecimentos diferentes na pescaria
         var otherchance := OtherChances(who, targetsquare, fishingpole);
         if (otherchance != 0)
            CreateItemAtLocation(who.x, who.y, who.z, otherchance, 1, who.realm);
            return 1;
         endif

         SendSysMessageEx(who,"Alguma coisa fisgou a isca!!" ,SSM_INFO);
         PrintText(who, "*vara tremendo*");
               
         var fishcatch := FishFight(who, fishingpole, thepeixe, targetsquare, molinete);
         if (fishcatch != 0)
            who.SetAchievement("fishing", 1);
            if (randomint(10) == 1)
               var peixemorto := CreateItemAtLocation(who.x, who.y, who.z, 0x3B0C, 1, who.realm);
               var newname := peixename + " morto";
               Setname(peixemorto, newname );
               SendSysMessageEx(who,"Você pescou um(a) belo(a) " + peixename + " comido por outro peixe." , SSM_INFO);
               return 1;
            endif

            var peixecriado := CreateItemAtLocation(who.x, who.y, who.z, thepeixe, 1, who.realm); // TODO
            var newname := "{} [ Peso: {} ]".format(peixecriado.desc, fishcatch);
            Setname(peixecriado, newname );
            SendSysMessageEx(who,"Você pescou um(a) belo(a) " + peixecriado.desc + " ." ,SSM_INFO);
            return 1;
         endif
         if (fishcatch == 0)
            PrintText(who, "*linha estoura*",SSM_FAIL);
            SendSysMessageEx(who,"A linha não aguentou toda a tensao e o peixe escapou." ,SSM_FAIL);
            return 1;
         endif		
         

      else
         if( RandomInt(100) == 0 )
            CriticalFailure(who, targetsquare);
         else
            SendSysMessageEx(who, "Eles não parecem estar mordendo a isca hoje.");
            CreateItemInBackpack(who, hex(isca), 1);
         endif
      endif
	endif

	return 1;

endprogram


function OtherChances(who, targetsquare, fishingpole)
	var fishtype;
	var currentskill := AP_GetSkill(who, PESCARIA);
	var thisone := RandomInt(100)+ 1;
	if(thisone <= 94)
		return 0;
	elseif(thisone <= 97)
		if(currentskill >= 10)
			var bootarray := array(0x170b, 0x1711, 0x170f, 0x170d);
			fishtype := bootarray[RandomInt(4)+ 1];
			SendSysMessageEx(who, "Você achou um calçado velho!");
		else
			return 0;
		endif
	elseif(thisone <= 99)
		if(RandomInt(currentskill) >= 16)
			fishtype := "level" +(RandomInt(2)+ 1)+ "map";
			SendSysMessageEx(who, "Você achou um mapa do tesouro!");
		else
			return 0;
		endif
	else
		if(currentskill >= 19)
			fishtype := "sosbottle";
			SendSysMessageEx(who, "Você achou uma garrafa!");
		else
			return 0;
		endif
	endif

	// if(fishtype == "sosbottle")
	// 	var serpent := CreateNpcFromTemplate( "seaserpent", targetsquare.x, targetsquare.y, targetsquare.z );
	// 	if(farout(who))
	// 		if( !serpent.backpack )
	// 			EquipFromTemplate( serpent, "backpack" );
	// 		endif
	// 		CreateItemInContainer(serpent.backpack, fishtype, 1);
	// 	endif
	if( Find("level", fishtype, 0) )
		var serpent := CreateNpcFromTemplate( "seaserpent", targetsquare.x, targetsquare.y, targetsquare.z );
		if(farout(who))
			if( !serpent.backpack )
				EquipFromTemplate( serpent, "backpack" );
			endif
			CreateItemInContainer(serpent.backpack, fishtype, 1);
		endif
	else
		if( CreateItemInContainer(who.backpack, fishtype, 1) )
			CheckToolWear(who, fishingpole, PESCARIA);
		endif
    endif


	return fishtype;

endfunction


function CriticalFailure(who, targetsquare)
	var it := CreateNpcFromTemplate("seaserpent", targetsquare.x, targetsquare.y, targetsquare.z, 0, who.realm);
	if(it)
		SendSysMessageEx(who, "Oops, isto não parece um peixe!");
		var ev := {};
		ev.+type := SYSEVENT_ENGAGED;
		ev.+source := who;
		SendEvent(it, ev);
	endif
endfunction


function IsFishingPoleEquipped(who, fishingpole)
	if((!Accessible(who, fishingpole)) || (Distance(who, fishingpole)> 1))
		return 0;
	endif

	if( fishingpole in ListEquippedItems(who) )
		return 1;
	else
		return EquipItem(who, fishingpole);
	endif
endfunction

function GetFishRegion(who, x, y, pretfish)
	var peixesdf := opendatafile(":gathering:fishspots");
	if (peixesdf == error)
		peixesdf :=  createdatafile(":gathering:fishspots");
	endif
	
   var fishlist := array{};
	foreach spot in (peixesdf.keys())
		var region := peixesdf.FindElement(spot);
		var rect := region.getprop("Rect");
		if ( InRect(x, y, rect) )
			var peixes := region.getprop("Peixes");
			foreach peixe in peixes
				if (cint(peixe) in pretfish)
               fishlist.append(cint(peixe));
				endif
            sleepms(2);
			endforeach
		endif		
	endforeach
	
	return fishlist.randomentry();
endfunction

function FishFight(who, fishingpole, pretfish, targetsquare, molinete);
	var peso;
	var tensao := 55 - randomint(25);
	var tensaomax := (80 + (molinete * 10));
	var acao;
	var distancia := cint( sqrt( pow(targetsquare.x - who.x,2) + pow(targetsquare.y - who.y,2) ) ) ;
	distancia := (distancia + 5);

	if (pretfish == 0x0DD6) peso := (2 + RandomInt(3)) ;
 	elseif (pretfish == 0x4306) peso := (20 + RandomInt(15)) ; 
 	elseif (pretfish == 0x9cf) peso := (5 + RandomInt(10)) ;
 	elseif (pretfish == 0x9ce) peso := (4 + RandomInt(10)) ; 
	elseif (pretfish == 0x9cd) peso := (6 + RandomInt(10)) ; 
 	elseif (pretfish == 0x4304) peso := (15 + RandomInt(5)) ; 
 	elseif (pretfish == 0x9cc) peso := (6 + RandomInt(10)) ;  
 	elseif (pretfish == 0x4303) peso := (8 + RandomInt(10)) ;  
 	elseif (pretfish == 0x44C6) peso := (10 + RandomInt(10)) ;  
 	elseif (pretfish == 0x44D1) peso := (2 + RandomInt(10)) ;  
 	elseif (pretfish == 0x44D4) peso := (2 + RandomInt(10)) ;  
 	elseif (pretfish == 0x44E5) peso := (12 + RandomInt(10)) ;  
 	elseif (pretfish == 0x44C3) peso := (7 + RandomInt(10)) ;  
	endif
	
	while ((distancia > 0) && (tensao < tensaomax))
		acao := GumpPescaria(who, fishingpole, pretfish, targetsquare, tensao, distancia, tensaomax);
		if (acao == 1) 
			PrintText(who, "*puxando a linha*");
			PlaySoundEffect(who, cInt(0x5A5));
			PerformAction( who, ANIM_ATTACK_2HAND_WIDE );
			tensao := Cint(tensao + (peso * (RandomInt(2) + 1)) - (AP_GetStat(who, STRENGTH, RETURN_BONUS) + AP_GetStat(who, DEXTERITY, RETURN_BONUS) + GetSkillBonus(who, PESCARIA)));
			tensao := Cint(tensao - (tensao * molinete * 0.2));
			if (tensao <= 0) tensao := 0; endif
			if (cint(distancia) == 15) 
				SendSysMessageEx(who, "A linha já esta solta o máximo possivel.", SSM_INFO);
			else
				distancia := distancia - 2;
			endif
		endif
		if (acao == 2) 
			PrintText(who, "*soltando a linha*");
			PerformAction( who, ANIM_ATTACK_2HAND_JAB );
			tensao := Cint(tensao - (1 + AP_GetStat(who, DEXTERITY, RETURN_BONUS) + GetSkillBonus(who, PESCARIA)));
			distancia := distancia + 1;
			if (tensao <= 0) tensao := 0; endif
		endif
	endwhile
	
	if (distancia <= 0) return peso; endif
	if (tensao >= tensaomax) return 0; endif
endfunction


function GumpPescaria(who, fishingpole, pretfish, targetsquare, tensao, distancia, tensaomax);
	var fishgump := GFCreateGump();
	var input;

	GFClosable(fishgump, 0);
	GFDisposable(fishgump, 0);
	GFResizePic(fishgump, 0, 25, 3600, 300, 155);
	GFResizePic(fishgump, 15, 40, 0x13BE, 270, 125);

	GFTextLine(fishgump, 30, 55, 1153,  "Puxar a Linha: ");
	GFTextLine(fishgump, 30, 80, 1153, "Soltar a linha: ");
	GFTextLine(fishgump, 30, 105, 1153, "Tensao na Linha: " + tensao + " (Max: " + tensaomax + ")");
	GFTextLine(fishgump, 30, 130, 1153, "Distancia Restante: " + distancia + " (Em Tile)");


	GFAddButton(fishgump, 125, 56, 9760, 9761, 1, 10); //puxar
	GFAddButton(fishgump, 125, 82, 9764, 9765, 1, 21); //soltar


	input := GFSendGump(who, fishgump);
	input := input[0];

	if (input == 10) return 1; endif
	if (input == 21) return 2; endif
endfunction
	
