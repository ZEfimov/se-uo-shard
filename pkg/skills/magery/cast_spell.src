use uo;
use os;
use cfgfile;
use unicode;
include ":attributes:attributes";
include ":containers:containers";
include ":itemutils:itemdesc";
include ":magery:tnmagery";
include ":magery:basicMagery";
include "include/say";
include "include/client";

include "include/facings";
include ":tn:cooldown";
include ":attributes:attributes";

program SpellStarter(params)
	var mobile    := params[1]; // Caster
	var spellinfo := params[2]; // spellinfo
	var item      := params[3]; // item que usou pra castar o spell (item, book, varinha ou nada)
	var targ      := params[4];
	var cfg       := params[5];

	if (spellinfo.id == error) //le o cfg pra escrever a info
		writeSpellInfo(spellinfo, cfg);
	endif

   if (!spellinfo.powered)
      spellinfo.powered := 1;
      if (mobile.cmdlevel && cint(GetObjProperty(mobile.weapon, "powered")))
         spellinfo.powered := cint(GetObjProperty(mobile.weapon, "powered"));
      endif
   endif

	if ( GetObjProperty(mobile, "metamorfose") != error )
		SendSysMessageEx(mobile, "Esta metamorfoseado e incapaz de castar magias.");
		return 1;
	elseif (getCooldown(mobile, spellinfo.name) > 0)
		PrintTextPrivate(mobile, "'Magia em Cooldown!'", mobile, SSM_FAIL);
		return 1;
	elseif ( !Attach(mobile) )
		SendSysMessageEx(mobile, "Você já esta fazendo alguma coisa.", SSM_FAIL);
		return 0;
	endif

	// Already casting?
	if ( GetObjProperty(mobile, "#Casting") )
		SendSysMessageEx(mobile, "Você não pode invocar um encanto agora.", SSM_FAIL);
		return 0;
	elseif ( mobile.frozen )
      SendSysMessageEx(mobile, "Você não pode invocar um encanto paralisado.", SSM_FAIL);
      EraseObjProperty(mobile, "#Casting");
      return 0;
   endif

   SetObjProperty(mobile, "#Casting", 1);
   spellinfo.mana := spellinfo.mana + Cint(spellinfo.mana*GetObjProperty(mobile, "#manapenalty")/100);

   // consume mana and reagents
   if (!mobile.npctemplate)
      if ( mobile.squelched && spellinfo.powerwords )
         SendSysMessageEx(mobile, "Você precisa falar devido os componentes verbais da magia.", SSM_FAIL);
         FailSpell(mobile);
         return 0;
      elseif ( !EquipmentCheck(mobile) && mobile.cmdlevel < 3 )
         SendSysMessageEx(mobile, "Você não pode invocar magias com um equipamento em que você não tem perícia.", SSM_FAIL);
         FailSpell(mobile);
         return 0;
      elseif ( !TS_ConsumeMana(mobile, spellinfo.mana) )
         SendSysMessageEx(mobile, "Você não possui energia arcana suficiente em seu corpo para invocar esta magia!", SSM_FAIL);
         FailSpell(mobile);
         return 0;
      elseif ( !TNCheckReagents(mobile, spellinfo, item) && mobile.cmdlevel < 3)
         HealMana(mobile, cint(spellinfo.mana));
         EraseObjProperty(mobile, "#Casting");
      //    FailSpell(mobile);
         return 0;
      endif
   endif
   
   mobile.hidden := 0;
   
   // start casting
   // if (spellinfo.powerwords && !GetObjProperty(mobile, "#magiasilenciosa") ) //checa powerwords
   //    PrintText(mobile, spellinfo.powerwords);
   // endif

   var moveCheck := Start_Script(":magery:moveCheck", array{mobile, Getpid()});
   var orig_hp := AP_GetVital(mobile, "Hits");

   var cycles := spellinfo.cycles;
   if (HaveFeat(mobile, "Conjuração Rápida") && !GetCooldown(mobile, "#fastcast"))
      SendSystemReport(mobile, "*Conjuração Rápida*", SSM_INFO);
      cycles := Floor(cycles / 3);
      SetCooldown(mobile, "#fastcast", 60);
   elseif (GetObjProperty(mobile, "zerocast"))
      cycles := 0;
   endif
   
   while(cycles)
      // If mobile is injured and does not have the protection spell on, fail the spell
      if ( orig_hp > AP_GetVital(mobile, "Hits") && randomdiceroll("1d100") < 75)
         SendSysMessageEx(mobile, "Você está tendo problemas para se concentrar na magia.", SSM_FAIL);
         cycles += 1;
      endif
      orig_hp := AP_GetVital(mobile, "Hits");

      // Check if we recieved an event from moveCheck_script, which means the mobile moved while targetting
      if ( Events_Waiting() || TS_GetTimerInfo(mobile, "tombar") )
         SendSysMessageEx(mobile, "Você não conseguiu se concentrar o suficiente para invocar esta magia.", SSM_FAIL);
         FailSpell(mobile);
         HealMana(mobile, cint(spellinfo.mana*0.5));
         return 0;
      endif

      // Perform casting animation depending on spell target
      if (GetObjProperty(mobile, "#magiasilenciosa") == error)
         case ( spellinfo.range )
            "Distancia":
               PerformAction(mobile, ANIM_CAST_DIR);
               break;
            "Area":
               PerformAction(mobile, ANIM_CAST_AREA);
               break;
            default:
               PerformAction(mobile, ANIM_CAST_DIR);
         endcase
      endif

      cycles -= 1;
      sleepms(750);
   endwhile

   moveCheck.kill();

   // Targeting
   // if (item.isA(POLCLASS_ITEM) && item.objtype != 0x790c && item.objtype != 0x2253)
   //    SubtractAmount(item, 1);
   // endif
   if (!targ)
      targ := ChooseTarget(mobile, spellinfo);
      if (!targ)
         SendsysMessageEx(mobile, "Você cancelou a magia.", SSM_FAIL);
         FailSpell(mobile, 1);
         return ;
      endif
   endif	

   if (spellinfo.alvo != "Area" && !CheckLineOfSight(mobile, targ)) //checa se não ¿ magia em ¿rea
      SendsysMessageEx(mobile, "Você não vê o alvo.", SSM_FAIL);
      FailSpell(mobile, 1);
      return 1;
   else //senão
      if (!CheckLOSAt(mobile, targ.x, targ.y, targ.z+5)) //verifica se o ponto ¿ v¿sivel
         SendsysMessageEx(mobile, "O ponto que você selecionou esta fora da sua linha de visão.", SSM_FAIL);
         FailSpell(mobile, 1);
         return 1;
      endif
   endif


   if (TS_GetCooldown(mobile, "hallucination"))
      if (targ.isA(POLCLASS_NPC))
         var mobile_around := ListMobilesInLineOfSight( mobile, 10);
         targ := mobile_around.randomentry();
      endif
   endif

   if (targ.isA(POLCLASS_NPC))
      targ.setAggro(mobile.serial, 12);
   endif

   var attribute := INTELLIGENCE;
   var pericia := spellinfo.pericia;
   if (spellinfo.pericia["Milagre"])
      attribute := WISDOM;
   else
      pericia := "Magia_de_{}".format(spellinfo.type);
   endif

   var bonus_spell := 0;
   if (GetGlobalProperty("dia") == "noite" && HaveFeat(mobile, "Tradição Arcana {}".format(spellinfo.type)))
      bonus_spell := 1;
   endif

   spellinfo.dice_roll := rollAttrDice(mobile, attribute, bonus_spell) + GetSkillBonus(mobile, pericia);
   if (spellinfo.type)
      mobile.SetAchievement("spell_{}".format(lower(spellinfo.type)), 1);
      mobile.SetAchievement("spellcast", 1);
   elseif (spellinfo.pericia)
      var bless_type := SplitWords(spellinfo.pericia, "_")[3];
      mobile.SetAchievement("bless_{}".format(lower(bless_type)), 1);
      mobile.SetAchievement("blesscast", 1);
   endif

   if (spellinfo.script != error)
      var e := Start_Script(spellinfo.script, array{mobile, spellinfo, targ});
      if (e == error)
         SysLog("Can't reach spell {} : {}".format(spellinfo.name, e));
         FailSpell(mobile);
      else
         SetClericSpellUsed(mobile, spellinfo);
         ExpGain(mobile, "minor");
      endif
   endif
   if (spellinfo.cooldown)
      SetCooldown(mobile, spellinfo.name, spellinfo.cooldown);
   endif

   EraseObjProperty(mobile, "#magiasilenciosa");
   EraseObjProperty(mobile, "#Casting");
endprogram

function ChooseTarget(mobile, spellinfo)
   var targ;
   var move_script := start_script(":magery:canceltarget_if_move", mobile);
   if (spellinfo.powered_move && spellinfo.powered >= 5)
      move_script.kill();
      SendSysMessageEx(mobile, "Você pode se mover para escolher o alvo como resultado de uma magia fortificada.", SSM_INFO);
   endif
   
   if (spellinfo.alvo == "Self")
      targ := mobile;
   elseif (spellinfo.alvo == "Unico")
      while (1)
         SendSysMessageEx(mobile, "Escolha o alvo da magia.", SSM_REQUEST);
         var noto := TGTOPT_NEUTRAL;
         if (spellinfo.align == "Harmful")
            noto := TGTOPT_HARMFUL;
         elseif (spellinfo.align == "Helpful")
            noto := TGTOPT_HELPFUL;
         endif

         targ := Target(mobile, noto);
         if (GetCooldown(targ, "repeal") > 0)
            SendSysMessageEx(mobile, "O alvo esta invulneravel a magias.", SSM_FAIL);
         elseif (spellinfo.targettype)
            if (!targ)
               break;
            elseif (spellinfo.targettype == "Mobile" && !targ.isA(POLCLASS_MOBILE))
               SendSysMessageEx(mobile, "Você deve escolher uma criatura como alvo.", SSM_FAIL);
            elseif (spellinfo.targettype == "Item" && !targ.isA(POLCLASS_ITEM) && !targ.isA(POLCLASS_CONTAINER))
               SendSysMessageEx(mobile, "Você deve escolher um objeto como alvo", SSM_FAIL);
            else
               break;
            endif
         else
            break;
         endif
      endwhile
      if (mobile != targ)
         TurnObjectToward(mobile, targ.x, targ.y);
      endif
   elseif (spellinfo.alvo == "Area")
      while (1)
         PrintTextPrivate(mobile, "'Escolha o ponto alvo.'", mobile, SSM_INFO);
//   		SendSysMessageEx(mobile, "Escolha o ponto onde a magia sera castada.", SSM_REQUEST);
         targ := TargetCoordinates(mobile);
         TurnObjectToward(mobile, targ.x, targ.y);
         if(!spellinfo.radius)
            break;
         elseif (CoordinateDistance(mobile.x, mobile.y, targ.x, targ.y) < spellinfo.radius)
            break;
         else
            SendSysMessageEx(mobile, "Muito distante!", SSM_FAIL);
         endif
      endwhile
   endif

   move_script.kill();
   return targ;
endfunction
