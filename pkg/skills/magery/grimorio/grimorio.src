use uo;

include ":gumps:gumps";
include ":gumps:yesno";
include ":gumps:requestgump";
include ":tn:tngumps";
include ":magery:tnmagery";
include "include/say";
include ":attributes:attributes";
include ":containers:containers";
include ":itemutils:itemdesc";
include "include/client";
include ":charactercreation:habilidades";
include "include/facings";
include ":tn:cooldown";

program book(who, book)
	var can_read  := HaveSkill(who, "Linguagem Elfica");
	var book_gump := CreateBookGump(book, can_read);
	var result    := GFSendGump(who, book_gump);

	if (result[0] > 900)
		var spell := result[0] - 900;

		var spells := GetObjProperty(book, "spells");
		//sendsysmessage(who, " " + bookopt);

		if (spells[spell])
			CopyRecipe(who, spells[spell]);
		endif
	elseif (result[0] > 100)
		var spell    := result[0] - 100;
		var spells   := GetObjProperty(book, "spells");
		var serialid := GetObjProperty(book, "serialid");
		if (serialid != error && serialid != who.serial)
			SendSysMessageEx(who, "Você não entende as anotacoes do livro.", SSM_FAIL);
			return 1;
		elseif (!spells[spell])
			SendSysMessageEx(who, "Algum erro ocorreu com sua magia, avise um GM.", SSM_FAIL);
			return 1;
		endif
		WriteMagic(who, spells[spell]);
	endif

endprogram

Const OBJ_BLANK_SCROLL := 0xE34;
Const OBJ_RECIPE_SLIP := 0x6116;

function CopyRecipe(who, recipe)
	WriteSpellInfo(recipe);
	//sendsysmessage(who, " " + spellinfo + " " + recipe + "  " + cint(recipe));
	if (!ConsumeSubstance(who.backpack, OBJ_BLANK_SCROLL, 1))
		SendSysMessageEx(who, "Você precisa de um pergaminho em branco.", SSM_FAIL);
		return 0;
	endif

	if (rollAttrDice(who, WISDOM) >= recipe.difficulty+5)
		var item := createItemInBackpack(who, OBJ_RECIPE_SLIP, 1);
		if (item == error)
			sendsysmessage(who, "  " + item);
		endif
		SetObjProperty(item, "spellinfo", recipe.spellid);
		SendSysMessageEx(who, "Você fez uma cópia do pergaminho.", SSM_INFO);
		printtext(who, "*escrevendo pergaminho*");
		return;
	endif 
	
	SendSysMessageEx(who, "Você copiou o pergaminho sem cuidados e ele ficou ilegivel.", SSM_FAIL);
endfunction


function CreateBookGump(book, can_read := 0)
	var spell_list := GetObjProperty(book, "spells");
	if( TypeOf(spell_list) != "Array" )
		spell_list := array{};
		SetObjProperty(book, "spells", spell_list);
	endif

	var book_gump := GFCreateGump();
	GFSetId(book_gump, GUMPID_GRIMORIO);
// Begin Page 0 Setup
	GFGumpPic(book_gump, 100, 10, 2200);
	GFGumpPic(book_gump, 125, 50, 57);
	GFGumpPic(book_gump, 145, 50, 58);
	GFGumpPic(book_gump, 160, 50, 58);
	GFGumpPic(book_gump, 175, 50, 58);
	GFGumpPic(book_gump, 190, 50, 58);
	GFGumpPic(book_gump, 205, 50, 58);
	GFGumpPic(book_gump, 220, 50, 58);
	GFGumpPic(book_gump, 230, 50, 59);
	GFGumpPic(book_gump, 290, 50, 57);
	GFGumpPic(book_gump, 310, 50, 58);
	GFGumpPic(book_gump, 325, 50, 58);
	GFGumpPic(book_gump, 340, 50, 58);
	GFGumpPic(book_gump, 355, 50, 58);
	GFGumpPic(book_gump, 370, 50, 58);
	GFGumpPic(book_gump, 385, 50, 58);
	GFGumpPic(book_gump, 395, 50, 59);

// Begin Page 1 Setup
	GFPage(book_gump, 1);
	//GFAddButton(book_gump, 125, 15, 2472, 2473, GF_CLOSE_BTN, 50);
	GFHTMLArea(book_gump, 138, 26, 130, 18, "<i>Livro de Magia</i>");
	GFAddButton(book_gump, 393, 14, 2206, 2206, GF_PAGE_BTN, 2);

	var pOX       := 130;
	var pOY       := 65;
	foreach spell in spell_list
		GFAddButton(book_gump, pOX, pOY, 2103, 2104, GF_CLOSE_BTN, 100+_spell_iter);
		pOY+=15;
		if (pOY >180)
			pOY := 65;
			pOX := 290;
		endif
	endforeach
// End Page 1 Setup

	pOX      := 145;
	pOY      := 60;

   var i;
	for (i := 1; i <= 9; i += 1)
      var side := 1;
      if (i % 2 == 0)
         side := 2;
      endif

      if (side == 2)
         if(i != 9)
            GFAddButton(book_gump, 393, 14, 2206, 2206, GF_PAGE_BTN, book_gump.cur_page+1);
         endif
      else
         GFPage(book_gump, book_gump.cur_page+1);
         GFAddButton(book_gump, 125, 14, 2205, 2205, GF_PAGE_BTN, book_gump.cur_page-1);
      endif
      
		GenerateFilledSide(book_gump, spell_list, book_gump.cur_page, side, pOX, pOY, i);

		SleepMS(2);
	endfor

	return book_gump;
endfunction

//----------------------------
// Generate every page of the book. And the button for the First page.
// Inside generate empty page too
//-----------------
function GenerateFilledSide(byref book_gump, spell_list, i, side, byref pOX, byref pOY, spell_pos)
	var sOX := 160;
	if (side == 2)
		sOX := 300;
	endif
   // print(spell_pos);
	var spell_entry := spell_list[spell_pos];
	WriteSpellInfo(spell_entry);

	spell_entry.description := "<BASEFONT COLOR=#000066>{}<br>{}<br><br> <BASEFONT COLOR=#330000> Componentes <br>".format(cstr(spell_entry.description), cstr(spell_entry.flavortext));

	var regkeys := spell_entry.reagents.keys();
	foreach r in (regkeys)
		spell_entry.description := "{}{} {}<br>".format(spell_entry.description, cstr( r ), cstr(spell_entry.reagents[cstr(r)]));
	endforeach
	spell_entry.description := "{}Mana: {}".format(spell_entry.description, spell_entry.mana);
	if( TypeOf(spell_entry) == "Struct" )
		if( spell_entry.name )
			// This puts the rune in page 1's list.
			GFPage(book_gump, 1);
			GFTextCrop(book_gump, pOX,  pOY, 115, 17, 995, spell_entry.name);
			GFPage(book_gump, i);

			GFTextCrop(book_gump, sOX,  15, 100, 18, 995, spell_entry.name);
			GFTextCrop(book_gump, sOX+20, 35, 100, 18, 995, "Copiar");
			GFAddButton(book_gump, sOX, 38, 2103, 2104,  GF_CLOSE_BTN, 900+spell_pos);

			//Fix description position by side
			if (side == 1)
				GFHTMLArea(book_gump, sOX-20, 60, 120,  140, cstr(spell_entry.description), 0, 1);
			else
				GFHTMLArea(book_gump, sOX, 60, 120,  140, cstr(spell_entry.description), 0, 1);
			endif

		endif
	else
		GenerateEmptySide(book_gump, side, pOX, pOY, i);
	endif

	pOY := pOY + 15;
	if( pOY > 165 )
		pOY := 60;
		pOX := 305;
	endif
endfunction

function GenerateEmptySide(byref book_gump, side, pOX, pOY, page_num)
	if( side == 1)
		// This puts the rune in page 1's list.
		GFPage(book_gump, 1);
		GFTextCrop(book_gump, pOX,  pOY, 115, 17, 10, "");
		GFPage(book_gump, page_num);
		GFTextCrop(book_gump, 145, 60, 115, 17, 10, "");
	else
		// This puts the rune in page 1's list.
		GFPage(book_gump, 1);
		GFTextCrop(book_gump, pOX,  pOY, 115, 17, 10, "");
		GFPage(book_gump, page_num);
		GFTextCrop(book_gump, 305, 60, 115, 17, 10, "");
	endif
endfunction
