use uo;
use os;
use util;

include ":attributes:attributes";
include ":gumps:gumps_ex";
include "include/say";
include ":taming:taming";
include ":mounts:mounts";
include ":charactercreation:characters";
include ":yggdrasil:boss";
include ":yggdrasil:spawnSpot";
include ":ghaia:ghaiaUtil";

const START_Y      := 91;
const END_Y        := 311;
const BACKGROUND   := 0xBB8;
const FOREGROUND   := 0xDAC;
const INIT_DET_PAGE:= 10;

var index_list;
var info_cfg;
var entries_list:= dictionary;
var btn_maxId   := 2;
var new_list    := array;
var det_page    := INIT_DET_PAGE; //numero da pagina de detalhes

set_script_option(SCRIPTOPT_CAN_ACCESS_OFFLINE_MOBILES, 1);

program TamingSkill(who)
	if ( GetObjProperty(who, "#medding") )
		SendSysMessageEx(who, "Você não pode adestrar nada agora.", SSM_FAIL);
		return;
	elseif ( CInt(GetObjProperty(who, "#tamewait")) > ReadGameClock() )
		SendSysMessage(who, "Você precisa esperar para usar esta pericia novamente.", SSM_FAIL);
		return;
	endif

	var yn_gump := GFCreateGump(140, 120);

	GFClosable(yn_gump, 1);
	GFResizePic(yn_gump, 0, 0, GFCfgConst("Defaults", "BackGround"), 300, 280); //205);
	GFResizePic(yn_gump, 15, 15, GFCfgConst("Defaults", "ForeGround"), 270, 250); //175);
	
	var y_pos := 20;
	GFTextLine(yn_gump, 20, 20, 1153, "Menu de Trato de Animais.");

	GFAddButton(yn_gump, 20, (63), 2117, 2118, GF_CLOSE_BTN, 1);
	GFTextLine(yn_gump, 40, 60, 1153, "Adestrar Animal.");

	GFAddButton(yn_gump, 20, (83), 2117, 2118, GF_CLOSE_BTN, 2);
	GFTextLine(yn_gump, 40, 80, 1153, "Informações sobre o animal.");

	GFTextLine(yn_gump, 40, 100, 1153, "Libertar Animal:");

	var y := 120;
	var i := 1;
	var pets := GetObjProperty(who, "followers");
	foreach serial in pets
		var pet := SystemFindObjectBySerial(serial);
		GFTextLine(yn_gump, 40, y, 1153, "" + pet.name);
		GFAddButton(yn_gump, 20, y+3, 2117, 2118, GF_CLOSE_BTN, (100+i));
		i := i + 1;
		y := y + 20;
	endforeach

	var input := GFSendGump(who, yn_gump);
	input := input[0];

	if (input == 1)
		taming(who);
	elseif (input == 2)
		Start_Script(":animallore:animalLore", who);
	elseif (input > 100)
		SendSysMessageEx(who, "Você libertou seu animal.", SSM_INFO);
		ErasePet(who, pets[input-100]);
		destama(pets[input-100]);
	endif

	EraseObjProperty(who, "#medding");
endprogram

function taming(who)
	SendSysMessageEx(who, "Que animal você deseja adestrar?", SSM_REQUEST);
	if ( who.hidden )
		who.hidden := 0;
	endif
	var targ := target(who);
	var bonus := 0;

	if ( !targ.IsA(POLCLASS_NPC) )
		SendSysMessageEx(who, "Cancelado", SSM_FAIL);
		return;
//	elseif (Distance(who,targ) > 4)
//		SendSysMessage(who, "Alvo esta muito distante.");
//		return;
	elseif ( targ.script[":ghaia:follower"] )
		SendSysMessageEx(who, targ.name+" não pode ser adestrado.", SSM_FAIL);
		return 0;
	elseif ( (GetNumPets(who) + GetPetCost(targ)) > GetMaxPets(who) )
		SendSysMessageEx(who, "Você atingiu o limite de seguidores.", SSM_FAIL);
		return 0;
	/*elseif (who.serial IN GetObjProperty(targ, "#critical"))
		SendSysMessage(who, targ.name+" não aceita mais ser domado por você.");
		return 0;*/
	elseif (!GetObjProperty(targ, "#peacemade") && targ.alignment == 1)
		SendSysMessageEx(who, "A criatura esta muito hostil para ser domesticada.", SSM_FAIL);
		return 0;
	elseif (!targ.isTamable())
		SendSysMEssageEx(who, "Essa criatura não aceita ser domesticada.", SSM_FAIL);
		return 0;
	endif

	var cfg := ReadConfigFile(":ghaia:npcdesc");
	var npctemplate := targ.npctemplate;
	npctemplate := npctemplate[10, len(npctemplate)-9];
	cfg := cfg[npctemplate];
//	Sendsysmessage(who, " " + cfg.TameDifficulty  + " " + skill);
			
	var info := struct;
	info.+x := who.x;
	info.+y := who.y;
	info.+facing := who.facing;
	info.+difficulty := cfg.TameDifficulty;

   var chr_level := who.getLevel();

   if (info.difficulty > 21 && chr_level < 10)
	   return SendSysMessageEx(who, "Domesticar este animal está além das suas capacidades.", SSM_INFO);
   elseif (info.difficulty > 18 && chr_level < 4)
	   return SendSysMessageEx(who, "Domesticar este animal está além das suas capacidades.", SSM_INFO);
   elseif (info.difficulty > 15 && chr_level < 2)
	   return SendSysMessageEx(who, "Domesticar este animal está além das suas capacidades.", SSM_INFO);
   endif

	// if (CInt(info.difficulty) > CInt(skill + 15))
	// 	SendSysMessageEx(who, "Você não pode tentar adestrar "+targ.name+" ainda.");
	// 	return 0;
	// endif
	
	SetObjProperty(who, "#tamewait", ReadGameClock()+15);
	while( TameLoop(who, targ, info) )
		SetObjProperty(who, "#tamewait", ReadGameClock()+15);
		sleep(3);
		var dice := rollAttrDice(who, WISDOM, 0, struct{ "get_critical" := 2, "failure" := 5}) + getProficiencyBonus(who, TRATO_ANIMAIS);
		if (dice.critical == -1)
         if (targ.alignment == 1)
            TS_LowerDuration(targ, "peacemade", -1, 1);
            var event := struct{"type":=SYSEVENT_ENGAGED, "source":=targ};
            SendEvent(targ, event);
         endif
			SendSysMessageEx(who, "Você deixou "+targ.name+" irritado.", SSM_INFO);
			break;
		elseif ( dice.dice > 0 )
			SendSysMessageEx(who, "Você ganhou a confiança de "+targ.name+".", SSM_INFO);
			targ.SetMaster(who);
			who.SetAchievement("taming", 1);
         removeFromSpawn(GetObjProperty(targ, "spawnpoint"));
			EraseObjProperty(targ, "anchor");
			EraseObjProperty(targ, "spawnpoint");
			EraseObjProperty(targ, "spawnpointtype");
			
			SetObjProperty(targ, "owner", who.serial);
			SetObjProperty(targ, "name", targ.name);
			SetObjproperty(targ, "script", targ.script);
			SetObjProperty(targ, "AntigoTreinadorID", who.serial);
			
			targ.script := ":ghaia:follower";
			RestartScript(targ);
			
			Run_Script_To_Completion(":death:npcdeath", {targ});
			AddPet(who, targ.serial);	
			break;
		endif
		
		if ( events_waiting() )
			clear_event_queue();
		endif
	endwhile 
endfunction

function TameLoop(who, targ, byref info)
	var my_hostiles := ListHostiles(who, 15);
	var targ_hostiles := ListHostiles(targ, 15);
	
	if ( targ.master )
		SendSysMessage(who, targ.name+" não pode ser adestrado.", SSM_FAIL);
		return 0;
	elseif ( targ_hostiles.size() > 0 )
		SendSysMessageEx(who, "alguém está atacando "+targ.name+" .", SSM_FAIL);
		return 0;
	elseif ( my_hostiles.size() > 0 )
		SendSysMessageEx(who, "Você não pode adestrar "+targ.name+" enquanto está sendo atacado", SSM_FAIL);
		return 0;
	elseif ( (who.x != info.x) || (who.y != info.y) || (who.facing != info.facing) )
		SendSysMessageEx(who, "Você desviou sua atenção.", SSM_FAIL);
		return 0;
	elseif ( Distance(who, targ) > 2 )
		SendSysMessageEx(who, "Você está muito longe.", SSM_FAIL);
		return 0;
	endif
	
	PrintText(who, "*tentando adestrar " + targ.name + "*");

	var dice := rollAttrDice(who, WISDOM) + getProficiencyBonus(who, TRATO_ANIMAIS);
	if ( dice > info.difficulty-4 )
		SendSysMessageEx(who, ""+targ.name+" parece interessado em você.", SSM_INFO);
		ghaiaObjective(targ, info.x, 1);
		ExpGain(who, info.difficulty, dice);
		return 1;
	endif
	var dist := Distance(who, targ);
	SetObjProperty(targ, "#ForceFlee", 1);
	sleepms(160);
	if ( dist == Distance(who, targ) )
		SendSysMessageEx(who, targ.name+" não aceitou você como dono.", SSM_FAIL);
	else
		SendSysMessageEx(who, "Você assustou "+targ.name+" .", SSM_FAIL);
		return 0;
	endif
endfunction
