use uo;
use os;
use cfgfile;
use polsys;

include "include/client";
include "include/objtype";
include ":itemutils:canAccess";
include "include/say";
include "include/utils";

var item_cfg := ReadConfigFile(":*:itemdesc");

const uobj_wheel_start := 0x1015;
const uobj_wheel_end := 0x101e;

program use_wool(who, wool)
  EraseObjProperty(who, "IsMeditating");
  EraseObjProperty(who, "HealTimer");
  if(!can_access(who, wool))
    return;
  elseif(wool.movable == 0)
    SendSysMessageEx(who, "Você não pode usar isto.", SSM_FAIL);
    return;
  elseif(!ReserveItem(wool))
    return;
  endif

  SendSysMessageEx( who, "Escolha a roda de fiar.", SSM_REQUEST );
  var use_on := Target(who);
  if (!use_on)
    SendSysMessageEx(who,"Cancelado.", SSM_FAIL);
    return;
  endif

  var obj := use_on.objtype;
  if (((obj >= uobj_wheel_start) && (obj <= uobj_wheel_end)) || ((obj >= 0x10a4) && (obj <= 0x10a6)))

	var gfx;
	case(obj)
      4117:   gfx := 0x1016;
      4119:   gfx := 0x1016;
      4121:   gfx := 0x101a;
      4123:   gfx := 0x101a;
      4124:   gfx := 0x101d;
      4126:   gfx := 0x101d;
      4260:   gfx := 0x10a5;
      4262:   gfx := 0x10a5;
	endcase

	var initx := who.x;
	var inity := who.y;

	while (wool.amount >= 1)	

	   use_on.graphic := gfx;
      Detach();
		sleep(3);
		use_on.graphic := use_on.objtype;
	
         if (Makeyarn(who, wool) == 0)
            break;
         endif

		if ((who.x != initx) || (who.y != inity))
			SendSysMessageEx(who, "Você desviou sua atencao.", SSM_FAIL);
			break;
		endif

	endwhile

  else
    SendSysMessageEx(who, "Você precisa usar isto na roda de fiar.", SSM_FAIL);
  endif
endprogram

function Makeyarn(who, item) 
   if (!Accessible(who, item))
      SendSysMessageEx(who, "Você não possui o material!", SSM_FAIL);
      return 0;
   endif

   var elem := FindConfigElem(item_cfg, item.objtype);
   var elem_final := FindConfigElem(item_cfg, elem.Produce);

   if(SubtractAmount(item, 1))
      var item_descriptor := GetItemDescriptor(0xe1f);
      item_descriptor.CProps.insert("produce", cint(elem.Produce));
      item_descriptor.Color := cint(elem_final.color);

      var yarn := _CreateItemInBackpack(who, item_descriptor, 2);
      SendSysMessageEx(who, "Você criou o fio com o material.", SSM_INFO);
      return 1;
   else
      SendSysMessageEx(who, "Você não possui mais material suficiente.", SSM_FAIL);
      return 0;
   endif
endfunction
