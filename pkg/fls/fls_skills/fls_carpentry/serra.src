use uo;
use os;
use util;


include "include/say";
include "include/utils";
include ":gumps:gumps";
include ":gumps:gump_prompts";

program usar_serra(who, item)
	if (!Accessible (who, item) )
		SendSysMessageEx(who, "Você não alcanca aquilo!");
		return;
	endif

	if (!ReserveItem (item) )
		SendSysMessageEx(who, "você não pode usar isso agora.");
		return;
	endif

	SendSysMessageEx(who, "O que você deseja fazer com isto?", SSM_REQUEST);
	var targetted := Target (who);
	if (!targetted)
		SendSysMessageEx(who, "Cancelado.", SSM_FAIL);
		return;
	endif
	if (!Accessible (who, targetted) )
		SendSysMessageEx(who, "Você não alcanca isto!", SSM_FAIL);
		return;
	endif
	if (!targetted.movable)
		SendSysMessageEx(who, "Você não pode usar isto.", SSM_FAIL);
		return;
	endif
	if (!ReserveItem (targetted) )
		SendSysMessageEx(who, "Você não pode usar isto agora.", SSM_FAIL);
		return;
	endif

	if((targetted.objtype != 0x1bdd) && (targetted.objtype != 0xee36) && (targetted.objtype != 0xee37) && (targetted.objtype != 0xee39)  && (targetted.objtype != 0xee38) && (targetted.objtype != 0xee3) && (targetted.objtype != 0xee3a) && (targetted.objtype != 0xee3b) && (targetted.objtype != 0xee3c) )
           SendSysMessageEx(who, "Você deve usar a serra nas madeiras!");
           return;
        else
            OpenMenuLog(who, targetted);
	endif

endprogram

function OpenMenuLog(who, targetted)

   var res := ChoiceSelectorGump(who, "O que você deseja fazer?", array{
      struct{ text := "Fazer Tábuas", item := 7127},
      struct{ text := "Fazer Cabos", item := 3978}
   });


   if ( res == 1 )
      return maketabuas(who, targetted);
   elseif ( res == 2)
      return makecabos(who, targetted);
   endif
endfunction

function maketabuas(who, item)
 
   var nova_tabua;

   case (item.objtype)
        0xee36: 
                nova_tabua :=0xee66;
                MakeBoardSerra(who, item, nova_tabua);
        0xee37: 
                nova_tabua :=0xee67;
                MakeBoardSerra(who, item, nova_tabua);
        0xee38: 
                nova_tabua :=0xee68;
                MakeBoardSerra(who, item, nova_tabua);
        0xee39:
                nova_tabua :=0xee69;
                MakeBoardSerra(who, item, nova_tabua);
        0xee3a:
                nova_tabua :=0xee70;
                MakeBoardSerra(who, item, nova_tabua);
        0xee3b:
                nova_tabua := 0xee73;
                MakeBoardSerra(who, item, nova_tabua);
        0xee3c:
                nova_tabua :=0xee74;
                MakeBoardSerra(who, item, nova_tabua);
        default:
                nova_tabua :=0x1bd7;
                MakeBoardSerra(who, item, nova_tabua);
   endcase

endfunction

function MakeBoardSerra(who, item, nova_tabua)

	var characterx := who.x;
	var charactery := who.y;
	repeat
                if ((item.amount) <= 0)
                   break;
                endif
                MakeSerraEfect(who);

		//CreateItemInContainer (who.backpack, nova_tabua, 1);
                //SubtractAmount(item, item.amount);

		//alterado - Ed.
		_CreateItemInBackpack(who, nova_tabua, item.amount);
                SubtractAmount(item, item.amount);



	until ((who.x != characterx or who.y != charactery));

endfunction

function makecabos(who, item)
 

   case (item.objtype)
        0xee36: 
                MakeCaboSerra(who, item);
        0xee37: 
                MakeCaboSerra(who, item);
        0xee38: 
                MakeCaboSerra(who, item);
        0xee39:
                MakeCaboSerra(who, item);
        0xee3a:
                MakeCaboSerra(who, item);
        0xee3b:
                MakeCaboSerra(who, item);
        0xee3c:
                MakeCaboSerra(who, item);
        default:
                MakeCaboSerra(who, item);
   endcase

endfunction

function MakeCaboSerra(who, item)
        var cabo := 0xee71;
	var characterx := who.x;
	var charactery := who.y;
	repeat
                if ((item.amount) <= 0)
                   break;
                endif
                MakeSerraEfect(who);
        	_CreateItemInBackpack(who, cabo, 1);
                SubtractAmount(item, 1);

	until ((who.x != characterx or who.y != charactery));

endfunction

function MakeSerraEfect(who)
  PlaySoundEffect(who, 0xff);
  sleep(2);
endfunction
