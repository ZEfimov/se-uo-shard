
use uo;
use os;
use cfgfile;
use math;
include ":merchants:merchant";
include "include/string";
include "include/sounds";
include":merchants:crafthelp";
include ":ghaia:ghaiaUtil";
include ":gumps:gumps";
include ":crafting:recipes";
include ":gumps:gumps_ex";
include ":gumps:yesno";
include ":gumps:include/requestgump";
include ":crafting:craft_props";
include ":crafting:fls_crafting";
include ":gumps:htmlgump";
include ":tn:cooldown";

const GF_STDCOLOR := 1890;
const MOEDAS      := 0xeed;
var item_cfg      := ReadConfigFile(":*:itemdesc");
var npc;

program HandleMerchant(params)
	SetObjProperty(params.me, "#occupied", GetPid());
	case (params.type)
		"ItemGivenEvent": 
			if (!HandleItemGiven(params.me, params.source, params.item))
				MoveItemToContainer(params.item, params.source.backpack);
			endif
		"SpeechEvent": HandleSpeech(params.me, params.source, params.text);
      "SeeEvent": HandleSeeEvent(params.me, params.source);
		"Default": return;
	endcase

	EraseObjProperty(params.me, "#occupied");
endprogram

function HandleSeeEvent(npc, player)
   if (GetCooldown(npc, "{}_see".format(player.serial)))
      return;
   endif
	var data_elem := GetPaymentsDataElem(Hex(npc.serial));
	var account := data_elem.GetProp(Hex(player.serial));
   
   if (!account.size())
      return;
   endif

   PlayCustomSound(npc, 14);
   PrintText(npc, "{}, vendi alguns artigos seu!");
   SetCooldown(npc, "{}_see".format(player.serial), 600);
endfunction

function HandleItemGiven(npc, player, item)
   var items_inside := GetSellerAccount(npc, player.serial);
   if (items_inside.size() >= 5 && !player.cmdlevel)
      PrintText(npc, "Desculpe, mas já estou vendendo muitas mercadorias sua.");
      return;
   endif

	var onlyplayersells := GetObjProperty(npc, "oneplayersells");
	if ( (cint(GetObjProperty(npc, "onlygmsells")) == 1 ) && player.cmdlevel < 3 )
		SendSysMessageEX(player, "Você não pode colocar itens a venda nesse vendedor.",SSM_FAIL);
		return;
	elseif (onlyplayersells && onlyplayersells != player.name)
		SendSysMessage(player, "Perdao, somente " + onlyplayersells + " pode fazer vendas comigo");
		return;
	elseif (GetObjproperty(item, "serialid") != error)
		SendSysMessageEx(player,"Você não pode vender isto.",SSM_FAIL);
		return;
	elseif ( !item.IsA(POLCLASS_ITEM) )
		SendSysMessageEX(player, "Cancelado.",SSM_FAIL);
		return;
	elseif ( (item.objtype == 0xeed || item.objtype == 0xba64 || item.objtype == 0xba65 ) && player.cmdlevel < 3)
		SendSysMessageEX(player, "Você não pode vender moedas",SSM_FAIL);
		return;
	endif

	PrintText(player, "*vendendo item*");
	var result := AddItemToSell(npc, player, item);
	return result;
endfunction

function HandleSpeech(npc, player, text)
   var canceled := 0;
	text := lower(text);
   if (text["artigo"] || text["compra"] || text["ver"])
      while(!canceled)
         if (!player.concealed)
			   PrintText(npc, "O que deseja comprar?");
         endif
         var input := SendItemView(npc, player);
         if (!input[0])
            break;
         elseif (input[0] == 2)
			elseif (input[0] > 90000)
				var serial := input[0] - 90000;
				RemoveItemMerchant(npc, player, serial);
         else
            DoPurchase(npc, player, input[0]);
            break;
         endif
      endwhile
   elseif (text["minhas vendas"])
      DoWithdraw(npc, player);
   elseif (text["histórico"] && text["vendas"])
      if (GetObjProperty(player, "merchant_owner") == GetRegionName(player))
         PrintText(npc, "Aqui está o histórico de vendas, Sr.");
         var historico := GetMerchantLog(npc);
         historico := "<br> - {}".format("<br> -".join(historico));
         SendHTMLGump(player, "Histórico de Vendas", historico);
      endif
   endif

endfunction

function SendItemView(npc, player)
	var npc_type := GetObjProperty(npc, "vendor_type");
	if (!npc_type)
		npc_type := "Vendedor";
	endif

	var items_sold := GetItemsSoldList(npc);	
	var gump := GFCreateGump();
	
	GFPage(gump, 0);
	GFGumpPic(gump, 11, 29, 40009, 0); //borders
	GFGumpPicTiled(gump, 42, 59, 700, 513, 30540); //background
	GFHtmlShadowed(gump, 42, 34, 700, 20, "#FFFFFF", "<center>"+npc_type, 4);
	
	var i := 1;
	var x := 48;

	foreach serial in items_sold
		var cost_info := GetItemSoldInfo(npc, serial);
		var item      := cost_info[2];
		cost_info     := cost_info[1];
		var donoDoItem := SystemFindObjectBySerial(cost_info.seller, SYSFIND_SEARCH_OFFLINE_MOBILES);
		
		//print("removendo item do vendor de char deletado.");
		if (!donoDoItem && cost_info.infinite != 1)
			RemoveItemForSale(npc, serial);
         continue;
		endif

      var color := GF_STDCOLOR;
      if ( item.color )
         color := item.color-1;
      endif

		var cost_name;
      if (cost_info.objtype == MOEDAS)
         cost_name := "moedas de cobre";
      else
         if (cost_info.cost_name)
            cost_name := cost_info.cost_name;
         else
            cost_name := GetName(cost_info.cost_type);
         endif
      endif

		var pos := Floor(i / 5.1);
		if (i % 5 == 1)
			x := 48;
		endif
		var y := 66 + (pos * 170);

		GFGumpPic(gump, x, y, 40010, 0);
		GFGumpPic(gump, x+4, y+118, 40032, 0);
		GFAddButton(gump, x+1, y+132, 40023, 40023, GF_CLOSE_BTN, serial);
		GFTooltipText(gump, "Comprar");

		if (player.cmdlevel > 3 || GetObjProperty(player, "merchant_owner") == GetRegionName(player))
			var vendor_name := GetPlayerNameBySerial(cost_info.seller);
  			GFHTMLArea(gump, x+10, y+35, 110, 20, "<BASEFONT size=4 color=#FFFFFF><center>{}".format(vendor_name));
		endif
		if (player.cmdlevel >3 || cost_info.seller == player.serial || GetObjProperty(player, "merchant_owner") == GetRegionName(npc))
			GFAddButton(gump, x+96, y+116, 0x9C4F, 0x9C4F, GF_CLOSE_BTN, 90000+cint(serial));
		endif

  		GFHTMLArea(gump, x+20, y+1, 90, 20, "<BASEFONT size=4 color=#FFFFFF><center>{}".format(item.desc));
      GFTooltipText(gump, "{}".format(item.desc));
		GFTilePic(gump, x+42, y+75, item.graphic, 0); //objtype
      var item_desc := GetDetails(item);
      if (cost_info.desc)
         item_desc := "{}{}".format(item_desc, cost_info.desc);
      endif
      if (item_desc != "")
		   GFTooltipText(gump, "{}".format(item_desc));
      endif
      
		GFTextLine(gump, x+24, y+120, 1051, "Unidade");
		GFResizePic(gump, x+25, y+138, 30546, 96, 19);
		GFGumpPic(gump, x+27, y+140, 40022, 0);
      GFTextLine(gump, x+50, y+138, 1153, "{}".format(cost_info.cost_amt));

		x += 140;
		i +=1;
		// GFTextLine(gump, 195, y_pos, color, item.desc + " -> " + cost_info.cost_amt + " " + cost_name );
		sleepms(2);
   endforeach

	if (items_sold.size() < 1)
		GFTextLine(gump, 305, 300, 1051, "Nenhum item a venda!"); //desc
	endif

	return GFSendGump(player, gump);
endfunction

function removeItemMerchant(npc, player, input)
	var info := GetItemSoldInfo(npc, input);
	var cost := info[1];
	var selling := info[2];
	
	var confiscar;
	if ( (player.cmdlevel >= 3 || GetObjProperty(player, "merchant_owner") == GetRegionName(player)) && YesNo(player, "Você deseja confiscar este objeto?") )
		confiscar := 1;
		var ItensRevogados := dictionary;
		if ( GetObjProperty(npc, "ItensRevogados") )
			ItensRevogados := GetObjProperty(npc, "ItensRevogados");
		endif
		ItensRevogados.Insert(cost.seller, 1);
		if (ItensRevogados == error)
			Printtext(npc, "Error" + ItensRevogados);
		else
			SetObjProperty(npc, "ItensRevogados", itensRevogados);
		endif
		
      if (!player.concealed)
		   Printtext(npc, "Aqui esta o objeto confiscado, avisarei o dono assim que ele aparecer por aqui.");
      endif
	else
		if ( !YesNo(player, "Você deseja mesmo pegar este item de volta?") )
			return;
		endif
		Printtext(npc, "Certo. Aqui esta seu produto.");
		
	endif

	RemoveItemForSale(npc, input, confiscar);
	var purchase := CreateItemInBackPack(player, selling, selling.amount);
	if ( purchase == error )
		purchase := CreateItemAtLocation(player.x, player.y, player.z, selling, selling.amount);
		if ( purchase == error )
			SendSysMessage(player, "Error - Unable to create item! ->"+purchase.errortext);
		else
			Printtext(npc, "Eu não fui capaz de colocar o item na sua bolsa. Coloquei aos seus p¿s entao.");
		endif
	endif
   CreateItemInBackPack(player, cost.cost_type, cost.cost_amt);
endfunction

function DoPurchase(npc, player, input)
	var info := GetItemSoldInfo(npc, input);
	var cost := info[1];
	var selling := info[2];
	// var confiscar := 0;

	if ( AmountInPack(player, cost.cost_type) < CInt(cost.cost_amt) )
		SendSysMessage(player, "Você não tem "+GetName(cost.cost_type, 1)+ " suficiente para comprar isto.");
		return 0;
	endif

	var cost_desc := AddArticle(GetName(cost.cost_type));
	var owed := cost.cost_amt;
	var pay_list := array{};
	repeat
		SendSysMessageEx(player, "Escolha "+cost_desc+" que Você quer usar para pagar. Você deve mais ["+owed+"].");
		var targ := Target(player);
		if ( !targ )
			SendSysMessage(player, "Cancelado", SSM_INFO);
			return;
		elseif ( targ in pay_list )
			SendSysMessageEx(player, "Você ja esta pagando com isto.", SSM_FAIL);
		elseif ( !(targ in EnumerateItemsInContainer(player.backpack)) )
			SendSysMessageEx(player, "Essa não eh sua bolsa.");
		elseif ( targ.objtype == cost.cost_type )
			if ( !ReserveItem(targ) )
				SendSysMessageEx(player, "Você não pode pagar com isto.", SSM_FAIL);
			else
				if ( cost.specialProp != error)
					if (cost.specialProp.value != GetObjProperty(targ, cost.specialProp.name))
						SendSysMessageEx(player, "item invalido", SSM_FAIL);
					else
						owed := owed - targ.amount;
						pay_list.Append(targ);
					endif
				else
					owed := owed - targ.amount;
					pay_list.Append(targ);
				endif
			endif
		else
			SendSysMessageEx(player, "Item escolhido não eh "+cost_desc+".", SSM_FAIL);
		endif
	until ( owed <= 0 );

	owed := cost.cost_amt;
	foreach item in pay_list
		ReleaseItem(item);
		var amount := item.amount;
		
		var template := CreateItemTemplate(item);
		template.desc := GetName(item.objtype, CInt( (owed-1)/(owed-1) ));
		
		if ( owed > amount )
			AddPaymentForSeller(npc, cost.seller, template);
			DestroyItem(item);
		else
			//template.amount := owed;
			template.amount := cost.cost_amt;
			AddPaymentForSeller(npc, cost.seller, template);
			SubtractAmount(item, owed);
			break;
		endif
		owed := owed-amount;
		sleepms(2);
	endforeach
   
	RemoveItemForSale(npc, input);
	CreateItemInBackpackFromTemplate(player, selling);
   SetMerchantLog(npc, player.name, selling.desc, GetPlayerNameBySerial(cost.seller), cost.cost_amt);
endfunction

// function RemoveItem(npc, player, input)
// 	var info    := GetItemSoldInfo(npc, input);
// 	var cost    := info[1];
// 	var selling := info[2];
// 	var cost_desc := AddArticle(GetName(cost.cost_type));
	
// 	Printtext(npc, "Certo. Aqui esta seu produto.");
// 	RemoveItemForSale(npc, input);
// 	var purchased := CreateItemInBackPack(player, selling, selling.amount);
// 	if ( purchased == error )
// 		purchased := CreateItemAtLocation(player.x, player.y, player.z, selling, selling.amount);
// 		if ( purchased == error )
// 			SendSysMessage(player, "Error - Unable to create item! ->"+purchased.errortext);
// 		else
// 			Printtext(npc, "Vou deixar sua compra aqui no chao.");
// 		endif
// 	endif
// endfunction


function AddItemToSell(npc, player, item)
   var items_sold := GetItemsSoldList(npc);
   if (items_sold.size() >= 15)
      PrintText(npc, "Desculpe, não posso vender mais coisas no momento. Venha outra hora.");
      return 0;
   endif

	var gump := GFCreateGump();
	var infinite;
	GFPage(gump, 0);
	GFResizePic(gump, 14, 22, 9270, 176, 149);
	GFResizePic(gump, 27, 32, 9350, 150, 126);

	GFAddButton(gump, 34, 126, 241, 248, GF_CLOSE_BTN, 0);
	GFAddButton(gump, 105, 123, 247, 248, GF_CLOSE_BTN, 1);
	GFHtmlShadowed(gump, 80, 37, 80, 20, "#FFFFFF", "Vender", 5);
	GFTextLine(gump, 39, 69, 1891, "Moedas por Unidade");
	GFResizePic(gump, 39, 89, 30546, 126, 26);
	GFGumpPic(gump, 43, 94, 40022, 0);
	var cost := GFTextEntry(gump, 62, 92, 89, 20, 1153, "");

	if (player.cmdlevel >= 3)
		GFResizePic(gump, 191, 21, 9270, 138, 149);
		GFResizePic(gump, 204, 35, 9350, 112, 126);
		GFHTMLArea(gump, 219, 40, 100, 20, "<BASEFONT size=5 color=#FFFFFF>[GM] Troca");
		GFAddButton(gump, 223, 73, 239, 248, GF_CLOSE_BTN, 2);
		GFHTMLArea(gump, 215, 93, 100, 20, "<BASEFONT size=5 color=#FFFFFF>Options");
		infinite := GFCheckBox(gump, 210, 113, 0x9C4E, 0x9C4F);
		GFTextLine(gump, 240, 112, 1153, "Infinito");
	endif

	var input := GFSendGump(player, gump);
	
	if (input[0] != 1)
		return;
	endif

	var cost_amt := cint(GFExtractData(input, cost));
	var cost_type := MOEDAS;
	// var specialProp := struct;

	if ( !cost_amt || cost_amt == 0 )
		SendSysMessageEx(player, "Cancelado", SSM_FAIL);
		return;
	elseif (cost_amt > 10000)
		SendSysMessageEx(player, "Você ultrapassou o limite maximo de {} moedas.".format("10000"), SSM_FAIL);
		return;
	elseif ( player.cmdlevel < 3 && AmountInPack(player, MOEDAS) < CInt(cost_amt * 0.1) )
		SendSysMessageEx(player, "Você não tem moedas suficiente para pagar o vendedor pelo seu servico.", SSM_FAIL);
		return 0;
	endif

	infinite := GFExtractData(input, infinite);
	var dezperc := CInt(cost_amt * 0.1);

   if (dezperc <= 1)
      dezperc := 1;
   endif
	var desc := RequestGump(player, "Entre com uma pequena descrição do produto.", "Isso é opcional", "", 1);
	if ( !desc )
		desc := "";
	elseif ( Len(desc) > 300 )
		desc := desc[0,300]+"...";
	endif

	if (player.cmdlevel < 3 && dezperc != 0)
		var pay := 0;
		do
			SendSysMessageEx(player, "Escolha o montante de moedas para que seu item seja colocado a venda. Pressione ESC para cancelar.", SSM_REQUEST);
			var targ := Target(player);
			if ( !targ )
				SendSysMessageEx(player, "Cancelado.");
				return;
			elseif ( !(targ in EnumerateItemsInContainer(player.backpack)) )
				SendSysMessageEx(player, "não esta na sua bolsa.", SSM_FAIL);
			elseif ( GetObjProperty(targ, "stealed") )
				SendSysMessageEx(player, "Objeto foi roubado!", SSM_FAIL);
			elseif ( targ.objtype == MOEDAS )
				if ( !ReserveItem(targ) )
					SendSysMessageEx(player, "Você não pode pagar com isto.", SSM_FAIL);
				else
					if (dezperc > 0 && !SubtractAmount(targ, dezperc))
						SendSysMessageEx(player, "Você não pode pagar com isto.", SSM_FAIL);
					else
						pay := 1;
						SendSysMessageEx(player, "Pagamento efetuado com sucesso!", SSM_FAIL);
					endif
				endif
			else
				SendSysMessageEx(player, "Você deve indicar moedas de cobre.", SSM_FAIL);
			endif
		dowhile ( !pay );
	endif
	
	var result := AddItemForSale(npc, player, item, cost_type, item.desc, cost_amt, desc, infinite);
	if ( result != error )
      if (!player.concealed)
		   PrintText(npc, "Tudo certo. Colocarei seu item a venda.");
      endif
		SendSysMessageEx(player, "O item foi adicionado com sucesso.", SSM_FAIL);
		return 1;
	endif

   if (!player.concealed)
	   PrintText(npc, "Me desculpe mas não poderei vender isto para Você, tome seu dinheiro de volta.", SSM_FAIL);
   endif
	CreateItemInBackpack(player, MOEDAS, dezperc);
	SendSysMessageEx(player, "Error =>"+result.errortext);
endfunction

function DoWithdraw(npc, player)
	var data_elem := GetPaymentsDataElem(Hex(npc.serial));
	var account := data_elem.GetProp(Hex(player.serial));
   
   if (!account.size())
      return PrintText(npc, "Desculpe, parece que nada vendeu ainda.");
   endif

   PrintText(npc, "Aqui estão os lucros de sua venda");
	foreach item in account
		var withdraw := CreateItemInBackPack(player, item.ObjType, item.amount);
		if( withdraw == error )
			withdraw := CreateItemAtLocation(player.x, player.y, player.z, item.ObjType, item.amount);
			if ( withdraw == error )
				SendSysMessage(player, "Error - Unable to create item! ->"+withdraw.errortext);
			else
				PrintText(npc, "Eu não fui capaz de colocar o item na sua bolsa. Coloquei aos seus p¿s entao.");
			endif
		endif
		sleepms(2);
	endforeach

	data_elem.EraseProp(Hex(player.serial));
endfunction

function GetDetails(item)
   var ret := "";
   if (item.ObjClass == "Armor" || item.ObjClass == "Weapon")
      ret += "Condição: {}<br>".format(GetCondition(item));
      ret += "Qualidade: {}<br>".format(getQuality(item.quality));
      if (item.strrequired)
         ret += "Força Minima: {}<br>".format(item.strrequired);
      endif
      if (item.intrequired)
         ret += "Força Minima: {}<br>".format(item.intrequired);
      endif
   endif

   if (item.CProps.objtype)
      var recipe := GetRecipe(item.CProps.objtype, ReadConfigFile(":*:recipes"));
      ret += "Receita de {}<br>".format(recipe.name);
   endif
   // if (item.ObjClass == "Armor")
   //    print("is armor");
   // endif

   return ret;
endfunction