
use uo;
use os;
use cfgfile;
use math;
include ":merchants:merchant";
include "include/string";
include "include/sounds";
include":merchants:crafthelp";
include ":ghaia:ghaiaUtil";
include ":gumps:gumps";
include ":crafting:recipes";
include ":gumps:gumps_ex";
include ":gumps:yesno";
include ":gumps:include/requestgump";
include ":crafting:craft_props";
include ":crafting:fls_crafting";
include ":gumps:htmlgump";
include ":tn:cooldown";

const GF_STDCOLOR := 1890;
const MOEDAS      := 0xeed;
var item_cfg      := ReadConfigFile(":*:itemdesc");
var npc;

program HandleMerchant(params)
	SetObjProperty(params.me, "#occupied", GetPid());
	case (params.type)
		// "ItemGivenEvent": 
		// 	if (!HandleItemGiven(params.me, params.source, params.item))
		// 		MoveItemToContainer(params.item, params.source.backpack);
		// 	endif
		"SpeechEvent": HandleSpeech(params.me, params.source, params.text);
      // "SeeEvent": HandleSeeEvent(params.me, params.source);
		"Default": return;
	endcase

	EraseObjProperty(params.me, "#occupied");
endprogram


function HandleSpeech(npc, player, text)
   var canceled := 0;
	text := lower(text);

   if (text["ol"] && (text["á"] || text["a"]))
      while(!canceled)
         if (!player.concealed)
			   PrintText(npc, "Tudo bem com você?");
         endif
         canceled := 1;
         // // var input := SendItemView(npc, player);
         // if (!input[0])
         //    break;
         // elseif (input[0] == 2)
			// elseif (input[0] > 90000)
			// 	var serial := input[0] - 90000;
			// 	RemoveItemMerchant(npc, player, serial);
         // else
         //    DoPurchase(npc, player, input[0]);
         //    break;
         // endif
      endwhile
   elseif (player.cmdlevel >= 3 && text["alterar"] && text["opc"])
      SendConfigGump(npc, player);
   endif
endfunction

function SendConfigGump(npc, player)
   var myconfigs := GetObjProperty(npc, "config");
   if (!myconfigs) myconfigs := struct{}; endif
   if (!myconfigs.text) myconfigs.text := ""; endif
   if (!myconfigs.type) myconfigs.type := array{}; endif
   if (!myconfigs.classes) myconfigs.classes := array{}; endif

   var classCfg := ReadConfigFile(":charactercreation:config/classes");
   var opts := GetConfigStringKeys(classCfg);
   opts.append("Todos");

   var marked_type := array{};
   var can_teach := array{};
   foreach type in opts
      if (type in myconfigs.type) marked_type.append(_type_iter); endif
      if (type in myconfigs.classes) can_teach.append(_type_iter); endif
      sleepms(2);
   endforeach

   var quest_gump := array{
      struct{ title := "Texto de introdução", marked := myconfigs.text },
      struct{ title := "Quests que pode dar:", checkbox := opts, marked := marked_type },
      struct{ title := "Classes que pode ensinar", checkbox := opts, marked := can_teach }
   };
   var output := QuestionsGump(player, quest_gump);
   if (!output) return 0; endif
   myconfigs.text := output[1];
   myconfigs.type := output[2];
   myconfigs.classes := output[3];

   SetObjProperty(npc, "config", myconfigs);
endfunction