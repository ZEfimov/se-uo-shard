use uo;
use os;
use npc;
use util;

include ":attributes:attributes";
include "include/sysEvent";
include "include/say";
include ":mounts:mounts";
include ":taming:taming";
include ":tn:cooldown";


set_script_option(SCRIPTOPT_CAN_ACCESS_OFFLINE_MOBILES, 1);

var pack_animals   := array(291, 292); 
var mountables     := array(200, 204, 226, 228);
var me             := self();
var wait_time      := 120;
var next_watch     := ReadGameClock();
var guarding       := 0;
var last_following := 0;
var following      := 0;
var fighting       := 0;
var opponent       := 0;
var going_loc      := 0;


//Owner info
var owner_serial;
var owner;
var faction;

//Custom events
const FOLLOW_CMD     := 0xA001;
const ATTACK_CMD     := 0xA002;
const NEW_MASTER_CMD := 0xA003;
const GUARD_CMD      := 0xA004;
const GO_LOC_CMD     := 0xA008;



program TamedAI()

    EnableMainEvents();
    Setup();

    while ( me )
        if ( wait_time < 1 )
            sleepms(10);
        endif

        SpecialHab(me);

        var ev := Wait_For_Event(wait_time);

        case ( ev.type )
            EVID_DOOBJECTIVE:
            
                following    := 0;
                fighting     := 0;
                opponent     := 0;
                guarding     := 0;
                going_loc    := struct;
                going_loc.+x := ev.destiny.x;
                going_loc.+y := ev.destiny.y;
                going_loc.+z := ev.destiny.z;
                going_loc.+type := "run";
                
            SYSEVENT_SPEECH:

                ProcessSpeech(ev);

            SYSEVENT_ENGAGED:

                opponent := ev.source;

            SYSEVENT_DAMAGED:

                if ( (ev.source).IsA(POLCLASS_MOBILE) )

                    opponent := ev.source;

                endif
            EVID_HERDING:

                going_loc := struct;
                going_loc.+x := ev.data.x;
                going_loc.+y := ev.data.y;
                going_loc.+z := ev.data.z;
                going_loc.+type := "run";

            FOLLOW_CMD:

                following := ev.targ;

            ATTACK_CMD:

                opponent := ev.targ;

            GUARD_CMD:

                guarding := ev.targ;

            NEW_MASTER_CMD:

                Transfer(ev.targ);
                

            SYSEVENT_DOUBLECLICKED:
                
                if ( ev.source == owner || (GetObjProperty(ev.source, "faccao")[1] && hex(GetObjProperty(ev.source, "faccao")[1]) == hex(faction)) )
                    if( (Distance(ev.source, me) > 1) )
                            ProcessDoubleClick(ev);

                    elseif ( me.graphic in pack_animals )

                        OpenPack(ev);

                    elseif ( !GetEquipmentByLayer(ev.source, LAYER_MOUNT) )

                        if ( IsMountable(me.graphic))
                            if (MoveObjectToLocation(ev.source, me.x, me.y, me.z, ev.source.realm))

                                ev.source.hidden := 0;
                                MP_Mount(ev.source, me);
                                me.hidden := 0;
                            endif

                        endif
                    else
                        ProcessDoubleClick(ev);
                    endif

                endif

            SYSEVENT_ITEM_GIVEN:
                TakeItem(ev);

        endcase

        if ( CInt(GetObjProperty(me, "happiness")) < 10 )
            //var skill := AP_GetSkill(owner,ANIMAL_TAMING);
            //skill := skill - 0.1;
            //SetTrueSkill(owner, "Taming", skill);
            //SendSysMessageEX(owner, "You become less proficient in Animal Taming.", SSM_INFO_IC);

            //if ( me.graphic in mountables )
            //    UnMount(owner);
            //endif            

            //UnTame();
        elseif ( opponent && !IsDead(opponent) && !opponent.concealed && !opponent.hidden )
            Fight();
            Follow();

        elseif ( fighting && ( IsDead(opponent) || Distance(me, opponent) > 15 || opponent.concealed) )
            following := last_following;
            fighting := 0;
            opponent := 0;
            last_following := 0;
            SetWarMode(0);

        elseif ( guarding )

            Guard();
            Follow();

        elseif ( following )

            Follow();

        elseif ( going_loc )
            goToLoc();
        else
            wait_time := 120;
        endif

    endwhile

endprogram



function ProcessSpeech(ev)

    var text := lower(ev.text);
    var name := lower(me.name);
    var people := GetObjProperty(ev.source, "faccao")[1];
    
    if (people && faction)
        if (hex(people) != hex(faction))
            return;
        endif
    elseif ( ((ev.source).serial != (me.master).serial))
        return;
    endif

    if( text[name+" mate"] || text[name+" ataque"] || text["todos matem"] || text["todos ataquem"] )
        var targ := target(ev.source, TGTOPT_HARMFUL + TGTOPT_CHECK_LOS);
        if ( targ == me || targ == ev.source || !targ.IsA(POLCLASS_MOBILE) )
            return;
        endif

        if ( text["todos"] )
            AllCommand(ATTACK_CMD, targ);
        else
            opponent := targ;
        endif

    elseif ( text["guarde"] )
        if ( text["todos guardem"] )
            if ( text["todos guardem-me"] )
                guarding := ev.source;
                following := ev.source;
            else
                var targ := target(ev.source);
                if ( targ.IsA(POLCLASS_MOBILE) )
                    AllCommand(GUARD_CMD, targ);
                endif
            endif
        else
            var targ := target(ev.source);
            if ( targ == me )
                return;
            elseif ( targ.IsA(POLCLASS_MOBILE) )
                guarding := targ;
                following := targ;
            endif
        endif

    elseif( text[name+" pare"] || text["todos parem"] )

        opponent := 0;
        guarding := 0;
        following := 0;
        going_loc := 0;

    elseif( text[name+" siga"] )

        if ( text["siga-me"] )
            following := ev.source;
        else
            following := target(ev.source);
        endif

    elseif ( text["todos sigam"] )

        if ( text["todos sigam-me"] )
            following := ev.source;
        else

            var targ := target(ev.source);
            if ( targ.IsA(POLCLASS_MOBILE) )
                AllCommand(FOLLOW_CMD, targ);
            endif

        endif

    elseif ( text[name+" novo dono"] || text["todos novo dono"] )


        var cfg := ReadConfigFile(":ghaia:npcdesc");
        var npctemplate := me.npctemplate;
        npctemplate := npctemplate[10, len(npctemplate)-9];
        cfg := cfg[npctemplate];

        if (GetObjPRoperty(me, "summon") == 1)
            SendSysMessage(owner, "Outros nao podem controlar criaturas invocadas por voce.");
            return;
        endif

        if (GetObjProperty(owner, "companheiro") == me.serial)
            SendSysMessage(owner, "Voce nao pode transferir seu companheiro animal.");
            return;
        endif

        var targ := target(ev.source);
        PrintText(me, "alignment: " + me.alignment);
        if (me.alignment == "evil")
            if ( AP_GetSkill(targ, TRATO_ANIMAIS)+10 < cfg.TameDifficulty )
                SendSysMessage(owner, "A criatura nao aceita o alvo como novo dono.");
                return;
            endif
        endif

        if ( !targ.acctname )
            return;
        elseif ( text["all transfer"] )
            AllCommand(NEW_MASTER_CMD, targ);
        else
            Transfer(targ);
        endif

    elseif( text[name+" livre"] || text["todos livres"] )

        if (GetObjPRoperty(me, "summon") == 1)
            SendSysMessage(owner, "Criaturas invocadas nao podem ser libertadas normalmente.");
            return;
        endif

        if (GetObjProperty(owner, "companheiro") == me.serial)
            SendSysMessage(owner, "Seu companheiro animal nao quer deixar voce.");
            return;
        endif
        
        if (GetObjProperty(me, "faccao"))
            return;
        endif
        
        
        EraseObjProperty(me, "anchor");
        UnTame();
    endif

endfunction



function TakeItem(ev)

    var cfg := ReadConfigFile(":*:itemdesc");
    if ( cfg[(ev.item).objtype].script["eat"] )
        PlaySoundEffect(me, CInt(0x3b)+ RandomInt(3));
        DestroyItem(ev.item);
        PrintTextAbovePrivate(me,"*O animal parece feliz*", ev.source);
        SetObjProperty(me, "happiness", 100);
    elseif ( ev.item.objtype IN {2482, 3701} && !(me.graphic in pack_animals) )
        if ((EnumerateItemsInContainer(ev.item)).size() > 0)
            SendSysMessage(ev.source, "Voce precisa esvaziar a mochila antes de coloca-la na montaria.");
            return;
        endif
        if ( me.npctemplate == ":ghaia:Horse3" )
            SetObjProperty(me, "beforepack", me.graphic);
            me.graphic := 291;
            DestroyItem(ev.item);
            PrintText(ev.source,"*prende uma mochila no cavalo*");
        elseif ( me.npctemplate == ":ghaia:Llama" )
            SetObjProperty(me, "beforepack", me.graphic);
            me.graphic := 292;
            DestroyItem(ev.item);
            PrintText(ev.source,"*prende uma mochila na llama*");
        endif

        //if(IsMountable(me.graphic))
        //    mount := 1;
        //else
        //    mount := 0;
        //endif
    else
        SendSysMessage(ev.source, "Nao pode dar esse item!");
    endif    

endfunction



function Fight()

    if ( !fighting )

        last_following := following;
        following := opponent;
        TurnToward(opponent);
        SetOpponent(opponent);
        fighting := 1;

    endif

endfunction



function IsDead(opponent)

    if ( !opponent )
        return 1;
    elseif ( !opponent.dead )
        return 0;
    elseif ( opponent.npctemplate )
        return 0;
    else
        return 1;
    endif

endfunction



function OpenPack(ev)

    if ( ev.source != owner )
        return;
    elseif ( Distance(me, ev.source) > 2 )
        return;
    else
        SendOpenSpecialContainer(owner, me.backpack);
    endif

endfunction



function Follow()

    var dist := Distance(me, following);
    var anchor := GetObjProperty(me, "anchor");
    if ( opponent )

        if ( dist > 1 )
            var ma := 200 - me.run_speed;
            me.run_speed := me.run_speed + ma;
            RunToward(following);
            me.run_speed := me.run_speed - ma;
            wait_time := 0;
        else
            wait_time := 1;
        endif
    elseif (anchor && (CoordinateDistance(me.x, me.y, anchor[1], anchor[2]) > 80))
        Say("Nao devo me afastar muito.");
        Say("Ficarie por aqui");
        following := 0;
    elseif( dist <= 1 )

        wait_time := 1;

    elseif( dist > 25 )

        following := 0;
        wait_time := 120;

    elseif ( dist > 4 )

        var ma := 200 - me.run_speed;
        me.run_speed := me.run_speed + ma;
        RunToward(following);
        me.run_speed := me.run_speed - ma;
        wait_time := 0;

    else

        var ma := 200 - me.run_speed;
        me.run_speed := me.run_speed + ma;
        WalkToward(following);
        me.run_speed := me.run_speed - ma;
        wait_time := 0;

    endif

endfunction



function Guard()

    wait_time := 7;

    if ( !guarding.IsA(POLCLASS_MOBILE) )
        guarding := 0;
    elseif ( Distance(me, guarding) > 15 )
        guarding := 0;
    elseif ( next_watch < ReadGameClock() )
        next_watch := ReadGameClock()+7;
        if ( RandomInt(20) == 1 )
            Say("*guardando "+guarding.name+"*");
        endif
        foreach mob in ListHostiles(guarding, 9);
            opponent := mob;
            return;
        endforeach

    endif

endfunction


function goToLoc()
    var dist :=CoordinateDistance(me.x, me.y, going_loc.x, going_loc.y);

    if (dist > 20)
        going_loc := 0;
        EraseObjProperty(me, "path");
        return;
    endif

    if( dist < 1 )
        wait_time := 1;
        going_loc := 0;
        EraseObjProperty(me, "path");
        return;
    endif
    
    var path := GetObjProperty(me, "path");
    var pathtime := GetObjProperty(me, "pathtime");
    if (!path[1] || pathtime < polcore().systime)
        var flags := FP_IGNORE_MOBILES;
        if ( cint(GetObjProperty(me, "ignoredoor")) || cint(GetObjProperty(me, "opendoor")) )
            flags := flags| FP_IGNORE_DOORS;
        endif
        
        //Say("Teste: " + going_loc.x + " " + going_loc.y + " " + going_loc.z);
        path := FindPath(me.x, me.y, me.z, going_loc.x, going_loc.y, going_loc.z, me.realm, flags, 15); //calcula o path
        SetObjProperty(me, "pathtime", polcore().systime+10);
        
    endif
    
    var nexpath := path[1];
    path.erase(1);
    SetObjProperty(me, "path", path);
    
    if( (going_loc.type == "run") || opponent )
        var ma := 200 - me.run_speed;
        me.run_speed := me.run_speed + ma;
        RunTowardLocation(nexpath.x, nexpath.y);
        me.run_speed := me.run_speed - ma;
        wait_time := 0;
    else
        var ma := 200 - me.run_speed;
        me.run_speed := me.run_speed + ma;
        WalkTowardLocation(nexpath.x, nexpath.y);
        me.run_speed := me.run_speed - ma;
        wait_time := 0;
    endif

endfunction



function Transfer(targ)

    if ( !targ.acctname )
        return;
    endif

     if ( (GetNumPets(targ) + GetPetCost(me)) > GetMaxPets(targ) ) 
        Say("*" + me.name+ " nao aceita " + targ.name + "como dono.");
        return;
    endif


    Say("*"+me.name+" aceita "+targ.name+" como novo dono*");

    SetObjProperty(me, "owner", targ.serial);
    ErasePet(me.master, me.serial);
    AddPet(targ, me.serial);

    me.SetMaster(targ);



    RestartScript(me);

endfunction





function UnTame()

    PrintTextAbovePrivate(me, "*"+me.name+" pode viver livre novamente.*", me.master);
    ErasePet(me.master, me.serial);
    me.SetMaster(0);

    var orig_script := GetObjProperty(me, "script");

    if ( !orig_script )

        PrintTextAbove(me, "*doesnt have an original script to use now that taming is done?!*");
        SysLog(me.name+" doesnt have an original script to use now that taming is done?!");
        orig_script := ":ghaia:brain";

    elseif ( orig_script["tamed"] )

        PrintTextAbove(me, "*my original script was tamed.src ?!*");
        SysLog(me.name+" my original script was tamed.src ?!");
        orig_script := ":ghaia:brain";

    endif

    me.script := orig_script;
    SetName(me, GetObjProperty(me, "name"));
    EraseObjProperty(me, "owner");
    EraseObjProperty(me, "name");
    EraseObjproperty(me, "script");
    EraseObjProperty(me, "happiness");
    EraseObjProperty(me, "spawnpoint");
    EraseObjProperty(me, "spawnpointtype");
    
    RestartScript(me);

    ErasePetMods(me);
    
    sleep(2);
    EraseObjProperty(me, "anchor");

endfunction



function AllCommand(ev_type, targ)

    var event := struct;
    event.+type := ev_type;
    event.+source := me;
    event.+targ := targ;

    foreach mobile in(ListMobilesNearLocation( me.x, me.y, me.z, 8, me.realm))

        if ( (mobile.master).serial == (me.master).serial )
            SendEvent(mobile, event);
        endif

        sleepms(2);

    endforeach

endfunction

function ProcessDoubleClick(ev)

    var targ := TargetCoordinates(ev.source);
    if (targ)
        if (targ.mobile == me)
            if ( me.graphic in pack_animals )
                if ((EnumerateItemsInContainer(me.backpack)).size() > 0)
                    SendSysMessage(ev.source, "Voce precisa esvaziar a mochila antes de remove-la.");
                    return;
                endif
                PrintText(ev.source, "*remove a mochila de "+me.name+"*");
                me.graphic := GetObjProperty(me, "beforepack");
                CreateItemInBackpack(ev.source, "backpack");
                EraseObjProperty(me, "beforepack");

            endif
        elseif (targ.mobile)
            var gump := GFCreateGump(220, 70);
            //GFGumpPic(gump, 0, 0, 0x254E);
            GFResizePic(gump, 0, 0, 0x254E, 100, 100);    
            GFTextLine(gump, 30, 15, 2100, "Guarda ");
            GFTextLine(gump, 30, 35, 2100, "Segue ");
            if (targ.mobile.serial != owner.serial)
                GFTextLine(gump, 30, 55, 2100, "Ataca ");
            endif
            GFAddButton(gump, 15, 17, 2117, 2118, 1, 10);
            GFAddButton(gump, 15, 37, 2117, 2118, 1, 20);
            if (targ.mobile.serial != owner.serial)
                GFAddButton(gump, 15, 57, 2117, 2118, 1, 30);
            endif
            var input := GFSendGump(owner, gump);
            input  := input[0];
            if (input == 10)
                guarding := targ.mobile;
            elseif (input ==  20)
                following := targ.mobile;
            elseif (input == 30)
                opponent := targ.mobile;
            endif
                
        elseif (!Cint(targ.mobile))//se nao for nem item nem mobile anda ate la
            if (!Cint(targ.item))
                following := 0;
                opponent := 0;
                fighting := 0;
                guarding := 0;
                going_loc := struct;
                going_loc.+x := targ.x;
                going_loc.+y := targ.y;
                going_loc.+z := targ.z;
                going_loc.+type := "run";
            endif
        endif
    endif

endfunction




function EnableMainEvents()

    EnableEvents(SYSEVENT_SPEECH, 10);
    EnableEvents(SYSEVENT_ENGAGED);
    EnableEvents(SYSEVENT_DAMAGED);
    EnableEvents(SYSEVENT_DOUBLECLICKED, 5);
    EnableEvents(SYSEVENT_ITEM_GIVEN, 5);

endfunction



function DisableMainEvents()

    DisableEvents(SYSEVENT_SPEECH);
    DisableEvents(SYSEVENT_ENGAGED);
    DisableEvents(SYSEVENT_DAMAGED);
    DisableEvents(SYSEVENT_ITEM_GIVEN);

endfunction



function Setup()

    SetAnchor(me.x, me.y, 20, 0);

    owner_serial := GetObjProperty(me, "owner");

    owner := SystemFindObjectBySerial(owner_serial, SYSFIND_SEARCH_OFFLINE_MOBILES);
    
    faction := GetObjProperty(me, "faccao");

    if ( !owner && !faction)
        UnTame();
    elseif ( (me.master).serial != owner )
        me.SetMaster(owner);
    endif

    var happiness := GetObjProperty(me, "happiness");
    if ( !happiness || happiness == error )
        happiness := 100;
        SetObjProperty(me, "happiness", happiness);
    endif

    if ( !me.backpack )
        var new_pack := CreateItemAtLocation(me.x, me.y, me.z, "backpack", 1);
        EquipItem(me, new_pack);
    endif

    me.facing := me.facing+1;
    TurnToward(me.master);

    //if ( !GetProcess(GetObjProperty(me, "#happypid")) )

    //    start_script(":taming:happycounter", {me, ReadGameClock()});

    //endif

    me.cmdlevel := 4;
    SetWarMode(0);

endfunction

function SpecialHab(me)

    if (owner)
        if ( me.npctemplate == ":ghaia:fadinha")
            if (isBloodied(owner))
                if (distance(me, owner) < 8)
                    if (!GetCooldown(me, "heal"))
                        CastFaerieHeal(me, owner);
                    endif
                endif
            endif
        endif
    endif

endfunction

function CastFaerieHeal(me, owner)

    PrintText(me, "*bate as asas*");
    PlaysoundEffect(me, 1137);
    PlayObjectCenteredEffect( owner, 0x373a, 7, 0x10 );

    var amt := RandomDiceRoll("1d10") + 20;
    HealDamage(owner, amt);
    SetCooldown(me, "heal", 150);

endfunction
