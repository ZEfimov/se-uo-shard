use uo;
use os;
use npc;
use cfgfile;

include ":ghaia:generic";
include ":ghaia:ghaia";
include ":ghaia:objective";

var me         := self();
var npccfgfile := NPC_GetNPCConfig(me);
var idlesnd1; 
var idlesnd2;
var areasize;
var alert_allies:= 0;
var flee_point  := 0.1;
var mystate     := INITIALIZING;
var mytemplate;
var throwinfo;
var propallies;
 
program KillPlayers()

	var ev;
	var wanders;
	propallies := dictionary;

	set_critical(1);
	//printtextabove(me, "vai inicializr");
	InitializeNPC(me);
	set_critical(0);
	//printtextabove(me, "done");
	SetWarMode( 0 );
	ev := os::wait_for_event(0);
	wanders := 0;
	EnableMainEvents();
	Set_Event_Queue_Size(50);
	while(me)
		//se tem objetivo, anda na direcao dele, se nao tem so wander
		if (GetObjProperty(me, "objloc") != error)
			wanders := 0;
			DoObjective();
		else
			MoveAround(wanders);
		endif
		
		wanders := wanders +1;
		if(wanders >= 30)
			wanders := 0;
			lookAround();
			ev := sleepmode();
		else
			ev := os::wait_for_event(10);
		endif
		
		
		if(ev)
			case(ev.type)
				SYSEVENT_ENTEREDAREA:   
					if (CheckLineOfSight(me, ev.source))
						if(CanFight(me, ev.source)) //verifica se eh inimigo
							wanders := 0;
							Fight(ev.source);
						endif
					endif
				SYSEVENT_ENGAGED:	wanders := 0; Fight(ev.source);
				SYSEVENT_DAMAGED:	wanders := 0; Fight(ev.source);
				EVID_ALERT_ALLIES:	wanders := 0; Fight(ev.opponent, 1);
				EVID_HERDING:		herd(ev);
				EVID_TAUNT:
							if(ev.source)
								wanders := 0; Fight(ev.opponent, 1);
							endif
				EVID_FLEE:
							if (ev.source)
								flee(ev.source);
							endif
				EVID_DOOBJECTIVE:
					if (ev.destiny)
						wanders := 0; NpcGoTo(ev.destiny, ev.move_type);
					endif
			endcase
		endif	

		lookAround();
		sleepms(5);
	endwhile
endprogram

function CloseDistance( opponent )
	if ( GetObjProperty(me, "noclosecombat") == 1)
		return 0;
	endif

	var sleepdelay := 275 - me.run_speed;//(CInt(GetDexterity(me)) * 1.5);

	if (sleepdelay < 0)
		sleepdelay := 0;
	endif

	case (CoordinateDistance( me.x, me.y, opponent.x, opponent.y ))
		1:              
		0:
			return 1;
		default:
			CalcPathAndMove(me, opponent, sleepdelay);
			return 0;
	endcase

endfunction

function lookAround()
  foreach npc in ListMobilesInLineOfSight(me, areasize)
    if( CanFight(me, npc) )
         Fight(npc);
    endif
    sleepms(2);
  endforeach
endfunction