use uo;
use os;
include ":attributes:attributes";
include ":gumps:requestgump";
include ":gumps:yesno";
include ":yggdrasil:boss";
include ":combat:hitscripts";
CONST GF_STDCOLOR       := 1890;
CONST GF_HDRCOLOR       := 1890;
CONST GF_SLCTDCOLOR     := 1720;

program use_spawnpoint(who, spawnpoint)
    if(who.cmdlevel < 2)
        return;
    endif
    while (who.connected)
        var active := GetObjProperty(spawnpoint, "Active");
        if (!active)
            active := 0;
        endif
        EraseObjProperty(spawnpoint, "Active");
        
        var name := GetObjProperty(spawnpoint, "Name");
        if (!name)
            name := "Spawner Name";
        endif
        var monsters := GetObjProperty(spawnpoint, "Monsters");
        var monster1_spawn := "NONE";
        var monster1_amount := "0";
        var monster1_range := "0";
        var monster1_delay := "0";
        var monster1_boss := 0;
        var monster1_activate := 0;
        var monster2_spawn := "NONE";
        var monster2_amount := "0";
        var monster2_range := "0";
        var monster2_delay := "0";
        var monster2_boss := 0;
        var monster2_activate := 0;
        var monster3_spawn := "NONE";
        var monster3_amount := "0";
        var monster3_range := "0";
        var monster3_delay := "0";
        var monster3_boss := 0;
        var monster3_activate := 0;
        
        if (!monsters)
            monsters := dictionary{
                        "monster1"->dictionary{"spawn"->monster1_spawn, "amount"->monster1_amount, "range"->monster1_range, "delay"->monster1_delay, "boss"->monster1_boss, "activate"->monster1_activate, "daycicle"->0, "type"->1},
                        "monster2"->dictionary{"spawn"->monster1_spawn, "amount"->monster1_amount, "range"->monster1_range, "delay"->monster1_delay, "boss"->monster1_boss, "activate"->monster1_activate, "daycicle"->0, "type"->2},
                        "monster3"->dictionary{"spawn"->monster1_spawn, "amount"->monster1_amount, "range"->monster1_range, "delay"->monster1_delay, "boss"->monster1_boss, "activate"->monster1_activate, "daycicle"->0, "type"->3}
                        };
        endif
        
        
        if(monsters.monster1)
            monster1_spawn   := cstr(monsters.monster1.spawn);
            monster1_amount  := cstr(monsters.monster1.amount);
            monster1_range   := cstr(monsters.monster1.range);
            monster1_delay   := cstr(monsters.monster1.delay);
            monster1_boss    := cstr(monsters.monster1.boss);
            monster1_activate:= monsters.monster1.activate;
            monsters.monster1.boss := 0;
        endif
        
        if(monsters.monster2)
            monster2_spawn   := cstr(monsters.monster2.spawn);
            monster2_amount  := cstr(monsters.monster2.amount);
            monster2_range   := cstr(monsters.monster2.range);
            monster2_delay   := cstr(monsters.monster2.delay);
            monster2_boss    := cstr(monsters.monster2.boss);
            monster2_activate:= monsters.monster2.activate;
            monsters.monster2.boss := 0;
        endif
        
        if(monsters.monster3)
            monster3_spawn   := cstr(monsters.monster3.spawn);
            monster3_amount  := cstr(monsters.monster3.amount);
            monster3_range   := cstr(monsters.monster3.range);
            monster3_delay   := cstr(monsters.monster3.delay);
            monster3_boss    := cstr(monsters.monster3.boss);
            monster3_activate:= monsters.monster3.activate;
            monsters.monster3.boss := 0;
        endif
        
        var gump := GFCreateGump(200,200);
        GFResizePic(gump, 0, 25, 5120, 500, 150);
        GFAddAlphaRegion(gump, 0, 25, 500, 150);
        
        GFResizePic(gump, 15, 35, 3000, 270, 21);
        GFTextEntry(gump, 18, 35, 200, 21, 33, name); //2
        
        GFResizePic(gump, 70, 56, 3000, 150, 21);
        GFTextEntry(gump, 73, 56, 150, 21, 0, monster1_spawn); //3
        GFResizePic(gump, 70, 77, 3000, 150, 21);
        GFTextEntry(gump, 73, 77, 150, 21, 0, monster2_spawn); //4
        GFResizePic(gump, 70, 98, 3000, 150, 21);
        GFTextEntry(gump, 73, 98, 150, 21, 0, monster3_spawn); //5
        GFTextLine(gump, 15, 56, 50, "Monstro:");
        GFTextLine(gump, 15, 77, 50, "Monstro:");
        GFTextLine(gump, 15, 98, 50, "Monstro:");
        
        GFAddButton(gump, 220, 55, 4005, 4007, 1, 20); //Spawn
        GFAddButton(gump, 220, 76, 4005, 4007, 1, 21);
        GFAddButton(gump, 220, 97, 4005, 4007, 1, 22);
        
        GFAddButton(gump, 251, 55, 4013, 4012, 1, 30); //Configure
        GFAddButton(gump, 251, 76, 4013, 4012, 1, 31); 
        GFAddButton(gump, 251, 97, 4013, 4012, 1, 32);
        
        GFTextLine(gump, 290, 35, 5, "Amount");
        GFResizePic(gump, 290, 54, 3000, 45, 21);
        GFResizePic(gump, 290, 76, 3000, 45, 21);
        GFResizePic(gump, 290, 97, 3000, 45, 21);
        GFTextEntry(gump, 293, 54, 45, 21, 0, monster1_amount); //6
        GFTextEntry(gump, 293, 76, 45, 21, 0, monster2_amount); //7
        GFTextEntry(gump, 293, 97, 45, 21, 0, monster3_amount); //8
        
        GFTextLine(gump, 340, 35, 5, "Range");
        GFResizePic(gump, 340, 54, 3000, 35, 21);
        GFResizePic(gump, 340, 76, 3000, 35, 21);
        GFResizePic(gump, 340, 97, 3000, 35, 21);
        GFTextEntry(gump, 343, 54, 35, 21, 0, monster1_range); //9
        GFTextEntry(gump, 343, 76, 35, 21, 0, monster2_range); //10
        GFTextEntry(gump, 343, 97, 35, 21, 0, monster3_range); //11
        
        GFTextLine(gump, 383, 35, 5, "Delay(Min)");
        GFResizePic(gump, 383, 54, 3000, 50, 21);
        GFResizePic(gump, 383, 76, 3000, 50, 21);
        GFResizePic(gump, 383, 97, 3000, 50, 21);
        GFTextEntry(gump, 385, 54, 50, 48, 0, monster1_delay); //12
        GFTextEntry(gump, 385, 76, 50, 48, 0, monster2_delay); //13
        GFTextEntry(gump, 385, 97, 50, 48, 0, monster3_delay); //14

        GFAddButton(gump, 90, 125, 4002, 4004, 1, 2);
        GFTextLine(gump, 125, 126, GF_STDCOLOR, "Reset");
        GFAddButton(gump, 170, 125, 4002, 4004, 1, 4);
        GFTextLine(gump, 205, 126, GF_STDCOLOR, "Help");
        GFCheckBox(gump, 20, 123, 10850, 10830, active, 96);
        GFTextLine(gump, 55, 126, GF_STDCOLOR, "On");
        
        GFTextLine(gump, 450, 35, 5, "BOSS");
        GFCheckBox(gump, 452, 55, 2360, 2361, monster1_boss, 97);
        GFAddButton(gump, 468, 55, 2362, 2362, 1, 40);
        
        GFCheckBox(gump, 452, 76, 2360, 2361, monster2_boss, 98);
        GFAddButton(gump, 468, 76, 2362, 2362, 1, 41);
        
        GFCheckBox(gump, 452, 97, 2360, 2361, monster3_boss, 99);
        GFAddButton(gump, 468, 97, 2362, 2362, 1, 42);
        
        case (monster1_activate)
            default:
            0: GFGumpPic(gump, 436, 146, 2360);
            1: GFGumpPic(gump, 436, 146, 2361);
        endcase
        
        case (monster2_activate)
            default:
            0: GFGumpPic(gump, 452, 146, 2360);
            1: GFGumpPic(gump, 452, 146, 2361);
        endcase
        
        case (monster3_activate)
            default:
            0: GFGumpPic(gump, 468, 146, 2360);
            1: GFGumpPic(gump, 468, 146, 2361);
        endcase
        
        var input := GFSendGump(who, gump);
        
        //Checa se todas as informações estão preenchidas
        var x,monster1,monster2,monster3;
        monster1 := monsters.monster1;
        monster2 := monsters.monster2;
        monster3 := monsters.monster3;
        if (!monster1)
            monster1 := dictionary;
        endif
        if (!monster2)
            monster2 := dictionary;
        endif
        if (!monster3)
            monster3 := dictionary;
        endif
        for (x:=3; x<=5; x+=1)
            var i, creature;
            var liberado := 1;
            
            case (x)
                3: creature := 1;
                4: creature := 2;
                5: creature := 3;
            endcase

            for(i:=x; i<=x+9; i+=3)
                var y, z;
                
                y := len(input[i]);
                z := input[i];
                z := z[4, (y-3)];
                
                if (i >= 3 && i <= 5) //checa se o NPC existe
                    if (z == "NONE")
                        liberado := 0;
                        break;
                    endif
                    var thecritter := CreateNpcFromTemplate(z, spawnpoint.x, spawnpoint.y, spawnpoint.z, 0, spawnpoint.realm);
                    if(!thecritter )
                        z := "NONE";
                        liberado := 0;
                    else
                        thecritter.concealed := 1;
                        SetObjProperty(thecritter, "summoned", 1);
                        ApplyRawDamage(thecritter, GetVital(thecritter, HITS)+3);
                    endif
                    
                    case(creature)
                        1: monster1.spawn := z;
                        2: monster2.spawn := z;
                        3: monster3.spawn := z;
                    endcase
        
                elseif (i >= 6 && i <= 8) //checa e grava Amount
                    z := cint(z);
                    if(z > 32)
                        z := 32;
                        
                    elseif (z <= 0 || !z)
                        z := 0;
                        liberado := 0;
                    endif
                    
                    case(creature)
                        1: monster1.amount:=z;
                        2: monster2.amount:=z;
                        3: monster3.amount:=z;
                    endcase


                elseif (i >= 9 && i <= 11) //Checa e grava range
                    z := cint(z);
                    if((z > 32))
                        z := 32;
                    elseif (z <= 0 || !z)
                        z := 0;
                        liberado := 0;
                    endif
                    case(creature)
                        1: monster1.range := z;
                        2: monster2.range := z;
                        3: monster3.range := z;
                    endcase

                elseif (i >= 12 && i <= 14) //Checa e grava Delay
                    z := cint(z);
                    if((z > 1440))
                        z := 1440;
                    elseif (z <= 0 || !z)
                        z := 0;
                        liberado := 0;
                    endif
                    
                    case(creature)
                        1: monster1.delay := z;
                        2: monster2.delay := z;
                        3: monster3.delay := z;
                    endcase

                endif
                sleepms(5);
            endfor
            
            case(creature)
                1: monster1.activate := liberado;
                2: monster2.activate := liberado;
                3: monster3.activate := liberado;
            endcase
            
        endfor

        //Checa as CheckBox
        foreach thing in (input.keys)
            if(thing == 96)
                SetObjProperty(spawnpoint, "Active", 1);
            elseif (thing == 97)
                monster1.boss := 1;
            elseif (thing == 98)
                monster2.boss := 1;
            elseif (thing == 99)
                monster3.boss := 1;
            endif
        endforeach

        //Checa os Boss
        case (input[0])
            40:
                var unique := monsters.monster1.uniquestat;
                if(!unique)
                    unique := struct;
                endif
                CreateBossStructGump(who, unique);
                monster1.uniquestat := unique;
                
            41:
                var unique := monsters.monster2.uniquestat;
                if(!unique)
                    unique := struct;
                endif
                CreateBossStructGump(who, unique);
                monster2.uniquestat := unique;
            42:
                var unique := monsters.monster3.uniquestat;
                if(!unique)
                    unique := struct;
                endif
                CreateBossStructGump(who, unique);
                monster3.uniquestat := unique;
            20: spawnMonster(who, spawnpoint, monster1);
            21: spawnMonster(who, spawnpoint, monster2);
            22: spawnMonster(who, spawnpoint, monster3);
                
            30: monster1.daycicle := Cint(spawnConfigure(who, monster1));           
            31: monster2.daycicle := Cint(spawnConfigure(who, monster2));
            32: monster3.daycicle := Cint(spawnConfigure(who, monster3));
                
        endcase
        
        //Gravas as modificações
        monsters := dictionary{"monster1"->monster1, "monster2"->monster2, "monster3"->monster3};
        SetObjProperty(spawnpoint, "Monsters", monsters);
        var y,z;
        y := len(input[2]);
        z := input[2];
        z := z[4, (y-3)];
        
        SetObjProperty(spawnpoint, "Name", z);
        SetObjProperty(spawnpoint, "ResetMe",  1);
        SendSysMessage(who, "Spawnpoint inicializado.  Resetando spawn. Isso pode demorar alguns minutos...");
        spawnpoint.invisible := 1;

        //Se foi cancelado
        if (input[0] == 1)
            break;
        elseif (input[0] == 2)
            SetObjProperty(spawnpoint, "ResetMe",  2);
            break;
        endif
    endwhile
endprogram

function spawnMonster(who, spawnpoint, monster)
    var criando := CreateNpcFromTemplate(monster.spawn, spawnpoint.x, spawnpoint.y, spawnpoint.z, 0, spawnpoint.realm);
    SetObjProperty(criando, "spawnpoint", spawnpoint.serial);
    SetObjProperty(criando, "spawnpointtype", monster.type);
    if (criando && monster.boss && monster.uniquestat)
        var spawnmod := monster.uniquestat;
        SetBoss(criando, spawnmod);
    else
        SendSysMessage(who, "Erro ao criar monstro");
    endif
endfunction

function spawnConfigure(who, byref monster)
    var daycicle, nightcicle, normal;

    case(monster.daycicle)
        0: normal := 1;
           daycicle := 0;
           nightcicle := 0;
        1: normal := 0;
           daycicle := 1;
           nightcicle := 0;
        2: normal := 0;
           daycicle := 0;
           nightcicle := 1;
    endcase

    var gump := GFCreateGump(200,200);
    GFClosable(gump, 0);
    GFResizePic(gump, 0, 25, 5120, 250, 100);
    GFAddAlphaRegion(gump, 0, 25, 250, 100);
    
    GFSetRadioGroup(gump, 1);
    GFRadioButton(gump, 25, 45, 210, 211, daycicle, 10);
    GFRadioButton(gump, 25, 70, 210, 211, nightcicle, 11);
    GFRadioButton(gump, 25, 95, 210, 211, normal, 12);
    GFTextLine(gump, 55, 43, GF_STDCOLOR, "Spawn de Dia");
    GFTextLine(gump, 55, 68, GF_STDCOLOR, "Spawn de Noite");
    GFTextLine(gump, 55, 93, GF_STDCOLOR, "Spawn Normal");
    
    GFAddButton(gump, 190, 85, 2141, 2143, 1, 100);
    
    var input := GFSendGump(who, gump);
    var result;
    foreach thing in (input.keys)
        if (thing == 10)
            result := 1;
        elseif (thing == 11)
            result := 2;
        elseif (thing == 12)
            result := 0;
        endif
    endforeach
    
    return result;
    
endfunction