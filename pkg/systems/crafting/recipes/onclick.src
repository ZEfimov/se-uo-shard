
use uo;
use os;
use cfgfile;

include ":gumps:yesno";
include ":gumps:gumps";
include ":gumps:gumps_ex";
include "include/say";
include "include/client";
include "include/arrays";
include ":crafting:recipes";
include ":gumps:requestgump";

program usaPergaminho(who, scroll)
	var input := SendGump(who, scroll);
	if (input[0] == 99)
		var recipes := ReadConfigFile(":*:recipes");
		var objtype := RequestGump(who, "Item objtype:");
		if (!FindConfigElem(recipes, objtype))
			SendSysMessageEx(who, "Receita para o objtype {} nao encontrado.".format(objtype), SSM_FAIL);
			return;
		endif

		SetObjProperty(scroll, "objtype", objtype);
		Run_Script( ":crafting:recipes/oncreate", scroll );
	elseif (input[0] == 12)
		LearnRecipe(who, scroll);
	endif
endprogram

function SendGump(who, scroll)
	var objtype := GetObjProperty(scroll, "objtype");
	if (!objtype && who.cmdlevel < 4)
		SendSysMessageEx(who, "Algo errado com a receita, chame um GM!");
		return;
	endif

	var skill_name := GetObjProperty(scroll, "pericia");
	var book_recipes := ReadConfigFile(":alchemy:recipes") + ReadConfigFile(":cooking:recipes");
	var itemdesc     := ReadConfigFile(":*:itemdesc");
	var recipe_list  := ReadConfigFile(":*:recipes");
	var item   := FindConfigElem(itemdesc, objtype);
	var recipe := FindConfigElem(recipe_list, objtype);
	if ((!item || !recipe) && who.cmdlevel < 4)
		SendSysMessageEx(who, "Algo errado com a receita, chame um GM!");
		return 0;
	endif

	var gump := GFCreateGump();
	GFSetID(gump, GUMPID_RECIPES);
	GFDisposable(gump, 0);
	GFGumpPic(gump, 4, 8, 2080);
	GFGumpPic(gump, 22, 45, 2081);
	GFGumpPic(gump, 23, 113, 2082);
	GFGumpPic(gump, 25, 174, 2083);
	GFGumpPicTiled(gump, 37, 43, 234, 11, 2091);
	GFGumpPicTiled(gump, 38, 159, 234, 11, 2091);
	GFGumpPic(gump, 47, 184, 1209);
	GFHTMLArea(gump, 35, 16, 240, 20, "<BASEFONT SIZE=5><CENTER>Receita de {}".format(skill_name));

	var item_name := recipe.name;
	if (!item_name)
		item_name := item.desc;
	endif
	GFHTMLArea(gump, 38, 60, 240, 20, "<BASEFONT SIZE=5 COLOR=#8c1a1a><CENTER>{}".format(item_name));
	var tilepic := item.graphic;
	if (!tilepic)
		tilepic := objtype;
	endif
	GFTilePic(gump, 127, 91, tilepic);

	if (!(objtype in GetObjProperty(who, "recipes")))
		if (!FindConfigElem(book_recipes, objtype))
			var charge_list    := GetObjProperty(scroll, "learning");
			var my_charges     := FindElemInArray(charge_list, struct{ "person":= who.serial });
			var remain_charges := RecipeCharges(cint(recipe.difficulty)) - cint(my_charges.charges);
			GFHTMLArea(gump, 38, 140, 240, 20, "<BASEFONT SIZE=2><CENTER>Você ainda deve ler esse pergaminho {} vezes".format(remain_charges));
			if (!GetObjProperty(scroll, "serialid") || GetObjProperty(scroll, "serialid") == who.serial)
				GFTextLine(gump, 205, 182, 995, "Aprender");
				GFAddButton(gump, 265, 186, 2224, 2224, GF_CLOSE_BTN, 12);
			endif
		else
			GFHTMLArea(gump, 38, 140, 240, 20, "<BASEFONT SIZE=2><CENTER>Para aprender, arraste para um livro.");
		endif
	else
		GFHTMLArea(gump, 38, 140, 240, 20, "<BASEFONT SIZE=2><CENTER>Você já aprendeu esta receita.");
	endif

	if (who.cmdlevel > 4)
		GFTextCrop(gump, 67, 182, 100, 17, 995, "Trocar Receita");
		GFAddButton(gump, 47, 184, 1209, 1209, GF_CLOSE_BTN, 99);
	endif

	return GFSendGump(who, gump);
endfunction
