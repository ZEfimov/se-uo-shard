use os;
use uo;
include "include/say";
include "include/client";
include ":crafting:craftGumpFLS";
program setExcep(who)
   SendSysMessageEx(who, "Selecione o objeto", SSM_REQUEST);
   var targ := Target(who);
   if (!targ) return; endif

   var special_props := GetObjProperty(targ, "craftproperty");
   if (!special_props)
      special_props := struct{
         "equips":= array{},
         "props":= dictionary{},
         "skills":= array{}
      };
   endif

   var item_types := array{"Armaduras", "Arcos", "Armas","Joias","Containers"}; 
   var skills := array{"Marcenaria", "Costura", "Ferraria"};
   
   var questions := array{};
   questions.append(struct{ "title" := "Quais craftings podem ser usadas?", "checkbox" := skills});
   questions.append(struct{ "title" := "Quais tipos de item podem ser usados?", "checkbox" := item_types} );
   questions.append(struct{ "title" := "Qual nível do recurso?", "marked" := 1, "radio" := {"0", "2", "4", "6", "8"} } );
   questions.append(struct{ "title" := "Qual prop quer adicionar?", "marked" := "custom_name:De Fogo"} );
   questions.append(struct{ "title" := "Qual prop quer adicionar?", "marked" := "hpmod:30"} );
   questions.append(struct{ "title" := "Qual prop quer adicionar?", "marked" := ""} );
   questions.append(struct{ "title" := "Qual prop quer adicionar?", "marked" := ""} );
   questions.append(struct{ "title" := "Qual prop quer adicionar?", "marked" := ""} );
   var output := QuestionsGump(who, questions);

   special_props.skills := output[1];
   special_props.equips := output[2];
   special_props.level := output[3];

   for i := 4 to 8
      sleepms(2);
      var prop := output[i];
      if (prop)
         prop := SplitWords(prop, ":");
         if (prop.size() < 2) continue; endif

         special_props.props[prop[1]] := prop[2];
      endif
   endfor

   SetObjProperty(targ, "craftproperty", special_props);
endprogram