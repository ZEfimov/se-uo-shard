
use os;

include "include/say";
include ":timedscripts:timedScripts";
include ":ghaia:ghaiaUtil";
include ":disguise:disguise";
include ":timeUtils:time";
include ":tn:tngumps";
include ":gumps:yesno";

program startTalent(param)
   var who := param[1];
   disguisefeat(who);
endprogram

function disguisefeat(who)
   var is_disguise := GetObjProperty(who, "disfarce_oldlook");
   var my_disguise := GetObjProperty(who, "my_disguise");
   var end_disguise := GetObjProperty(who, "disgued_end");

   var gump := GFCreateGump();
   GFResizePic(gump, 100, 90, 9260, 250, 200);

   GFGumpPicTiled(gump, 116,100,30,175,10460);
   GFGumpPicTiled(gump, 306,100,30,175,10460);
   // GFGumpPicTiled(gump, 80,88,463,16,10100);
   // GFGumpPicTiled(gump, 84,610,457,16,10100);
   
   var y := 120;
   if (my_disguise && !is_disguise && cint(end_disguise) <= GetTime())
      GFAddButton(gump, 172, y, 0x80E, 0x80E, GF_CLOSE_BTN, 11);
      GFHTMLArea(gump,  170, y, 115, 25, "<basefont color=#7FFFD4><center>Disfarçar", 1);
   elseif (cint(end_disguise) > GetTime())
	   GFHtmlShadowed(gump, 150, y, 160, 40, "#FFFFFF", "<center>Restam {} horas para terminar o disfarce".format(GetTimeBetween(GetTime(),end_disguise, "hours")), 4);
   endif
   
   if (is_disguise)
      GFAddButton(gump, 172, y+30, 0x80E, 0x80E, GF_CLOSE_BTN, 12);
      GFHTMLArea(gump, 170, y+30, 115, 25, "<basefont color=#7FFFD4><center>Remover Disfarce", 1);
   endif
   
   GFAddButton(gump, 172, y+60, 0x80E, 0x80E, GF_CLOSE_BTN, 13);
   GFHTMLArea(gump, 170, y+60, 115, 25, "<basefont color=#7FFFD4><center>Novo Disfarce", 1);
   
   var input := GFSendGump(who, gump);

   if (input[0] == 11)
      PrintText(who, "*aplicando disfarce*");
      sleep(2);
      PrintText(who, "*aplicando disfarce*");
      sleep(2);

      TS_StartTimer(who, "disfarce", 1);
   elseif (input[0] == 13)
      if (is_disguise)
         return SendSysMessageEx(who, "Você deve remover o disfarce antes.", SSM_INFO);
      endif
      var chardata := GetObjProperty(who, "chardata");
      var new_disguise := createDisguise(who, chardata);
      if (!new_disguise)
         SendSysMessageEx(who, "Você cancelou a montagem do disfarce", SSM_INFO);
         return 0;
      endif

      SetObjProperty(who, "my_disguise", new_disguise);
      SetObjProperty(who, "disgued_end", AddTimeTo(GetTime(), 1, "days"));

      SendSysMessageEx(who, "Você começou a montar o disfarce, ele ficará disponível em 3 dias.", SSM_INFO);
      SendSysMessageEx(who, "É possível clicar em novo disfarce para coemçar o processo novamente a qualquer momento.", SSM_INFO);
   elseif (input[0] == 12)
      PrintText(who, "*removendo disfarce*");
      sleep(2);
      PrintText(who, "*removendo disfarce*");
      sleep(2);
      TS_LowerDuration(who, "disfarce", -1);
   endif
endfunction

function createDisguise(who, chardata, aparencia := 0)
	var params := struct{
		"race"  := chardata.raca,
		"barba" := (chardata.raca != "Elfo")
	};

	aparencia := disguiseGump(who, params, aparencia);

	if ((!aparencia || aparencia.corpele == -1 || aparencia.corcabelo == -1) && !who.cmdlevel)
		SendSysMessageEx(who, "Escolha uma cor para pele e cabelos!", SSM_FAIL);
		return createDisguise(who, chardata, aparencia);
   else
      var input_list := array{};
      input_list.append(struct{ "title" := "Nome da identidade falsa? (max 20 letras)"});
      var output := QuestionsGump(who, input_list);

      var name := output[1];
      if (!name || name.length() > 20)
         SendSysMessageEx(who, "Nome inválido ou maior que 20 caracteres", SSM_FAIL);
         return 0;
      endif

      aparencia.name := name;
      aparencia.profile := " ";
      if (YesNo(who, "Deseja manter esse disfarce?"))
         return aparencia;
      endif
   endif
   return 0;
endfunction