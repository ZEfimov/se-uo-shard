use uo;
use os;
use util;

include ":attributes:attributes";
include ":gumps:gumps_ex";
include "include/shapes";
include "include/say";
include ":taming:taming";
include ":mounts:mounts";
include ":charactercreation:characters";
include ":yggdrasil:boss";
include ":yggdrasil:spawnSpot";
include ":ghaia:ghaiaUtil";
include ":quest:quest";

const START_Y      := 91;
const END_Y        := 311;
const BACKGROUND   := 0xBB8;
const FOREGROUND   := 0xDAC;
const INIT_DET_PAGE:= 10;

var index_list;
var info_cfg;
var entries_list:= dictionary;
var btn_maxId   := 2;
var new_list    := array;
var det_page    := INIT_DET_PAGE; //numero da pagina de detalhes

set_script_option(SCRIPTOPT_CAN_ACCESS_OFFLINE_MOBILES, 1);

program taming(params)
   var who := params[1];
   var hab := params[2];
   var targ := params[3];

	if ( who.hidden )
		who.hidden := 0;
	endif

	if ( targ.script[":ghaia:follower"] || targ.owner )
		SendSysMessageEx(who, "{} não pode ser adestrado.".format(targ.name), SSM_FAIL);
		return FailFeat(who, hab);
	// elseif ( (GetNumPets(who) + GetPetCost(targ)) > GetMaxPets(who) )
	// 	SendSysMessageEx(who, "Você atingiu o limite de seguidores.", SSM_FAIL);
	// 	return FailFeat(who, hab);
	elseif (!targ.isTamable() )
		SendSysMessageEx(who, "Essa criatura não aceita ser domesticada.", SSM_FAIL);
		return FailFeat(who, hab);
	endif

	var npc_cfg := NPC_GetNPCConfig(targ);

   var combat_pet := GetObjProperty(who, "combat_pet");

   TamingEffect(targ, 1);
   sleepms(200);
   if (npc_cfg.TamingCombat && !HaveFeatSecondary(who, 54))
		SendSysMessageEx(who, "Você não adestrar animais combatentes. É necessário a habilidade Treinador", SSM_FAIL);
		return FailTaming(who, targ);
	elseif (npc_cfg.TamingCombat && combat_pet && SystemFindObjectBySerial(combat_pet))
		SendSysMessageEx(who, "Você não pode adestrar outro animal combatente.", SSM_FAIL);
		return FailTaming(who, targ);
   endif

   var pet_knowledge := GetObjProperty(who, "pet_knowledge");
   if (!pet_knowledge) pet_knowledge := dictionary{}; endif

   if (cint(pet_knowledge[targ.my_template()]) < TamingDiff(targ, npc_cfg) && !who.cmdlevel)
		SendSysMessageEx(who, "Não há conhecimento suficiente para adestrar essa criatura. Mate mais delas para adquirir conhecimento.", SSM_FAIL);
		return FailTaming(who, targ);
   endif

   PrintText(who, "Venha, não vou te fazer mal", SSM_INFO);
   PerformAction(who, 0x20, 5);
   sleepms(90);
   PrintText(who, "*coloca comida no chão*");
   sleepms(200);
   PrintText(targ, "*vai até {}*".format(who.name));
   TS_StartCooldown(targ, "peacemade", 300);
   ghaiaPeaceMade(who, targ);

   var mod := GetModByFacing(who.facing);
   ghaiaObjective(targ, struct{ x := who.x+mod[1], y := who.y+mod[2], z := who.z}, 1);

   var plus := 1;
   while (Distance(targ,who) > 1 && plus <= 100)
      sleepms(200);
      plus += 1;
   endwhile

   targ.frozen := 1;
   if (Distance(targ,who) > 1)
      targ.frozen := 0;
      FailTaming(who, targ);
      return SendSysMessageEx(who, "O animal não consegui se aproximar de você. Você falhou ao domestica-lo", SSM_FAIL);
   endif

   var no_reset := 0;
   if (GetObjProperty(targ, "last_owner") == who.serial) no_reset := 1; endif

   if (AddPet(who, targ.serial, no_reset))
      removeFromSpawn(GetObjProperty(who, "spawnpoint"), who);
      TamingEffect(targ);
      targ.frozen := 0;
      PrintText(who, "*domestica {}*".format(targ.name));
      SendSysMessageEx(who, "{} agora obedece a você".format(targ.name), SSM_FAIL);
      if (npc_cfg.TamingCombat)
         SetObjProperty(who, "combat_pet", targ.serial);
      endif
      SendQuestEvent(who, "Domesticar Animal", params := struct{ template := targ.npctemplate });
      sleepms(500);
      PerformAction(targ, ANIM_FIDGET_1);
   else
      SendSysMessageEx(who, "Não foi possível domesticar a criatura.");
      FailTaming(who, targ);
   endif
endprogram

function FailTaming(who, targ)
   var d := 3;
   var area := GetMidpointCircleCoords(targ.x, targ.y, d);
   sleepms(150);
   foreach p in area
      PlayMovingEffectXYZEx( targ.x, targ.y, targ.z, p.x, p.y, targ.z+5, targ.realm, 0x1153, 0 ,0, 1163);

      sleepms(2);
   endforeach
endfunction

function TamingEffect(targ, reverse := 0)
   targ.frozen := 0;
   PlaySoundEffect(targ, cint(0x1E1));
   var d := 4;
   if (!reverse) d -= 3; endif
   var area := GetMidpointCircleCoords(targ.x, targ.y, d);
   foreach p in area
      if (!reverse)
         PlayMovingEffectXYZEx( targ.x, targ.y, targ.z+5, p.x, p.y, targ.z+5, targ.realm, 0x1153, 0 ,0, 0, 1152);
      else
         PlayMovingEffectXYZEx( p.x, p.y, targ.z+5, targ.x, targ.y, targ.z+5, targ.realm, 0x1153, 0 ,0, 0, 1152);
      endif
      sleepms(2);
   endforeach
endfunction