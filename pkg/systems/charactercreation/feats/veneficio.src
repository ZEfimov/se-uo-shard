use uo;
use os;
use util;
use cfgfile;

include "include/client";
include ":itemutils:canAccess";
include ":attributes:attributeConstants";
include ":attributes:attributes";
include ":timedscripts:timedScripts";
include ":fls_core:fls_characters";
include "include/say";

program startTalent(param)
   var who := param[1];
   // var talent_name := param[2];
   do_poisoning(who);

endprogram

function do_poisoning(who)
	EraseObjProperty(who, "IsMeditating");
	EraseObjProperty(who, "HealTimer");

	SendSysMessageEx(who, "Escolha a poção de veneno.", SSM_REQUEST);
	var the_poison := Target(who);

	if(!the_poison)
		SendSysMessageEx(who, "Cancelado.", SSM_FAIL);
		return;
	elseif(!can_access(who, the_poison))
		SendSysMessageEx(who, "Você não pode usar isto!", SSM_FAIL);
		return;
	elseif (Distance(who, the_poison) > 1)
		SendSysMessageEx(who, "Você esta muito distante!", SSM_FAIL);
		return;		
	elseif (the_poison.graphic != 0x0f09)
		SendSysMessageEx(who, "Isso não parece ser uma pocao!", SSM_FAIL);
		return;
	endif

	SendSysMessageEx(who, "Escolha o objeto que você deseja aplicar o veneno.", SSM_REQUEST);
	var the_item := Target(who, TGTOPT_CHECK_LOS);
	if(!the_item)
		SendSysMessageEx(who, "Cancelado.", SSM_FAIL);
		return;
	elseif(!can_access(who, the_item))
		SendSysMessageEx(who, "Você não pode usar isto!", SSM_FAIL);
		return;
	elseif (Distance(who, the_poison) > 1)
		SendSysMessageEx(who, "Você esta muito distante!", SSM_FAIL);
		return;		
	endif

	//pega info sobre a poçao
	var acfgfile := ReadConfigFile(":*:itemdesc");
	var theitem := acfgfile[the_item.objtype];
	var level, difficulty, poisonType;
	level := Cint(GetObjProperty(the_poison, "level"));
	if (!level)
		level := RandomDiceRoll("1d2");
	endif
	//se for uma poçao que não a default a formula eh essa:
	case(the_poison.objtype)
		0xbf00: level := 1; difficulty := 10;  poisonType := "defaultPoison";
    	// 0xbf01: poisonType :="strPoison"; difficulty := 14; 
		// 0xbf07: poisonType :="dexPoison"; difficulty := 14; 
		// 0xbf06: poisonType :="intPoison"; difficulty := 14; 
		0xbf02: poisonType:="staminaPoison"; difficulty := 14; 
		0xbf03: poisonType:="paralyzePoison"; difficulty := 16;
		0xef54: poisonType :="manaPoison"; difficulty := 13;
		0xbf04: level := 3; difficulty := 16;  poisonType := "defaultPoison";
		0xdc04: level := 2; difficulty := 13;  poisonType := "defaultPoison";
		0xbf05: level := 4; difficulty := 16;  poisonType := "defaultPoison";
      default:
         SendSysMessageEx(who, "Isso não parece um veneno.", SSM_FAIL);
         return 0;
	endcase

	var canBePoisoned := 0;
	var isFood := 0;
	if (the_item.objtype IN {0x0df0,0x13f9,0x0e8a,0x0f5c,0x1406,0x1438,0x143a,0x143c,0x13e4,0x13b3,0x13e3,0x27a6,0x26C6}) // Staffs e Maces
		SendSysMessageEx(who, "Você não pode envenenar armas impactantes.", SSM_FAIL);
		return 0;
	elseif(theitem.isBow())
		SendSysMessageEx(who, "Você não pode envenenar arcos ou bestas.", SSM_FAIL);
		return 0;
	elseif (the_item.IsA(POLCLASS_WEAPON))
		canBePoisoned := 1;
	elseif( the_item.graphic == 0x1bfb || the_item.graphic == 0xf3f  )
		if(the_item.amount > 10)
			SendSysMessageEx(who, "Você só pode envenenar 10 flechas de uma vez.", SSM_FAIL);
			return 0;
		endif
		canBePoisoned := 1;
	else
		var cookingcfg := ReadConfigFile(":food:itemdesc");
		var foodelem := FindConfigElem(cookingcfg, the_item.objtype);
		if (foodelem == error)
			canBePoisoned := 0;
		else
			canBePoisoned := 1;
			isFood := 1;
		endif
	endif
	if (!canBePoisoned)
		SendSysMessageEx(who, "Isto não pode ser envenenado.", SSM_FAIL);
		return;
	endif

	if (poisonType == "invalid")
		SendSysMessageEx(who, "Você aplicou o liquido mas ele não parece com veneno.", SSM_FAIL);
		return;
	endif

   difficulty += level;
   var roll := rollAttrDice(who, DEXTERITY);
	if(roll >= difficulty || who.cmdlevel > 1)
		//if (GetObjProperty(who, "classe") == "ladino")
		//	SkillCheck(who, BEGGING, -1);
		//endif
      ExpGain(who, difficulty, roll);
		PlaySoundEffect(who, 0x248);
		SendSysMessageEx(who, "Você aplicou o veneno com sucesso.", SSM_INFO);
		var poisonInfo := struct;
		poisonInfo.+name   := poisonType;
		poisonInfo.+level  := level;
		poisonInfo.+dosage := 20;
		poisonInfo.+acc    := who.acctname;
		poisonInfo.+time   := 40 + level*10;
		poisonInfo.+difficulty := roll-2;
		// if (HaveFeat(who, "Maximizar Veneno"))
		// 	poisonInfo.dosage := CInt(poisonInfo.dosage * 1.5);
		// 	poisonInfo.time := CInt(poisonInfo.time * 1.2);
		// endif
		if ( the_item.graphic == 0x1bfb || the_item.graphic == 0xf3f  )
			poisonInfo.dosage := 100;
			poisonInfo.time := CInt(poisonInfo.dosage * 0.5);
		endif
		SetObjProperty(the_item, "poisonInfo", poisonInfo);
		if (the_item.isA(POLCLASS_WEAPON))
			the_item.hp := the_item.hp - 10;
		endif
	else
		SendSysMessageEx(who, "Você falhou e envenenou a si mesmo!", SSM_FAIL);
		TS_StartTimer(who, poisonType, 60, level, who);
	endif

	if ( GetObjProperty(the_poison, "doses") == error )
		SetObjProperty(the_poison, "doses", 2);
		SendSysMessageEx(who, "Ainda tem veneno para 2 doses.", SSM_INFO);
	else
		var doses := cint(GetObjProperty(the_poison, "doses"));
		doses := doses - 1;
		if (doses > 0) 
			SetObjProperty(the_poison, "doses", doses);
			SendSysMEssageEx(who, "Ainda tem veneno para "+ doses + "doses.", SSM_INFO);
		else
			SendSysMEssageEx(who, "Você usou todas as doses do veneno.", SSM_INFO);
			SubtractAmount(the_poison, 1);
			EraseObjProperty(the_poison, "doses");
			CreateItemInBackpack(who, 0xf0e, 1);
		endif
	endif

endfunction
