use uo;
use os;
use cfgfile;

include "include/client";
include "include/sounds";
include "include/shapes";
include "include/utils";
include "include/say";
include "include/damage";
include ":attributes:attributes";
include ":timedscripts:timedScripts";
include ":magery:basicMagery";
include ":combat:combat";

program animateSword(params)
	var who := params[1];
	var spellinfo := params[2];
	// var targ := params[3];
	params := 0; // No longer needed

   PlaySoundEffect(who, 0x2F4);
   var coords := GetConeCoordsInFront(who.x, who.y, who.facing, 3);
   var mobs := array{};
   foreach c in coords
      PlayStationaryEffect( c[1], c[2], who.z+2, 0x91F, 1, 15, 0, who.realm );
      mobs += ListMobilesNearLocationEx( c[1], c[2], LIST_IGNORE_Z, 0, LISTEX_FLAG_NORMAL|LISTEX_FLAG_HIDDEN);
      sleepms(2);
   endforeach
   sleepms(100);

   var dmg_dice := spellinfo.PowerMod[1];
   foreach mob in mobs
      PushMobile(who, 5 - Distance(who, mob), 1, mob);
      if (CheckBlockDodge(mob, 0, 1))
         DamageFLS(mob, dmg_dice/2, DMG_BLUDGE, who);
      else
         DamageFLS(mob, dmg_dice, DMG_BLUDGE, who);
      endif
      sleepms(2);
   endforeach
   
   // var mobs := ListMobilesNearLocationEx( targ.x, targ.y, targ.z, 5, LISTEX_FLAG_NORMAL);
   // mobs.reverse();

   // var sum := 0;
   // foreach mobile in mobs
   //    if (_mobile_iter >= 3+sum)
   //       break;
   //    elseif (mobile in who.party.)
   //    endif

   //    var dmg_dice := MageDiceTable("B", spellinfo.powered);
   //    if (rollResistDice(mobile, CONSTITUTION) > spellinfo.dice_roll+2)
   //       SendSystemReport(mobile, "*resistiu*", SSM_FAIL, who);
   //       SendSystemReport(mobile, "*resistiu*", SSM_INFO);
   //       DamageFLS(mobile, RandomDiceRoll(dmg_dice)/2, DMG_ENERGY, who);
   //    else
   //       DamageFLS(mobile, RandomDiceRoll(dmg_dice), DMG_ENERGY, who);
   //    endif
   //    PlayLightningBoltEffect(mobile);
   //    sleepms(2);
   // endforeach

	return 1;
endprogram


//  sound