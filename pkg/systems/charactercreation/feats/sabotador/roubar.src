/* $Id: stealing.src 1053 2007-04-27 22:00:25Z tekproxy $
 *
 *
 * http://uo.stratics.com/content/skills/stealing.shtml
 *
 */

use uo;
use os;

include ":attributes:attributes";
include "include/facings";
include "include/say";
include ":ghaia:ghaia";

program skill_Stealing(mobile)
	if ( GetProcess(CInt(GetObjProperty(mobile, "#PickPid"))) )
		SendSysMessageEx(mobile, "Você ja esta roubando alguem.", SSM_FAIL);
		return;
	elseif ( CInt(GetObjProperty(mobile, "#StealWait")) > ReadGameClock() && !mobile.cmdlevel )
		SendSysMessageEx(mobile, "Você deve aguardar um pouco para usar essa pericia novamente.", SSM_INFO);
		return 0;
	elseif (!maolivre(mobile, 1))
		return 0;
	endif

	SetObjProperty(mobile, "#PickPid", GetPid());
	SetObjProperty(mobile, "#StealWait", ReadGameClock()+15);
	
	SendSysMessageEx(mobile, "Selecione que pessoa ou container você deseja roubar.", SSM_REQUEST);
	var targ := Target(mobile);
	
	var npc_category := lower(getnpccategory( targ.my_template() ));
	if (targ == mobile)
		SendSysMessageEx(mobile, "Espertao você hein..?", SSM_FAIL);
		return 0;
	elseif ( targ.connected == 0 )
		SendSysMessageEx(mobile, "Você não pode roubar jogadores desconectados.", SSM_FAIL);
		return 0;
   elseif (targ.isA(POLCLASS_CONTAINER))
		SendSysMessageEx(mobile, "Não pode roubar containers ainda..", SSM_FAIL);
		return 0;
	elseif (!targ.IsA(POLCLASS_MOBILE) && !targ.IsA(POLCLASS_ITEM))
		SendSysMessageEx(mobile, "Você so pode roubar jogadores ou itens.", SSM_FAIL);
		return 0;
	elseif (targ.npctemplate["merchants"])
		SendSysMessageEx(mobile, "Você não pode roubar este tipo de NPC.", SSM_FAIL);
		return 0;
	elseif (npc_category in array{"beast", "animal"})
		SendSysMessageEx(mobile, "Você não pode roubar este tipo de NPC.", SSM_FAIL);
		return 0;
	elseif ( Distance(mobile, targ) > 2 )
		SendSysMessageEx(mobile, "O alvo esta muito longe.", SSM_FAIL);
		return 0;
	elseif ( !IsBehind(targ, mobile.x, mobile.y) && targ.IsA(POLCLASS_MOBILE) )
		SendSysMessageEx(mobile, "Você precisa estar atrás do alvo que deseja roubar.", SSM_FAIL);
		return 0;
	endif

	var advantage := (getglobalproperty("dia") == "noite")*-1;
   if (HaveLightNear(targ))
      advantage += 1;
   endif

	var user_skill := AP_GetStat(mobile, DEXTERITY, RETURN_BONUS) + GetSkillBonus(mobile, FURTO);
	var diff := 2;
   if (targ.isA(POLCLASS_MOBILE))
      diff += rollAttrDice(targ, WISDOM, advantage) + GetSkillBonus(targ, PERCEPCAO);
   elseif (targ.isA(POLCLASS_ITEM))
      var check_targ := targ;
      while (check_targ.container)
         check_targ := check_targ.container;
         sleepms(2);
      endwhile
      var mobiles := ListMobilesNearLocationEx(check_targ.x, check_targ.y, check_targ.z, 6, LISTEX_FLAG_NORMAL|LISTEX_FLAG_HIDDEN|LISTEX_FLAG_PLAYERS_ONLY);
      diff := PickPocketDiff(targ, mobile, user_skill) + ((mobiles.size() -1) * 2);
   endif
	// foreach people in ListMobilesNearLocationEx( mobile.x, mobile.y, mobile.z, 5, LISTEX_FLAG_HIDDEN, mobile.realm )
	// 	if (!people.npctemplate && HaveFeat(people, "Vigilante"))
	// 		diff += 5;
	// 	endif
	// 	if (!people.npctemplate && HaveFeat(people, "Mestre da Vigília"))
	// 		diff += 5;
	// 	endif
	// endforeach
	var check := rollAttrDice(mobile, DEXTERITY, 0, struct{ "get_critical" := 1, "failure" := 3}) + GetSkillBonus(mobile, FURTO);
	if ( check.dice <= diff )
      SendSysMessageEx(mobile, "Você percebe que não se disfarçou bem e recua para não chamar atenção.", SSM_FAIL);
      if (targ.isA(POLCLASS_MOBILE))
         SendSystemReport(mobile, "O alvo parece ter percebido algo.", SSM_FAIL);
         SendSystemReport(targ, "Você sentiu algo na sua bolsa.", SSM_INFO, targ);
      else
         
      endif

		if (check.critical == -1) // Falha Crítica
			CriticalFailure(mobile, targ);
		endif
		return;
	endif

	SendSystemReport(mobile, "*Success*", mobile, SSM_INFO);
	//SendSysMessageEx(mobile, "Você conseguiu abrir a mochila de "+targ.name+".", SSM_INFO);
   if (targ.isA(POLCLASS_MOBILE))
	   SendOpenSpecialContainer(mobile, targ.backpack);
   else
      SendSysMessageEx(mobile, "Você roubou o item.", SSM_INFO);
      MoveItemToContainer(targ, mobile.backpack);
      if (ListMobilesNearLocationEx(mobile.x, mobile.y, mobile.z, 3, LISTEX_FLAG_NORMAL|LISTEX_FLAG_HIDDEN|LISTEX_FLAG_PLAYERS_ONLY).size() > 1)
         mobile.SetAchievement("pickpocket", 1);
      endif
      return;
   endif
	SendSysMessageEx(mobile, "Se desejar parar de roubar, pressione Esc no momento da escolha do item.", SSM_INFO);

	while (1)
		SendSysMessageEx(mobile, "Escolha um item para roubar.", SSM_REQUEST);
		var steal := Target(mobile);
		if (!steal)
			SendSysMessageEx(mobile, "Você parou de roubar.", SSM_INFO);
			break;
		elseif ( Distance(mobile, targ) > 2 && targ.isA(POLCLASS_MOBILE) )
			SendSysMessageEx(mobile, "O alvo se afastou demais.", SSM_FAIL);
			break;
		elseif ( targ.isA(POLCLASS_MOBILE) && !IsBehind(targ, mobile.x, mobile.y) )
			SendSysMessageEx(mobile, "O alvo não esta mais de costas para você.", SSM_FAIL);
			break;
      elseif (targ.isA(POLCLASS_ITEM) && !(targ in ListItemsNearLocation(mobile.x, mobile.y, mobile.z, 1)))
			SendSysMessageEx(mobile, "O Item não está mais próximo de você.", SSM_FAIL);
			break;
		elseif (steal == targ)
			SendSysMessageEx(mobile, "Alvo invalido.", SSM_FAIL);
			continue;
		elseif ( GetObjProperty(steal, "stealed") )
			SendSysMessageEx(mobile, "Este objeto ja foi roubado!", SSM_FAIL);
			continue;
		endif

		var aux := steal;
		while (aux.container)
			aux := aux.container;
		endwhile

		if (aux != targ)
			SendSysMessageEx(mobile, "Você so pode roubar da bolsa que abriu.", SSM_FAIL);
			continue;
		elseif (steal.IsA(POLCLASS_CONTAINER) && steal.objtype != 0x1011 && steal.objtype != 0x6100)
			if (steal.locked)
				SendSysMessageEx(mobile, steal.desc+" esta trancado.", SSM_FAIL);
			else
				SendViewContainer(mobile, steal);
				SendSysMessageEx(mobile, "Você abriu "+steal.desc+".", SSM_INFO);
			endif
			continue;
		endif

      var diff := PickPocketDiff(steal, mobile, user_skill);

		var dice_roll := rollAttrDice(mobile, DEXTERITY, advantage, struct{ "get_critical" := 1, "failure" := 3});
		check := dice_roll.dice + GetSkillBonus(mobile, FURTO);
		if ( check >= diff )
			var copyitem := CreateItemCopyAtLocation(0, 0, 0, steal, mobile.realm);
			MoveItemToContainer(copyitem, mobile.backpack);
			
			if (steal.isBook())
				var bookinfo := steal.extractInfo();
				copyitem.setAuthor(bookinfo.Author );
				copyitem.setTitle(bookinfo.Title);
				copyitem.SetContents(bookinfo.Contents);
				if (steal.readonly == 1)
					copyitem.ReadOnly(1);
				else
					copyitem.ReadOnly(0);
				endif
			endif
			
			
			steal.usescript := ":pickpocketing:stealed";
			steal.equipscript := ":pickpocketing:stealed";
			SetObjProperty(steal, "stealed", mobile.serial);
			
			SendSysMessageEx(mobile, "Você roubou "+steal.desc+".", SSM_INFO);
			ExpGain(mobile, diff, check);
			mobile.SetAchievement("pickpocket", 1);
		else
			SendSysMessageEx(mobile, "Você não conseguiu roubar "+steal.desc+".", SSM_FAIL);
			if ( dice_roll.critical == -1 )
				CriticalFailure(mobile, targ);
			endif
			break;
		endif
	endwhile

	mobile.facing := mobile.facing; // Pra fechar o container! ;D
   if (targ.isA(POLCLASS_CONTAINER))
      UpdateItem(targ);
   endif
endprogram

function CriticalFailure(mobile, targ)
	if (mobile.hidden)
		mobile.hidden := 0;
	endif
	SendSysMessageEx(mobile, "Você chamou muita atencao!", SSM_FAIL);

	var range := 22 - (Ap_GetStat(mobile, DEXTERITY, RETURN_BONUS) + GetSkillBonus(mobile, FURTO));

	foreach player in ( ListMobilesInLineOfSight(targ, range) )
		if ( player.npctemplate );
		elseif ( player == mobile );
		elseif ( player == targ );
		elseif ( !IsBehind(player, targ.x, targ.y) )
         var name := targ.name;
         if (!targ.isA(POLCLASS_MOBILE))
            name := targ.desc;
         endif
			SendSystemReport(player, "*Nota "+mobile.name+" tentando roubar "+name+"*", SSM_INFO);
		endif
		SleepMS(2);
	endforeach

	return 1;
endfunction

function PickPocketDiff(steal, mobile, user_skill)
   var diff := 0;
   if (steal.objtype IN {0xeed, 0xba64, 0xba65}) // moeda
      diff := 10 + CInt(steal.amount * 0.3);
      // if (HaveFeat(mobile, "Ladrao de Bolsas"))
      // 	diff := cint(diff * 0.5);
      // endif
   elseif (steal.objtype IN {0x1085, 0x1086, 0x1087, 0x1088, 0x1089, 0x108a, 0x2b6e, 0x2b6f, 0x2b70}) // joias
      diff := CInt(steal.weight*2);
      // if (HaveFeat(mobile, "Ladrao de Bolsas"))
      // 	diff := cint(diff * 0.5);
      // endif
   elseif (steal.objtype IN {0x1011, 0x100E, 0x100F, 0x1010, 0x1012, 0x1013}) // chaves
      diff := 23;
   elseif (steal.objtype == 0x6100) // grimório
      diff := 25;
   elseif (steal.objtype == 0xef1f) // grimório
      diff := 17;
   else
      diff := 10 + CInt(steal.weight/2);
   endif
   
   if (diff > (20 + user_skill))
      SendSysMessageEx(mobile, "Você não tentará roubar isso, pois tem certeza que falhará.", SSM_INFO);
      return 99;
   endif

   return diff;
endfunction