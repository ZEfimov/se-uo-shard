use uo;
use vitals;
use math;

include ":attributes:attributes";
include ":timedScripts:timedScripts";
include "include/facings";
include "include/say";
include "include/client";

var item_cfg	:= ReadConfigFile(":*:itemdesc");

program habilidade(who, text)

//	if (who.cmdlevel < 3)
//		return;
//	endif

	if (who.dead)
		return 1;
	endif

	if (!temHabilidade(who, text) && (who.cmdlevel < 2))
		SendSysMessageEx(who, "Você não possui esta habilidade.", SSM_FAIL);
		return 0;
	endif
		
	ProccessHab(who, text);

endprogram
		

function ProccessHab(who, hab)
	hab := lower(hab);
	var habcfg := ReadConfigFile(":charactercreation:config/habilidades");
	var habelem := FindConfigElem(habcfg, hab);

	if (!habelem)
		SendSysMessageEx(who, "Habilidade não encontrada.", SSM_FAIL);
		return;
	endif

	var uso := GetConfigString(habelem, "uso");

	if (uso != "Ativa")
		SendSysMEssageEx(who, "Esta habilidade não pode ser ativada.");
		return;
	endif
	var stammod := 1;
	var DamageType := GetConfigString(habelem, "DamageType");
	if (DamageType)
		DamageType := lower(DamageType);
		var skill := lower(GetConfigString(habelem, "skill"));
		var weapon := who.weapon;
		var elem := FindConfigElem(item_cfg, weapon.objtype);
		if (DamageType == "ranged" && lower(weapon.attribute) == lower(skill))
		elseif (DamageType == "melee1h" && lower(weapon.attribute) == lower(skill))
		elseif (DamageType == "melee2h" && lower(weapon.attribute) == lower(skill))
		elseif (DamageType == "parry" && who.shield)
		elseif (lower(weapon.attribute) != skill || DamageType != lower(elem.DamageType)) 
			SendSysMessageEx(who, "Você não pode usar esta habilidade com esta arma.", SSM_FAIL);
			return;
		endif
		
		if ((lower(weapon.attribute) == "meleecombat2h" && TemHabilidade(who, "Instancia do Campeao"))
			|| (lower(weapon.attribute) == "meleecombat1h" && TemHabilidade(who, "Instancia de Combate")))
			stammod := 2;
		endif
	endif
	
//	sendsysmessage(who, " " + TS_GetCooldown(who, hab) );
	if ( TS_GetCooldown(who, hab) != error && who.cmdlevel < 3)
		PrintTextPrivate(who, "'Habilidade em Cooldown!'", who, SSM_FAIL);
		return 1;
	endif
	
	var stam := cint(GetConfigInt(habelem, "stam") / stammod);
	if (stam != error)
		if (!AP_ConsumeVital(who, STAMINA, stam))
			PrintTextPrivate(who, "'Stamina Insuficiente!'", who, SSM_FAIL);
			return 1;
		endif
	endif

	var mana := cint(GetConfigInt(habelem, "mana"));
	if (mana != error)
		if (!AP_ConsumeVital(who, MANA, mana))
			PrintTextPrivate(who, "'Mana Insuficiente!'", who, SSM_FAIL);
			return 1;
		endif
	endif

    var script := GetConfigString(habelem, "script");
	var duracao := GetConfigString(habelem, "duracao");
	var delay := Cint(GetConfigInt(habelem, "delay"));

	var mimic := 0;
	if (GetObjProperty(who, "#mimico"))
		mimic := SystemFindObjectBySerial(GetObjProperty(who, "#mimico"));
		if (mimic && (Distance(mimic, who) < 12))
			PrintText(mimic, "*cópia a habilidade " + hab);
		endif
		EraseObjProperty(who, "#mimico");
	endif
	
	foreach people in ListMobilesNearLocationEx( who.x, who.y, who.z, 5, LISTEX_FLAG_HIDDEN, who.realm )
		if (!people.npctemplate && TemHabilidade(people, "Observar Movimentos"))
			PrintTextPrivate(who, "*Habilidade Ativada*", people, SSM_HELPFUL);
		endif
      sleepms(2);
	endforeach

	if (duracao == "1 ataque")
		if (!script)
			SendSysMessageEx(who, "Não foi encontrado o script da habilidade: " + hab, SSM_FAIL);
			return;
		endif
		SendSysMessageEx(who, "Se você acertar o proximo ataque, vai executar o movimento: " + hab, SSM_INFO);
		SetObjProperty(who, "movement",  script);
		SetObjProperty(who, "#movtime", ReadGameClock());
		if (mimic)
			SendSysMessageEx(mimic, "Se você acertar o proximo ataque, vai executar o movimento: " + hab, SSM_INFO);
			SetObjProperty(mimic, "movement",  script);
			SetObjProperty(mimic, "#movtime", ReadGameClock());
		endif
	else
		var e := start_script(script, who );
		if (mimic)
			start_script(script, mimic );
		endif
		//sendsysmessage(who, " " + e );
	endif
	
	TS_StartCooldown(who, hab, delay);

endfunction
