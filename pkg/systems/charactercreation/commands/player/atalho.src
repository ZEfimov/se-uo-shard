use uo;
use vitals;
use math;

include ":attributes:attributes";
include ":timedscripts:timedScripts";
include ":charactercreation:feats";
include "include/say";
include "include/facings";


program useHotBar(who, text)
   var hab_id;
   if (typeof(who) == "Array")
      hab_id := who[3];
      text := who[2];
      who := who[1];
   endif

   if (hab_id)
      var hab := getFeatById(hab_id);
      if (hab)
         TriggerHabilitie(who, hab);
      endif
   endif

   var spos := cint(text);
   if (!spos) 
      return SendSysMessageEx(who, "Você precisa entrar com o número da barra de atalho. Ex: .atalho 1", SSM_FAIL); 
   elseif (who.frozen || who.squelched || who.paralyzed) 
      EraseObjProperty(who, "#Casting");
      return SendSysMessageEx(who, "Você não pode usar uma habilidade enquanto está paralizado, congelado ou silenciado.", SSM_FAIL);
   elseif (GetObjProperty(who, "#Casting")) 
      return SendSysMessageEx(who, "Você não pode usar uma habilidade agora.", SSM_FAIL);
   elseif (TS_GetCooldown(who, "hab_block"))
      return SendSysMessageEx(who, "Suas habilidades foram bloqueadas devido a algum efeito sobre seu personagem.", SSM_FAIL);
   endif

   var hotbar := GetObjProperty(who, "hotbar");
   if (!hotbar) hotbar := struct{ shortcuts := array{} }; endif

   var shortcut := hotbar.shortcuts[spos];
   if (!shortcut)
      return SendSysMessageEx(who, "Não há nenhuma habilidade configurada para este atalho '{}'.".format(spos), SSM_FAIL);
   endif

   if (shortcut.item)
      return TriggerItem(who, shortcut);
   elseif (shortcut.script)
      return start_script(shortcut.script, who);
   endif

   var hab := getFeatById(shortcut.id);
   if (hab)
      TriggerHabilitie(who, hab);
   endif
endprogram

function TriggerItem(who, shortcut)
   var item;
   var equiped := listequippeditems(who);
   foreach obj in equiped
      if (obj.objtype == shortcut.objtype)
         item := obj;
      endif
      sleepms(2);
   endforeach
   
   if (!item)
      item := FindObjtypeInContainer(who.backpack, shortcut.objtype);
   endif
   
   if (!item)
      return SendSysMessageEx(who, "Item não encontrado na sua mochila", SSM_FAIL);
   endif

   UseItem(item, who);
endfunction