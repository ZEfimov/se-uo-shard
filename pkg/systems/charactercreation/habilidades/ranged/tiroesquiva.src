
use uo;

include ":fls_core:packets";
include ":combat:combat";
include ":blood:blood";
include "include/damage";
include ":timedScripts:timedScripts";
include ":charactercreation:habilidades";

program doubleattack(params)
	var attacker	:= params[1];
	var defender	:= params[2];
	var weapon	:= params[3];
	var armor	:= params[4];
	var basedamage	:= params[5];
	var rawdamage	:= params[6];
	params := 0; // Not needed anymore.
	
	if (lower(attacker.weapon.attribute) != "rangedcombat")
		return;
	endif
	
	PlayAttackAnimation(attacker);
	PlayHitSounds(attacker, defender);
	
	var bonus := cdbl(0.4+(Ap_GetSkill(attacker, TACTICS) / 50));
	debugMSG(attacker, "bonus: " + bonus);
	
	var dmgList := dictionary;
	dmgList := getNewDamageList(attacker);
	var total := cint(CalculateTotalDamage(defender, basedamage, attacker, dmgList));
	debugMSG(attacker, "total: " + total+(total*bonus));
	DamageFLS(defender, cint(total+(total*bonus)), DMG_FORCED, attacker);
	
	PrintTextAbove(attacker, "*salta para tras*");
	if (TemHabilidade(attacker, "Salto Alto 2"))
		PushBack(attacker, 4, 200);
	elseif (TemHabilidade(attacker, "Salto Alto"))
		PushBack(attacker, 3, 200);
	else
		PushBack(attacker, 2, 200);
	endif
	
endprogram  

function PushBack(who, dist, delay)

	var x := 0;
	var y := 0;

	if (who.facing == 0)
		y :=  1;
	elseif (who.facing == 1)
		y :=  1;
		x := - 1;
	elseif (who.facing == 2)
		x :=  - 1;
	elseif (who.facing == 3)
		x :=  - 1;
		y :=  - 1;
	elseif (who.facing == 4)
		y :=  - 1;
	elseif (who.facing == 5)
		x :=   1;
		y :=  - 1;
	elseif (who.facing == 6)
		x :=   1;
	elseif (who.facing == 7)
		x :=  1;
		y :=  1;
	endif

	var i := 0;
	for( i := 1; i <= dist; i := i + 1)
		var finalx := (who.x + x);
		var finaly := (who.y + y);
		if (!CheckLosAt(who, finalx, finaly, who.z))
			break;
		endif
		var err := MoveObjectToLocation( who, finalx, finaly, who.z, who.realm );
		sleepms(delay);
		if (!err)
		//	PrintText(who, "*bate no obstaculo*");
			break;
		endif
	endfor

endfunction