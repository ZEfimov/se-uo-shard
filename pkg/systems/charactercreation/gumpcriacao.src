use cfgfile;
use uo;
use os;

include ":email:email";
include ":gumps:gumps";
include ":gumps:gumps_ex";
include ":gumps:include/requestgump";
include ":attributes:attributes";
include "include/client";
include "include/arrays";
include "include/utils";
include ":disguise:disguise";
include ":gumps:yesno";
include ":fls_core:fls_characters";
include ":datafile:datafile";
include ":timeUtils:time";
include ":sysbook:flsbooks";
include ":charactercreation:chargumps";

//cores: 1153 -> 2103 -> 2105
program createchar(who)
   Set_Script_Option(SCRIPTOPT_NO_RUNAWAY, 1);
	sleepms(600);
	CloseGump(who, GUMPID_SKILLLIST);
	CloseGump(who, GUMPID_EMAIL_INDEX);

   var account := FindAccount(who.acctname);

	AP_SetVital(who, "Hunger", 0);
	var chardata := struct;

   // if (!GetObjProperty(who, "criandochar") && who.cmdlevel < 1)
   //    SendSysMessageEx(who, "Delete seu personagem antes de criar de novo.", SSM_FAIL);
   //    who.frozen := 1;
   //    return 1;
   // elseif (GetObjProperty(who, "delete") == 1)
   //    SendSysMessageEx(who, "Você não pode ter mais de um personagem por conta.", SSM_FAIL);
   //    who.frozen := 1;
   //    return 1;
   // endif

   if (!who.backpack)
      var mochila := CreateItemAtLocation(who.x, who.y, who.z, 0x9b2, 1, who.realm);
      EquipItem(who, mochila);
   endif

   chardata := struct{}; 
   if (who.cmdlevel < 2) //destroi todos os itens equipados e na bag
      var equiped := listequippeditems(who);
      foreach item in equiped
         if (item != who.backpack && item.layer != LAYER_HAIR && item.layer != LAYER_BEARD)
            DestroyItem(item);
         endif
      endforeach
   else
      chardata := GetObjProperty(who, "chardata");
      chardata.recriando := 1;
      chardata.exppoints := 0;
   endif

	//Gumps
	StartCharacterCreation(who, chardata);

	chardata.hits  := 500;
	chardata.mana := 100;
	chardata.stam := 60;

   chardata.points := 0;
   chardata.vitalpoints := 0;

   if (chardata.raca == "Humano")
      chardata.lifetime := AddTimeTo(POLCore().systime, 34, "weeks");
   else
      chardata.lifetime := AddTimeTo(POLCore().systime, 42, "weeks");
   endif

	SetObjProperty(who, "chardata", chardata);

	who.race := RACE_HUMAN;
	who.name := chardata.nome;
	RecalcVitals(who);

	/*=====  End of Section comment block  ======*/

	//Mudar Aparência
   if (!chardata.recriando)
	   // LookGump(who, chardata);
   endif

	// SetProfessions(who, chardata);

   if (who.Caracteristica("Clérigo de Anar"))
      // SysBook_CreateBook(who.backpack, "clerigo1");
      var rec := CreateItemInBackpack(who, 0x6116);
      SysBook_CreateBook(who.backpack, "magia1");
   endif

	AP_RefreshVitals(who);
	AP_SetVital(who, "Hunger", 0);
	EraseObjProperty(who, "criandochar");
	EraseObjProperty(who, "recriando");

   if (!chardata.recriando && !chardata.heir)
      CreateItemInBackpack(who, 0xeed, 8); //dinheiro
	   start_script( ":email:emailMessage/sendSystemMail", array{ who, "Bem-vindo ao SE!", "Seja bem vindo ao Sussurros Eternos Shard. Este é o sistema de conversação por E-Mail. Sempre que o servidor quiser te comunicar algum aviso importante, você será notificado desta forma. Game Masters também podem utilizar deste sistema para te deixar mensagens ou iniciar uma conversação. [P] Você pode acessar esse menu através do comando '.email' ou dando duplo-clique na estrela no topo de seu paperdoll. [P] [P] Para alterar sua senha digite .senha senhanatiga senhanova [P] [P] Bom Jogo!"} );
      start_script(":charactercreation:hotbar/hotbar", who);
   endif
endprogram

function StartCharacterCreation(who, byref chardata)
	while (who.connected)
      sleepms(2);
      
      chardata := struct{
         current_class := "",
         caminhos := array{"Obstinado"},
         subclasses:= array{},
         classes := array{struct{
            id := "Furioso",
            exp := 0,
            habs := array{},
            selected_habs := array{}
         }},
         level := 1,
         points := 1,
         vitalpoints := 0,
         hits := 500,
         mana := 100,
         stam := 30,
         god := "Anar",
         raca := "Humano",
         height := 2,
         weight := 2,
         nome := ""
      };

      if (CharacterCreationGump(who, chardata))
         continue;
      endif

      // if (!chardata.heir)
      //    chardata.Credits := 60;
      //    if (ItemPickerGump(who, chardata))
      //       continue;
      //    endif
      // endif

		// if (getNotaRP(who) == 2)
		// 	if (!YesNo(who, "Você receberá bonificações nesse personagem. Elas não estarão disponíveis no próximo. Deseja continuar?", "Sim", "Não"))
		// 		continue;
		// 	endif
		// endif
      chardata.-Credits;
		break;
	endwhile
endfunction

function CharacterCreationGump(who, byref chardata)
   var godsCfg := ReadConfigFile(":charactercreation:config/deuses");
   var classCfg := ReadConfigFile(":charactercreation:config/classes");
   var classes := struct{};
   foreach classe_name in GetConfigStringKeys(classCfg)
      var classe := FindConfigElem(classCfg, classe_name);
      if (classe.Caminho && classe.Type == "Main") 
         if (!classes[classe.Caminho]) classes[classe.Caminho] := array{}; endif
         classes[classe.Caminho].append(struct{
            caminho := classe.Caminho,
            type := classe.Type,
            name := classe_name
         });
      endif
      sleepms(2);
   endforeach

   var desc := array{"", ""};
   var available_gods;

   while (who.connected)
      available_gods := array{};
      foreach god_name in GetConfigStringKeys(godsCfg)
         var god := FindConfigElem(godsCfg, god_name);
         var races := GetConfigStringArray(god, "Race");
         if (chardata.raca in races)
            available_gods.append(struct{
               GumpPic := cint(god.GumpPic),
               Name := god_name
            });
         endif
         sleepms(2);
      endforeach

      var god := FindInArray(available_gods, struct{ name := chardata.god });
      if (!god)
         chardata.god := available_gods[1].Name;
         god := 1;
      endif

      var gump := GFCreateGump();
      
      GFDisposable(gump, 0);
      GFClosable(gump, 0);
      GFSetID(gump, GUMPID_CREATECHAR);//9260
      GFResizePic(gump, -4, 5, 9380, 441, 547);
      GFTextLine(gump, 155, 49, 2212, "Nome do Personagem");
      GFResizePic(gump, 122, 67, 9350, 195, 25);
      GFTextEntry(gump, 125, 70, 187, 20, 0, chardata.nome, 95);
      
      //header
      GFGumpPicTiled(gump, 18, 38, 394, 9, 50);
      GFGumpPicTiled(gump, 16, 512, 398, 9, 50);
      //bottom

      GFTextLine(gump, 36+2, 105, 2212, "Raça");
      GFTextLine(gump, 62, 126, 1152, "Núro");
      GFTextLine(gump, 62, 148, 1152, "Vala");
      GFTextLine(gump, 62, 169, 1152, "Alayarz");
      GFAddButton(gump, 39, 126, 210 + (chardata.raca == "Humano" || !chardata.raca), 211, GF_CLOSE_BTN, 44);
      GFAddButton(gump, 39, 148, 210 + (chardata.raca == "Elfo"), 211, GF_CLOSE_BTN, 45);
      GFAddButton(gump, 39, 169, 210 + (chardata.raca == "Meio-Elfo"), 211, GF_CLOSE_BTN, 46);
      
      GFTextLine(gump, 145, 103, 2212, "Sexo");
      GFTextLine(gump, 167, 126, 1152, "Homem");
      GFTextLine(gump, 167, 148, 1152, "Mulher");
	   GFSetRadioGroup(gump, 1);
      GFRadioButton(gump, 145, 126, 210, 211, (!who.gender), 9);
      GFRadioButton(gump, 145, 148, 210, 211, (who.gender), 10);

      GFTextLine(gump, 235, 103, 2212, "Altura");
      GFTextLine(gump, 257, 126, 1152, "Alto");
      GFTextLine(gump, 257, 148, 1152, "Mediano");
      GFTextLine(gump, 257, 169, 1152, "Baixo");
	   GFSetRadioGroup(gump, 2);
      GFRadioButton(gump, 235, 126, 210, 211, (chardata.height == 1 || !chardata.height), 11);
      GFRadioButton(gump, 235, 148, 210, 211, (chardata.height == 2), 12);
      GFRadioButton(gump, 235, 169, 210, 211, (chardata.height == 3), 13);

      GFTextLine(gump, 327, 103, 2212, "Peso");
      GFTextLine(gump, 348, 126, 1152, "Gordo");
      GFTextLine(gump, 348, 148, 1152, "Esbelto");
      GFTextLine(gump, 348, 169, 1152, "Magro");
	   GFSetRadioGroup(gump, 3);
      GFRadioButton(gump, 327, 126, 210, 211, (chardata.weight == 1 || !chardata.weight), 14);
      GFRadioButton(gump, 327, 148, 210, 211, (chardata.weight == 2), 15);
      GFRadioButton(gump, 327, 169, 210, 211, (chardata.weight == 3), 16);

      GFTextLine(gump, 20, 191, 2212, "Marcas e Características  Pessoais");
      GFResizePic(gump, 19, 209, 9350, 388, 43);
      GFTextEntry(gump, 25, 210, 375, 20, 0, desc[1], 98);
      GFTextEntry(gump, 25, 230, 375, 20, 0, desc[2], 99);
      
      GFGumpPicTiled(gump, 39, 255, 340, 9, 50); //divisor

      //caminho
      GFTextLine(gump, 189, 269, 2212, "Caminho");
      GFTextLine(gump, 109-10, 293, 1152, "Obstinado");
      GFAddButton(gump, 85-10, 293, 210 + cint(chardata.caminhos[1] == "Obstinado"), 211, GF_CLOSE_BTN, 61);
      GFTextLine(gump, 222-10, 293, 1152, "Sábio");
      GFAddButton(gump, 199-10, 293, 210 + cint(chardata.caminhos[1] == "Sábio"), 211, GF_CLOSE_BTN, 62);
      GFTextLine(gump, 313, 293, 1152, "Sagaz");
      GFAddButton(gump, 290, 293, 210 + cint(chardata.caminhos[1] == "Sagaz"), 211, GF_CLOSE_BTN, 63);
      
      // classe
      GFTextLine(gump, 193, 322, 2212, "Classe");
      GFTextLine(gump, 138, 345, 1152, classes[chardata.caminhos[1]][1].name);
      GFAddButton(gump, 115, 345, 210 + (chardata.classes[1].id == classes[chardata.caminhos[1]][1].name), 211, GF_CLOSE_BTN, 64);
      GFTextLine(gump, 265, 345, 1152, classes[chardata.caminhos[1]][2].name);
      GFAddButton(gump, 242, 345, 210+ (chardata.classes[1].id == classes[chardata.caminhos[1]][2].name), 211, GF_CLOSE_BTN, 65);

      var selected_class := FindConfigElem(classCfg, chardata.classes[1].id);
      GFHTMLArea(gump, 21, 383, 387, 100, selected_class.Description, 1, 1); // class_desc

      //god
      GFResizePic(gump, 396, 29, 5170, 292, 490);
      GFTextLine(gump, 499, 58, 2212, "Deus Venerado");
      GFGumpPic(gump, 423, 75, cint(available_gods[god].GumpPic), 0);

      if (available_gods.size() > 1)
         if (god > 1) GFAddButton(gump, 566, 477, 2224, 2224, GF_CLOSE_BTN, 31); endif
         GFTextLine(gump, 524, 473, 1152, "Trocar");
         if (god < available_gods.size())  GFAddButton(gump, 503, 477, 2223, 2223, GF_CLOSE_BTN, 32); endif
      endif

      GFAddButton(gump, 189, 489, 2076, 2077, GF_CLOSE_BTN, 2);

	   var input := GFSendGump(who, gump);

      chardata.nome := GFExtractData(input, 95);
      if (!chardata.nome) chardata.nome := ""; endif
      desc[1] := GFExtractData(input, 98);
      desc[2] := GFExtractData(input, 99);
      if (!desc[1]) desc[1] := ""; endif
      if (!desc[2]) desc[2] := ""; endif

      if (11 in input.keys)
         chardata.height := 1;
      elseif (12 in input.keys)   
         chardata.height := 2;
      elseif (13 in input.keys)   
         chardata.height := 3;
      endif

      if (14 in input.keys)   
         chardata.weight := 1;
      elseif (15 in input.keys)   
         chardata.weight := 2;
      elseif (16 in input.keys)   
         chardata.weight := 3;
      endif

      who.gender := (10 in input.keys) != 0;

      case (input[0])
         44:
            chardata.raca := "Humano";
            who.graphic 	:= 400;
            who.trueobjtype := 400;
            break;
         45:
            chardata.raca := "Elfo";
            who.graphic 	:= 605;
            who.trueobjtype := 605;
            break;
         46:
            chardata.raca := "Meio-Elfo";
            who.graphic 	:= 605;
            who.trueobjtype := 605;
            break;
         61:
            chardata.caminhos[1] := "Obstinado";
            chardata.classes[1].id := classes[chardata.caminhos[1]][1].name;
            break;
         62:
            chardata.caminhos[1] := "Sábio";
            chardata.classes[1].id := classes[chardata.caminhos[1]][1].name;
            break;
         63:
            chardata.caminhos[1] := "Sagaz";
            chardata.classes[1].id := classes[chardata.caminhos[1]][1].name;
            break;
         64:
            chardata.classes[1].id := classes[chardata.caminhos[1]][1].name;
            break;
         65:
            chardata.classes[1].id := classes[chardata.caminhos[1]][2].name;
            break;
         31:
            chardata.god := available_gods[god-1].Name;
         32:
            chardata.god := available_gods[god+1].Name;
      endcase

      if (who.gender && (who.graphic in array{605, 400}))
         who.graphic 	:= who.graphic + who.gender;
         who.trueobjtype := who.trueobjtype + who.gender;
      elseif (!who.gender && (who.graphic in array{606, 401}))
         who.graphic 	:= who.graphic -1;
         who.trueobjtype := who.trueobjtype -1;
      endif

      if (input[0] == 2)
         if (!chardata.nome || len(chardata.nome) < 3) 
            continue;
         endif

         chardata.profile := "{} {}".format(desc[1], desc[2]);
         chardata.current_class := chardata.classes[1].id;
         break;
      endif
      sleepms(2);
   endwhile
endfunction

function LookGump(who, chardata, aparencia := 0)
	var params := struct{
		"race"  := chardata.raca,
		"barba" := (chardata.raca != "Elfo")
	};

	aparencia := disguiseGump(who, params, aparencia);

	//equipa os itens de aparencia tudo
	who.color     := aparencia.corpele;
	who.truecolor := aparencia.corpele;
	//barba
	var mybarba  := GetEquipmentByLayer(who, LAYER_BEARD);
	DestroyItem(mybarba);

	var newbarba := CreateItemAtLocation(who.x, who.y, who.z, aparencia.barba, 1, who.realm);
	newbarba.color := 1109;
	newbarba.color := aparencia.corcabelo;
	EquipItem(who, newbarba);
	
	var myhair := GetEquipmentByLayer(who, LAYER_HAIR);
	DestroyItem(myhair);

	var newhair:= CreateItemAtLocation(who.x, who.y, who.z, aparencia.cabelo, 1, who.realm);
	newhair.color := 1109;
	newhair.color := aparencia.corcabelo;
	EquipItem(who, newhair);

	if ((!aparencia || aparencia.corpele == -1 || aparencia.corcabelo == -1) && !who.cmdlevel)
		SendSysMessageEx(who, "Escolha uma cor para pele e cabelos!", SSM_FAIL);
		LookGump(who, chardata, aparencia);
	elseif (YesNo(who, "Deseja manter esta aparência?" , "Sim.", "Não."))
		return 1;
	else
		LookGump(who, chardata, aparencia);
	endif
endfunction
