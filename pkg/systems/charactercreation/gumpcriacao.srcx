use cfgfile;
use uo;
use os;

include ":email:email";
include ":gumps:gumps";
include ":gumps:gumps_ex";
include ":gumps:include/requestgump";
include ":attributes:attributes";
include "include/client";
include ":disguise:disguise";
include ":charactercreation:createchar";
include ":gumps:yesno";
include ":datafile:datafile";

//cores: 1153 -> 2103 -> 2105
program createchar(who)

	if (GetObjProperty(who, "criandochar") == 1 && who.cmdlevel < 1)
		SendSysMEssageEx(who, "Delete seu personagem antes de criar de novo.", SSM_FAIL);
		return 1;
	elseif (GetObjProperty(who, "delete") == 1)
		SendSysMEssageEx(who, "Voce nao pode ter mais de um personagem por conta.", SSM_FAIL);
		return 1;
	endif

	SetObjProperty(who, "criandochar", 1);

	//destroi todos os itens equipados e na bag
	if (who.cmdlevel < 2)
		var equiped := listequippeditems(who);
		foreach item in equiped
			if (item != who.backpack && item.layer != LAYER_HAIR && item.layer != LAYER_BEARD)
				DestroyItem(item);
			endif
		endforeach

		equiped := enumerateitemsincontainer(who.backpack);
		foreach item in equiped
			DestroyItem(item);
		endforeach
		equiped := 0;
	endif

	//zeras as skills
	foreach attrib in AP_ListAttributesByType()
		AP_SetTrueSkill(who, attrib, 0);
		sleepms(10);
	endforeach

	//Gumps
	var chardata := struct;
	ShowCreateGumps(who, chardata);
	SetObjProperty(who, "chardata", chardata);

	//Status
	AP_SetTrueStat(who, "Strength", chardata.str);
	AP_SetTrueStat(who, "Dexterity", chardata.dex);
	AP_SetTrueStat(who, "Intelligence", chardata.inte);
	AP_SetTrueStat(who, "Constitution", chardata.con);

	//Basic
	if (chardata.kit != "Cavaleiro")
		CreateItemInBackpack(who, 0xba63, 100); //dinheiro
	else
		CreateItemInBackpack(who, 0xba63, 30); //dinheiro
	endif

	//who.title_race := chardata.raca;
	who.race := RACE_HUMAN;
	who.name := chardata.nome;
	if (chardata.nomefinal && chardata.nomefinal != "" && chardata.nomefinal != " ")
		who.name := chardata.nome + " " + chardata.nomefinal;
	endif
	RecalcVitals(who);

	/*=============================================
	=           Config and Set Skills            =
	=============================================*/
	var privalue := 30.0;
	var secvalue := 15.0;
	var tercvalue := 5.0;
	if (getNotaRP(who) == 2)
		privalue := 35.0;
		secvalue := 20.0;
		tercvalue := 10.0;
	endif

	var primarias := GetPrimarias(who);
	foreach primaria in primarias
		AP_setTrueSkill(who, primaria, privalue);
	endforeach

	var secundarias := GetSecundarias(who);
	foreach secundaria in secundarias
		AP_setTrueSkill(who, secundaria, secvalue);
	endforeach

	var terciarias := GetTerciarias(who);
	foreach terciaria in terciarias
		AP_setTrueSkill(who, terciaria, tercvalue);
	endforeach
	/*=====  End of Section comment block  ======*/

	AP_SetTrueSkill(who, "Gathering", 0);
	SetAllEspecializations(who, chardata);

	//Mudar Aparência
	while (CharacterApparencGump(who, chardata))
		sleepms(10);
	endwhile

	MoveObjectToLocation( who, 4230, 31, 1, who.realm, MOVEOBJECT_FORCELOCATION);
	AP_RefreshVitals(who);
	AP_SetVital(who, "Hunger", 1);

	start_script( ":email:emailMessage/sendSystemMail", array{ who, "Bem-vindo ao FLS!", "Seja bem vindo ao Forgotten Lore Shard. Este é o sistema de conversação por E-Mail. Sempre que o servidor quiser lhe comunicar algum aviso importante, você será notificado desta forma. Game Masters também podem utilizar deste sistema para lhe deixar mensangens ou iniciar uma conversação. [P] Você pode acessar esse menu através do comando '.email' ou dando duplo-clique na estrela no topo de seu paperdoll. [P] [P] Bom Jogo!"} );
	if (getNotaRP(who) == 2)
		start_script (":email:emailMessage/sendSystemMail", array{ who, "Bonificação Nota 2", "Parabéns! [P] Você se destacou na vida pasasda do seu personagem e foi premiado por isso: [P] [P] + Você receberá +5 pontos em todas suas perícias para inicio de jogo. [P] +Você irá receber +200 moedas para investir na econômia do jogo e destacar seu personagem. [P] [P] Estas bonifcações só irão valer para este personagem. Se recriar, você irá iniciar como um jogador comum [P] Bom Jogo!"} );
		CreateItemInBackpack(who, 0xba63, 200); //dinheiro
		setNotaRP(who, 0);
		SetSkillPoints(who, GetSkillPoints(who)+3);
		who.SetPoints(who.getPoints()+9);
		who.setLevel(who.getLevel()+3);
	endif
endprogram

function construirgump(byref gump, back := 0) //monta a aparência da gump
	GFClosable(gump, 0);
	GFDisposable(gump, 0);
	GFResizePic(gump, 84, 90, 9260, 460, 535);

	GFGumpPicTiled(gump, 100,100,30,510,10460);
	GFGumpPicTiled(gump, 500,100,30,510,10460);
	GFGumpPicTiled(gump, 80,88,463,16,10100);
	GFGumpPicTiled(gump, 84,610,457,16,10100);
	GFGumpPic(gump, 50,80, 10421);
	GFGumpPic(gump, 83,79, 10420);

//	GFAddAlphaRegion(gump, 127,103,375,509);
	GFGumpPic(gump, 96,200, 10411);
	GFGumpPic(gump, 33,370, 10402);

	GFTextLine(gump, 245,120,1153,"Forgotten Lore Shard");

	GFTextLine(gump, 420,580,2103,"Próximo");
	GFAddButton(gump, 470, 580, 9903, 9905, GF_CLOSE_BTN, 200);

	if (!back)
		GFTextLine(gump, 170,580,2103,"Reiniciar");
		GFAddButton(gump, 140, 580, 9909, 9911, GF_CLOSE_BTN, 201);
	endif
endfunction

function ShowCreateGumps(who, byref chardata)
	while (who.connected)
		chardata := struct;
		chardata.+Skills := dictionary;
		chardata.+credits := 100;
		chardata.+str := 40;
		chardata.+dex := 40;
		chardata.+inte := 40;
		chardata.+con := 40;
		chardata.+kit := "";

		if (RaceGump(who,chardata))
			continue;
		endif
		if (AttributeGump(who, chardata, 80))
			continue;
		endif
		if (BuyKits(who, chardata))
			continue;
		endif
		if (SkillGump(who, chardata, 20))
			continue;
		endif
		if (getNotaRP(who) == 2)
			if (!YesNo(who, "Você receberá bonificações nesse personagem. Elas não estarão disponíveis no próximo. Deseja continuar?", "Sim", "Não"))
				continue;
			endif
		endif
		if (ItemPicker(who, chardata))
			continue;
		endif

		break;
	endwhile
endfunction

function RaceGump(who, byref  chardata)
	var first_name, last_name;
	first_name := "";
	last_name := "";

	var gump := GFCreateGump();
	construirgump(gump, 1); //monta a aparência da gump

    //GFTextLine(gump, 215,200,2105,"Humanos");
	if (getNotaRP(who) == 2)
		GFTextLine(gump, 200,138,52,"Criação de Personagem Bonificado!!");
	endif
	GFTextLine(gump, 220, 170, 1153, "Defina o Nome do seu Personagem");
	GFTextLine(gump, 240, 195, 2103, "Primeiro Nome:");
	GFGumpPic(gump, 240, 215, 0x988);
	GFTextEntry(gump, 245, 217, 150, 25, 1153, first_name, 99);

	GFTextLine(gump, 240, 235, 2103, "Ultimo Nome:");
	GFGumpPic(gump, 240, 255, 0x988);
	GFTextEntry(gump, 245, 257, 150, 25, 1153, last_name, 98);

	GFSetRadioGroup(gump, 1);
	GFTextLine(gump, 180,295,1153,"Escolha o povo do seu personagem");

	GFTextLine(gump, 210,315,2103,"Zharkiano");
	GFTextLine(gump, 210,335,2103,"Thurião");
	GFTextLine(gump, 210,355,2103,"Asanita");
	GFRadioButton(gump, 180, 315, 210, 211, 1, 2);
	GFRadioButton(gump, 180, 335, 210, 211, 0, 3);
	GFRadioButton(gump, 180, 355, 210, 211, 0, 4);

	GFTextLine(gump, 350, 315, 2103,"Aquilrano");
	GFTextLine(gump, 350, 335, 2103,"Vanirio");
	GFTextLine(gump, 350, 355, 2103,"Numajene");
	GFRadioButton(gump, 320, 315, 210, 211, 0, 5);
	GFRadioButton(gump, 320, 335, 210, 211, 0, 6);
	GFRadioButton(gump, 320, 355, 210, 211, 0, 7);

	GFSetRadioGroup(gump, 2);
	GFTextLine(gump, 180,395,1153,"Escolha sua classe");
	GFTextLine(gump, 210,415,2103,"Caminho das Armas");
	GFTextLine(gump, 210,435,2103,"Caminho do Subterfugio");
	GFTextLine(gump, 210,455,2103,"Caminho da Sabedoria");
	//GFTextLine(gump, 210,475,2103,"Caminho do Artíficie");
	GFRadioButton(gump, 180, 415, 210, 211, 1, 8);
	GFRadioButton(gump, 180, 435, 210, 211, 0, 9);
	GFRadioButton(gump, 180, 455, 210, 211, 0, 10);
	//GFRadioButton(gump, 180, 475, 210, 211, 0, 8);

	GFSetRadioGroup(gump, 3);
	GFTextLine(gump, 180,515,1153,"Escolha seu sexo");
	GFTextLine(gump, 210,535,2103,"Homem");
	GFTextLine(gump, 210,555,2103,"Mulher");

	GFRadioButton(gump, 180, 535, 210, 211, 1, 11);
	GFRadioButton(gump, 180, 555, 210, 211, 0, 12);

	var input := GFSendGump(who, gump);

	if (input[0] == 200)
		first_name := GFExtractData( input, 99);
		last_name := GFExtractData( input, 98);
		if (len(first_name) < 3 || cint(len(first_name) + len(last_name)) > 17)
			SendSysMessageEx(who, "A combinacao do seu nome com sobrenome nao pode ser menor que 3 letras e nem maior que 17 letras", SSM_FAIL);
			RaceGump(who, chardata);
		elseif (3 in input.keys && 12 in input.keys)
			SendSysMessageEx(who, "Apenas personagens homens podem ser thurioes.", SSM_FAIL);
			RaceGump(who, chardata);
		endif

		foreach thing in (input.keys)
			case (thing)
				2: chardata.povo := "Zharkiano";
				   chardata.raca := "Humano";
				3: chardata.povo := "Thuriao";
				   chardata.raca := "Humano";
				4: chardata.povo := "Asanita";
				   chardata.raca := "Humano";

			   5: chardata.povo := "Aquilrano";
				  chardata.raca := "Elfo";
			   6: chardata.povo := "Vanirio";
				  chardata.raca := "Elfo";
			   7: chardata.povo := "Numajene";
				  chardata.raca := "Elfo";

				8: chardata.classe 	:= "Armas";
				9: chardata.classe 	:= "Subterfugio";
				10: chardata.classe := "Sabedoria";
				//8: chardata.classe := "Artificie";

				11: who.graphic 	:= 400;
					who.trueobjtype := 400;
					who.gender 		:= 0;
				12: who.graphic 	:= 401;
					who.trueobjtype := 401;
					who.gender 		:= 1;
			endcase

			chardata.nome := first_name;
			chardata.nomefinal := last_name;
		endforeach
	else
		RaceGump(who, chardata);
	endif
endfunction

function AttributeGump(who, byref  chardata, byref points)
	while (who.connected)
		var gump := GFCreateGump();
		construirgump(gump); //monta a aparência da gump
		GFTextLine(gump, 150,160,1153,"Defina seus atributos: " + points + " restantes. ");

		GFTextLine(gump, 200,200,2103,"Força:");
		GFTextLine(gump, 200,240,2103,"Destreza:");
		GFTextLine(gump, 200,280,2103,"Inteligência:");
		GFTextLine(gump, 200,320,2103,"Constituição:");

		GFTextLine(gump, 300,200,2103, chardata.str);
		GFTextLine(gump, 300,240,2103, chardata.dex);
		GFTextLine(gump, 300,280,2103, chardata.inte);
		GFTextLine(gump, 300,320,2103, chardata.con);

		GFAddButton(gump, 160, 205, 2436, 2436, GF_CLOSE_BTN, 2);
		GFAddButton(gump, 160, 245, 2436, 2436, GF_CLOSE_BTN, 3);
		GFAddButton(gump, 160, 285, 2436, 2436, GF_CLOSE_BTN, 4);
		GFAddButton(gump, 160, 325, 2436, 2436, GF_CLOSE_BTN, 5);

		GFAddButton(gump, 180, 205, 2437, 2438, GF_CLOSE_BTN, 6);
		GFAddButton(gump, 180, 245, 2437, 2438, GF_CLOSE_BTN, 7);
		GFAddButton(gump, 180, 285, 2437, 2438, GF_CLOSE_BTN, 8);
		GFAddButton(gump, 180, 325, 2437, 2438, GF_CLOSE_BTN, 9);

		var input := GFSendGump(who, gump);
		case (input[0])
			2:
				if (chardata.str >= 80)
					SendSysMessageEx(who, "Voce nao pode aumentar mais este atributo.", SSM_FAIL);
				else
					if (points <= 0)
						SendSysMessageEx(who, "Voce nao tem mais pontos.", SSM_FAIL);
					else
						chardata.str := chardata.str+5;
						points := points - 5;
					endif
				endif

			3:
				if (chardata.dex >= 80)
					SendSysMessageEx(who, "Voce nao pode aumentar mais este atributo.", SSM_FAIL);
				else
					if (points <= 0)
						SendSysMessageEx(who, "Voce nao tem mais pontos.", SSM_FAIL);
					else
						chardata.dex := chardata.dex+5;
						points := points - 5;
					endif
				endif
			4:
				if (chardata.inte >= 80)
					SendSysMessageEx(who, "Voce nao pode aumentar mais este atributo.", SSM_FAIL);
				else
					if (points <= 0)
						SendSysMessageEx(who, "Voce nao tem mais pontos.", SSM_FAIL);
					else
						chardata.inte := chardata.inte+5;
						points := points - 5;
					endif
				endif
			5:
				if (chardata.con >= 80)
					SendSysMessageEx(who, "Voce nao pode aumentar mais este atributo.", SSM_FAIL);
				else
					if (points <= 0)
						SendSysMessageEx(who, "Voce nao tem mais pontos.", SSM_FAIL);
					else
						chardata.con := chardata.con+5;
						points := points - 5;
					endif
				endif

			6:
				if (chardata.str <= 40)
					SendSysMessageEx(who, "Voce nao pode diminuir mais este atributo.", SSM_FAIL);
				else
					chardata.str := chardata.str-5;
					points := points + 5;
				endif
			7:
				if (chardata.dex <= 40)
					SendSysMessageEx(who, "Voce nao pode diminuir mais este atributo.", SSM_FAIL);
				else
					chardata.dex := chardata.dex-5;
					points := points + 5;
				endif
			8:
				if (chardata.inte <= 40)
					SendSysMessageEx(who, "Voce nao pode diminuir mais este atributo.", SSM_FAIL);
				else
					chardata.inte := chardata.inte-5;
					points := points + 5;
				endif
			9:
				if (chardata.con <= 40)
					SendSysMessageEx(who, "Voce nao pode diminuir mais este atributo.", SSM_FAIL);
				else
					chardata.con := chardata.con-5;
					points := points + 5;
				endif
		endcase
		if (input[0] == 200)
			if (points > 0 && !who.cmdlevel)
				SendSysMessageEx(who, "Você ainda possui pontos para gastar.", SSM_FAIL);
			else
				break;
			endif
		elseif (input[0] == 201)
			return 1;
		endif
	endwhile
endfunction

function BuyKits(who, byref chardata)

	var cfg := ReadConfigFile(":charactercreation:config/kits");
	var keys:= GetConfigStringKeys( cfg );
	var kits := array;
	var selectedkit := 1;
	foreach key in keys
		var elem         := FindConfigElem(cfg, key);
		var canadd       := 1;
		var racas        := GetConfigStringArray( elem, "Raca" );
		var povos        := GetConfigStringArray( elem, "Povo" );
		var classes      := GetConfigStringArray( elem, "Classe" );
		var require_nota := GetConfigInt( elem, "NotaRP" );

		if ((racas.size() >= 1) && (chardata.raca in racas))
			//sendsysmessage(who, " racas " + racas + " chardata.raca " + chardata.raca);
			canadd := 0;
		endif
		if ((classes.size()>=1) && (chardata.classe in classes))
			//sendsysmessage(who, " classes " + classes + " chardata.classe " + chardata.classe);
			canadd := 0;
		endif
		if ((povos.size() >= 1) && (chardata.povo in povos))
			//sendsysmessage(who, " povos " + povos + " chardata.povo " + chardata.povo);
			canadd := 0;
		endif

		if (require_nota && getNotaRP(who) != require_nota)
			canadd := 0;
		endif

		if (canadd)
			var kit           := struct;
			kit.+nome         := GetconfigString(elem, "Nome");
			kit.+desc         := GetconfigString(elem, "Desc");
			kit.+vantagens    := GetConfigString( elem, "Vantagens" );
			kit.+desvantagens := GetConfigString( elem, "Desvantagens" );
			kits.append(kit);

		endif
		sleepms(5);
	endforeach


	if (kitgump(who, chardata, selectedkit, kits))
		return 1;
	endif

endfunction


function kitgump(who, byref chardata, byref selectedkit, byref  kits)
	while (who.connected)
		var gump := GFCreateGump();
		construirgump(gump); //monta a aparência da gump
		GFTextLine(gump, 150,160,2103,"Você pode escolher um dos backgrounds abaixo:");

		var i := 1;
		var x := 170;
		var y := 200;
		for ( i := 1; i <= kits.size(); i := i + 1)
			if ( i == selectedkit)
				GFTextLine(gump, x,y,2105,kits[i].nome);
			else
				GFTextLine(gump, x,y,2103,kits[i].nome);
			endif

			var selected := 0;
			if (i == selectedkit)
				selected := 1;
			endif

			if  (i == selectedkit)
				GFAddButton(gump, (x-20), y, 9703, 9703, GF_CLOSE_BTN, i);
			else
				GFAddButton(gump, (x-20), y, 9702, 9703, GF_CLOSE_BTN, i);
			endif
			y := y + 20;
			if (i == 14)
				y := 200;
				x := 400;
			endif
		endfor

		var str := "";
		if ( kits[selectedkit].desc)
			str :=  str + kits[selectedkit].desc + "<BR>";
		endif
		if ( kits[selectedkit].vantagens)
			str :=  str + kits[selectedkit].vantagens + "<BR>";
		endif
		if ( kits[selectedkit].desvantagens)
			str :=  str + kits[selectedkit].desvantagens + "<BR>";
		endif

		GFHTMLArea(gump, 150, 480, 330, 100, str, 3000);

		var ret := GFSendGump(who, gump);

		//sendsysmessage(who, "ret.keys " + ret.keys[2]);

		if (cint(ret[0]) == 200)
			var kitname := kits[selectedkit].nome;
			chardata.kit := kitname;
			SendSysMessageEx(who, "Seu kit sera: " + chardata.kit, SSM_INFO);
			break;
		elseif (cint(ret[0]) == 201)
			return 1;
		else
			selectedkit := ret[0];
		endif
	endwhile
endfunction



function SkillGump(who, byref  chardata, byref skillspoints)
	chardata.+Skills := dictionary;
	chardata.+Primarias := 2;

	if (chardata.kit == "Sabe-Tudo");
		skillspoints := skillspoints + 5;
		chardata.Primarias := 1;
	endif
	if (chardata.kit == "Versatilidade")
		skillspoints := skillspoints + 2;
	endif

	var cfg,elem;
	cfg := ReadConfigFile(":charactercreation:config/classes");
	elem := FindConfigElem(cfg, cstr(chardata.classe) );


	var primarias    := GetConfigStringArray(elem, "P");
	var secundarias  := GetConfigStringArray(elem, "S");
	var terciarias   := GetConfigStringArray(elem, "T");
	var quaternarias := GetConfigStringArray(elem, "Q");


	if (chardata.kit == "Artifice")

		var novasquaternarias := array;
		var novasterciarias := array;

		foreach skill in quaternarias
			if ( (skill != "Survival") && (skill != "HandleAnimal") && (skill != "Alchemy")
			&& (skill != "WomensWork") && (skill != "MetalWorking") && (skill != "WoodWorking")
			&& (skill != "Research") && (skill != "CookWork"))
				novasquaternarias.append(skill);
			endif

		endforeach

		foreach skill in terciarias
			if ( (skill != "Survival") && (skill != "HandleAnimal") && (skill != "Alchemy")
			&& (skill != "WomensWork") && (skill != "MetalWorking") && (skill != "WoodWorking")
			&& (skill != "Research") && (skill != "CookWork"))
				novasquaternarias.append(skill);
			endif

		endforeach

		foreach skill in secundarias
			if ( (skill != "Survival") && (skill != "HandleAnimal") && (skill != "Alchemy")
			&& (skill != "WomensWork") && (skill != "MetalWorking") && (skill != "WoodWorking")
			&& (skill != "Research") && (skill != "CookWork"))
				novasterciarias.append(skill);
			endif

		endforeach

		foreach skill in primarias
			if ( (skill != "Survival") && (skill != "HandleAnimal") && (skill != "Alchemy")
			&& (skill != "WomensWork") && (skill != "MetalWorking") && (skill != "WoodWorking")
			&& (skill != "Research") && (skill != "CookWork") )
				novasterciarias.append(skill);
			endif

		endforeach

		secundarias := array;
		primarias := array;
		terciarias := novasterciarias;
		quaternarias := novasquaternarias;
		secundarias.append("Survival");
		secundarias.append("HandleAnimal");
		secundarias.append("Alchemy");
		secundarias.append("Research");
		primarias.append("WomensWork");
		primarias.append("MetalWorking");
		primarias.append("WoodWorking");
		primarias.append("CookWork");

		var i := 1;
		foreach skill in quaternarias //limpa as que vao ser primarias e sec
			//sendsysmessage(who, "skill " + skill);
			if ( (skill == "Survival") || (skill == "HandleAnimal") || (skill == "Alchemy")
			|| (skill == "WomensWork") || (skill == "MetalWorking") || (skill == "WoodWorking")
			|| (skill == "Research") || (skill == "CookWork") )

				//sendsysmessage(who, "deletando skill " + skill);
				var err := quaternarias.erase(i);
				if (err == error)
					sendsysmessage(who, " " + err);
				endif
			endif
			i := i + 1;
		endforeach

		i := 1;
		foreach skill in terciarias //limpa as que vao ser primarias e sec
			//sendsysmessage(who, "skill " + skill);
			if ( (skill == "Survival") || (skill == "HandleAnimal") || (skill == "Alchemy")
			|| (skill == "WomensWork") || (skill == "MetalWorking") || (skill == "WoodWorking")
			|| (skill == "Research") || (skill == "CookWork") )

				//sendsysmessage(who, "deletando skill " + skill);
				var err := quaternarias.erase(i);
				if (err == error)
					sendsysmessage(who, " " + err);
				endif
			endif
			i := i + 1;
		endforeach

	endif


	if (chardata.kit == "Ranger")

		var i := 1;
		foreach skill in primarias //reduz as primarias
			if ( skill == "Tactics")
				primarias.erase(i);
				secundarias.append("Tactics");
			endif
			i := i + 1;
		endforeach

		i := 1;
		foreach skill in primarias //reduz as primarias
			if (skill == "Parry")
				primarias.erase(i);
				terciarias.append("Parry");
			endif
			i := i + 1;
		endforeach

		//sobe as secundarias
		i := 1;
		foreach skill in secundarias //reduz as primarias
			if ( skill == "Survival")
				secundarias.erase(i);
				primarias.append("Survival");
			endif
			i := i + 1;
		endforeach

		//sobe as terciarias
		i := 1;
		foreach skill in terciarias //reduz as primarias
			if ( skill == "Sneak")
				terciarias.erase(i);
				secundarias.append("Sneak");;
			endif
			i := i + 1;
		endforeach

		//sobe as quaternarias
		i := 1;
		foreach skill in quaternarias //reduz as primarias
			if ( skill == "HandleAnimal")
				quaternarias.erase(i);
				terciarias.append("HandleAnimal");
			endif
			i := i + 1;
		endforeach
	endif

	while (who.connected)
		var gump := GFCreateGump();
		construirgump(gump); //monta a aparência da gump
		GFTextLine(gump, 150,160,2103,"Defina suas skills iniciais, você tem " + skillspoints + " pontos.");

		var x := 180;
		var y := 200;

		foreach skill in primarias
			GFTextLine(gump, x, y, 88, GetTranslatedName(cstr(skill)));

			var value := chardata.Skills[skill];
			if (!value)
				value := 0;
			endif
			GFTextLine(gump, x+200, y, 88, value);

			GFAddButton(gump, x-10, y+3, 2436, 2436, GF_CLOSE_BTN, GetSkillIdFromName(skill));

			if (chardata.Skills[skill] >= 1)
				GFAddButton(gump, x-20, y+3, 2437, 2438, GF_CLOSE_BTN, (300+GetSkillIdFromName(skill)));
			endif

			y := y + 20;
		endforeach

		foreach skill in secundarias
			GFTextLine(gump, x, y, 80, GetTranslatedName(cstr(skill)));

			var value := chardata.Skills[skill];
			if (!value)
				value := 0;
			endif
			GFTextLine(gump, x+200, y, 80, cstr(value));

			GFAddButton(gump, x-10, y+3, 2436, 2436, GF_CLOSE_BTN, GetSkillIdFromName(skill));

			if (chardata.Skills[skill] >= 1)
				GFAddButton(gump, x-20, y+3, 2437, 2438, GF_CLOSE_BTN, (300+GetSkillIdFromName(skill)));
			endif

			y := y + 20;
		endforeach


		foreach skill in terciarias
			GFTextLine(gump, x, y, 52, GetTranslatedName(cstr(skill)));

			var value := chardata.Skills[skill];
			if (!value)
				value := 0;
			endif
			GFTextLine(gump, x+200, y, 52, cstr(value));

			GFAddButton(gump, x-10, y+3, 2436, 2436, GF_CLOSE_BTN, GetSkillIdFromName(skill));

			if (chardata.Skills[skill] >= 1)
				GFAddButton(gump, x-20, y+3, 2437, 2438, GF_CLOSE_BTN, (300+GetSkillIdFromName(skill)));
			endif

			y := y + 20;
		endforeach

		foreach skill in quaternarias
			GFTextLine(gump, x, y, 38, GetTranslatedName(cstr(skill)));

			var value := chardata.Skills[skill];
			if (!value)
				value := 0;
			endif
			GFTextLine(gump, x+200, y, 38, cstr(value));

			GFAddButton(gump, x-10, y+3, 2436, 2436, GF_CLOSE_BTN, GetSkillIdFromName(skill));

			if (chardata.Skills[skill] >= 1)
				GFAddButton(gump, x-20, y+3, 2437, 2438, GF_CLOSE_BTN, (300+GetSkillIdFromName(skill)));
			endif

			y := y + 20;
		endforeach

		var input := GFSendGump(who, gump);
		input := input[0];
		if (input != 200 && input != 201 )
			if (input >= 300)
				input := input - 300;
				var skillname := GetSkillNameFromId(input);
				var custo := SkillPrice(skillname, primarias, secundarias, terciarias, quaternarias);
				if (chardata.Skills[skillname] == 3)
					chardata.Skills[skillname] := 2;
					chardata.Primarias := chardata.Primarias + 1;
					skillspoints := skillspoints + custo;
				elseif ( chardata.Skills[skillname] == 2 )
					chardata.Skills[skillname] := 1;
					skillspoints := skillspoints + custo;
				elseif (chardata.Skills[skillname] == 1)
					chardata.Skills.erase(skillname);
					skillspoints := skillspoints + custo;
				endif
			else
				var skillname := GetSkillNameFromId(input);
				var custo := SkillPrice(skillname, primarias, secundarias, terciarias, quaternarias);

				if (skillspoints >= custo) //se tem pontos pra comprar
					if (chardata.Skills[skillname] == 3)//se ja for primaria
						SendSysMessage(who, "Voce ja tem essa skill primaria!");
					elseif (chardata.Skills[skillname] == 2) //se for secundaria
						if (chardata.Primarias > 0)
							chardata.Skills[skillname] := CInt(chardata.Skills[skillname])+1;
							chardata.Primarias := chardata.Primarias - 1;
							skillspoints := skillspoints - custo;
						else
							SendSysMessage(who, "Voce nao pode comprar mais skills primarias!");
						endif
					elseif (chardata.Skills[skillname] == 1) //se for terciaria
						chardata.Skills[skillname] := CInt(chardata.Skills[skillname])+1;
						skillspoints := skillspoints - custo;
					else //se nao tiver comprado ainda
						chardata.Skills[skillname] := CInt(chardata.Skills[skillname])+1;
						skillspoints := skillspoints - custo;
					endif
				else
					SendSysMessage(who, "Voce nao tem pontos para comprar esta skill.");
				endif
			endif
		else
			if (input == 200)
				var skillsmap := chardata.Skills;
				chardata.Skills["Gathering"] := 3;
				var skillsArray := skillsmap.keys();
				foreach skill in skillsArray
					var value := 0;
					if ( chardata.Skills[skill] == 3)
						value := 25;
					elseif (chardata.Skills[skill] == 2)
						value := 10;
					else
						value := 5;
					endif
	/*				if ( AP_GetTrueSkill(who, skill) == 0)
						AP_SetTrueSkill(who, skill, value);
					endif*/
				endforeach
			elseif (input == 201)
				return 1;
			endif
			break;
		endif
	endwhile
endfunction

function SkillPrice(input, primarias, secundarias, terciarias, quaternarias)

	if (input in primarias)
		return 1;
	elseif (input in secundarias)
		return 2;
	elseif (input in terciarias)
		return 3;
	elseif (input in quaternarias)
		return 4;
	endif

endfunction

function ItemPicker(who, byref chardata)
	while (who.connected)
		var gump := GFCreateGump();
		construirgump(gump, 1); //monta a aparência da gump
		GFTextLine(gump, 180,160,1153,"Compre seu equipamento inicial: " + chardata.credits + " creditos.");

		GFTextLine(gump, 150, 180, 2103,"Armas");
		GFTextLine(gump, 200, 180, 2103,"Armaduras");
		GFTextLine(gump, 280, 180, 2103,"Roupas");
		GFTextLine(gump, 330, 180, 2103,"Ferramentas");
		GFTextLine(gump, 420, 180, 2103,"Outros");

		GFAddButton(gump, 190, 185, 2437, 2438, GF_PAGE_BTN, 1);
		GFAddButton(gump, 270, 185, 2437, 2438, GF_PAGE_BTN, 2);
		GFAddButton(gump, 320, 185, 2437, 2438, GF_PAGE_BTN, 3);
		GFAddButton(gump, 410, 185, 2437, 2438, GF_PAGE_BTN, 4);
		GFAddButton(gump, 460, 185, 2437, 2438, GF_PAGE_BTN, 5);

		UnloadConfigFile(":charactercreation:config/itempicker");
		var cfg := ReadConfigFile(":charactercreation:config/itempicker");
		var paginas := GetConfigStringArray(FindConfigElem(cfg, "pages"), "page");

		var pagecount := 1;
		var itemcount := 1;
		var itemsname := array;
		var itemscost := array;

		foreach page in paginas
			GFPage(gump, pagecount);
			var elem := FindConfigElem(cfg, page);

			var items := GetConfigStringDictionary(elem, "item");
			var itemsgroups := GetConfigStringDictionary(elem, "Group");

			foreach item in (itemsgroups.keys())
				items[item] :=  itemsgroups[item];
			endforeach

			var i := 1;
			foreach item in (items.keys())
				itemsname.append(item);
				itemscost.append(CInt(items[item]));

				GFTextLine(gump, 180, 200+(i*20), 2105, cstr(item)); //Objeto Nome
				GFTextLine(gump, 450, 200+(i*20), 2105, items[item]); //Objeto Nome
				GFAddButton(gump, 160, 200+(i*20), 9702, 9703, GF_CLOSE_BTN, 50+itemcount); //Botaum

				itemcount := itemcount + 1;
				i := i + 1;
			endforeach

			pagecount := pagecount + 1;
		endforeach

		var input := GFSendGump(who, gump);
		input := input[0];

		if (input > 50 && input != 200)
			var index := input - 50;
			var itemname := itemsname[index];
			var custo := CInt(itemscost[index]);

			if (chardata.credits < custo)
				SendsysMessageEx(who, "Voce nao possui creditos para este item.", SSM_FAIL);
				ItemPicker(who, chardata);
			else
				chardata.credits := chardata.credits - custo;
				var items := GetConfigStringDictionary(FindConfigElem(cfg, itemname), "item");
				if (items == error) //nao eh group
					var amount := Cint(GetconfigInt(FindConfigElem(cfg, "DefaultAmount"),  itemname));
					if (amount == 0)
						amount := 1;
					endif
					var itm := CreateItemInBackpack(who, itemname,  amount);
					itm.quality := 0.6;
				else
					foreach item in (items.keys())
						var amount := Cint(GetconfigInt(FindConfigElem(cfg, "DefaultAmount"),  item));
						if (amount == 0)
							amount := 1;
						endif
						var itm := CreateItemInBackpack(who, item, amount);
						itm.quality := 0.6;
					endforeach
				endif
			endif
		else
			break;
		endif

	endwhile

endfunction

function CharacterApparencGump(who, chardata)
	var disfarce := struct;
	disfarce.+barba := "";
	disfarce.+cabelo := "";
	disfarce.+corcabelo := -1;
	disfarce.+corbarba := -1;
	disfarce.+corpele := -1;

	escolherCabelo(who, disfarce, chardata.povo);
	escolheCorCabelo(who, disfarce, 0, chardata.povo, 1);
	if (chardata.raca != "Elfo")
		escolherBarba(who, disfarce);
	endif
	SkinGump(who, disfarce, chardata.povo, 1);

	//equipa os itens de aparencia tudo
	who.color    := disfarce.corpele;
	who.truecolor:= disfarce.corpele;
	//barba
	var mybarba  := GetEquipmentByLayer(who, LAYER_BEARD);
	DestroyItem(mybarba);

	var newbarba := CreateItemAtLocation(who.x, who.y, who.z, disfarce.barba, 1, who.realm);
	newbarba.color := 1109;
	newbarba.color := disfarce.corcabelo;
	EquipItem(who, newbarba);
	
	var myhair := GetEquipmentByLayer(who, LAYER_HAIR);
	DestroyItem(myhair);

	var newhair:= CreateItemAtLocation(who.x, who.y, who.z, disfarce.cabelo, 1, who.realm);
	newhair.color := 1109;
	newhair.color := disfarce.corcabelo;
	EquipItem(who, newhair);

	if (YesNo(who, "Deseja manter esta aparência?" , "Sim.", "Nao."))
		return 0;
	else
		return 1;
	endif
endfunction

function SetAllEspecializations(who, chardata);
	if (chardata.Skills["Alchemy"] == 2)
		var book := createiteminbackpack(who, "alchemybook");
		setobjproperty(book, "serialid", who.serial);
		setobjproperty(book, "marked",who.name + " - " + who.acctname);
	elseif (chardata.Skills["Alchemy"] == 3)
		var book1:= CreateItemInBackpack(who, "alchemybook");
		setobjproperty(book1, "serialid", who.serial);
		setobjproperty(book1, "marked",who.name + " - " + who.acctname);
		var recipes := array;
		recipes := CreateBasicRecipes();
		var book2 := createiteminbackpack(who, "alchemybook");
		setobjproperty(book2, "recipes", recipes);
		setobjproperty(book2, "serialid",who.serial);
		setobjproperty(book2, "marked",who.name + " - " + who.acctname);
	endif

	case(chardata.kit)
	    "Corpulento":
			AP_SetTrueStat(who, "Strength", chardata.str+5);
			AP_SetTrueStat(who, "Dexterity", chardata.dex-5);
	    	break;
	    "Gênio":
			AP_SetTrueStat(who, "Strength", chardata.str-5);
			AP_SetTrueStat(who, "Intelligence", chardata.inte+5);
	    	break;
	    "Ágil":
			AP_SetTrueStat(who, "Strength", chardata.str-5);
			AP_SetTrueStat(who, "Dexterity", chardata.dex+5);
	    	break;
	    "Velho":
			AP_SetTrueStat(who, "Strength", chardata.str-5);
			AP_SetTrueStat(who, "Intelligence", chardata.inte+10);
			AP_SetTrueStat(who, "Dexterity", chardata.dex-5);
			break;
		"Resistente":
			AP_SetTrueStat(who, "Strength", chardata.inte-5);
			AP_SetTrueStat(who, "Constitution", chardata.con+10);
			AP_SetTrueStat(who, "Dexterity", chardata.dex-5);
			break;
		"Versatilidade":
			AP_SetTrueStat(who, "Strength", chardata.str-5);
			AP_SetTrueStat(who, "Intelligence", chardata.inte-5);
			AP_SetTrueStat(who, "Dexterity", chardata.dex-5);
			AP_SetTrueStat(who, "Constitution", chardata.con-5);
			break;
		"Shimoriano":
			SetObjProperty(who, "spelluser", "Mesum");
			//Create Scroll with Autorization for Shimoria
			var ordem := CreateItemInBackpack(who, 8792, 1);
			SetName(ordem, "Autorização de Shimoria para " + who.name);

			//Create Ring for Shimoria
			var ring  := CreateItemInBackpack(who, "ring", 1);
			ring.color:= 1150;
			SetObjProperty(ring, "descmod", "Shimoriano");
			SetName(ring, "Anel de Shimoria");

			//Create Grimorie with Scrolls Spells
			var grimorio := createiteminbackpack(who, "grimorio", 1);
			setobjproperty(grimorio, "serialid", who.serial);
			setobjproperty(grimorio, "marked",who.name + " - " + who.acctname);
			var spellinfo := struct;

			var p1 := createiteminbackpack(who, "pergaminhomagico1");
			spellinfo.+id := 43;
			SetObjProperty(p1, "spellinfo", spellinfo);

			p1 := createiteminbackpack(who, "pergaminhomagico1");
			spellinfo.id := 44;
			SetObjProperty(p1, "spellinfo", spellinfo);

			// p1 := createiteminbackpack(who, "pergaminhomagico1");
			// spellinfo.id := 2;
			// SetObjProperty(p1, "spellinfo", spellinfo);
			//
			// p1 := createiteminbackpack(who, "pergaminhomagico1");
			// spellinfo.id := 28;
			// SetObjProperty(p1, "spellinfo", spellinfo);
			break;
		"Acolito do Panteao Zhark":
			var robe := CreateItemInBackpack(who, 0x1389, 1); //bodysash
			SetObjProperty(robe, "description", "Robe com bordado do símbolo do clero de Zharkia");
			SetObjProperty(robe, "cannotdye", 1);
			SetObjProperty(robe, "descmod", "Acólito de Zhark");
			SetObjProperty(who, "spelluser", "Monge");
			var terco := CreateItemInBackpack(who, 0x790c,  1);
			SetObjProperty(terco, "spellids", array{1});
			SetObjProperty(terco, "monge", who.serial);
			SetObjProperty(terco, "cargas", 40);
			terco.newbie := 1;
			break;
		"Defensor do Reino Zharkes":
			var capa := CreateItemInBackpack(who, 0x1541, 1); //bodysash
			capa.color := 2117;
			SetObjProperty(capa, "description", "Faixa de Defensor de Zharkia de " + who.name + "<BR>");
			SetObjProperty(capa, "cannotdye", 1);
			SetObjProperty(capa, "descmod", "Defensor Zharkía");
			SetName(capa, "Faixa");
			break;
		// "Membro da Nobreza":
		// 	if (who.graphic == 400)
		// 		who.title_prefix := "Sir";
		// 	else
		// 		who.title_prefix := "Lady";
		// 	endif
		// 	var ring := CreateItemInBackpack(who, 0x108a, 1); //ring
		// 	var NomeDaFamilia := cstr(RequestGump(who, "Escreva o Nome da sua Família"));
		// 	var FamiliaVassala := cstr(RadioGump(who, 270, 200, "Para quem irá prestar Vassalagem?", array{"Rothenien","Khumardigann","Hivyttain","Zanshirdd"}));
		// 	if (FamiliaVassala != "Nenhuma")
		// 		SetObjProperty(ring, "description", "Anel Da Família: " + NomeDaFamilia + "<br> Vassala Dos: " + FamiliaVassala);
		// 	else
		// 		SetObjProperty(ring, "description", "Anel Da Família: " + NomeDaFamilia);
		// 	endif
		// 	SetObjProperty(ring, "familia", NomeDaFamilia);
		// 	SetObjProperty(ring, "description", "Anel Da Famí­lia: " + NomeDaFamilia + "<br> Vassala Dos: " + FamiliaVassala);
		// 	SetName(ring, "Anel com Símbolo de Familia");
		// 	break;
		"Cavaleiro":
			var cavalo := CreateNpcFromTemplate(":ghaia:horse2", who.x, who.y-10, who.z, 0, who.realm);
			cavalo.SetMaster(who);
			SetObjProperty(cavalo, "owner", who.serial);
			SetObjProperty(cavalo, "name", cavalo.name);
			SetObjproperty(cavalo, "script", cavalo.script);
			cavalo.script := ":ghaia:follower";
			RestartScript(cavalo);
			var tamed := array;
			tamed.append(cavalo.serial);
			SetObjProperty(who, "TamedPets", tamed);
			break;
		"Característica Marcante":
			var caracteristica := cstr(RequestGump(who, "Entre com a caracteristica do personagem. Seja Breve e Direto!"));
			SetObjProperty(who, "description", caracteristica);
			break;
		"Título Conhecido":
			var caracteristica := cstr(RequestGump(who, "Entre com o Titulo do seu personagem!"));
			who.title_suffix := caracteristica;
			break;
		"Rico":
			CreateItemInBackpack(who, 0xba63, 200); //dinheiro
			break;
		"Artifice":
			AP_SetTrueSkill(who, EXTRACAO, 20);
			break;
		"Pacto com Asan":
			SetObjProperty(who, "dpmod", 10);
			break;
		"Escravo Vanirio":
			setObjProperty(who, "description", "Marca de escravo no rosto");
			setObjProperty(who, "hitsmod", 10);
			break;
	endcase

endfunction

function getNotaRP(who)
	var nota := cint(FindAccount(who.acctname).getprop("nota"));
	if (!nota)
		setNotaRP(who, 0);
	endif
	return nota;
endfunction

function setNotaRP(who, nota)
	return findAccount(who.acctname).setProp("nota", nota);
endfunction
